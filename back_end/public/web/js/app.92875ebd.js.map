{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/app/mutations.ts","webpack:///./src/store/app/state.ts","webpack:///./src/store/app/actions.ts","webpack:///./src/store/app/getters.ts","webpack:///./src/store/auth/mutations.ts","webpack:///./src/store/app/index.ts","webpack:///./src/store/auth/state.ts","webpack:///./src/store/auth/actions.ts","webpack:///./src/store/auth/index.ts","webpack:///./src/store/index.ts","webpack:///./src/components/SendArticleWithPositioning.vue?2fd9","webpack:///./src/components/PeerChat.vue?7727","webpack:///./src/store/auth/getters.ts","webpack:///./src/views/Home.vue","webpack:///./src/components/SendArticleWithPositioning.vue","webpack:///./src/global/Positions.ts","webpack:///./src/components/SendArticleWithPositioning.vue?f98a","webpack:///./src/components/SendArticleWithPositioning.vue?273f","webpack:///./src/components/PeerChat.vue","webpack:///./src/components/PeerChat.vue?d67e","webpack:///./src/components/PeerChat.vue?cc28","webpack:///./src/views/Home.vue?26af","webpack:///./src/views/Home.vue?c772","webpack:///./src/views/RealTimeChatBox_receiver.vue","webpack:///./src/lib/peerjs/lib/logger.ts","webpack:///./src/lib/peerjs/lib/supports.ts","webpack:///./src/lib/peerjs/lib/util.ts","webpack:///./src/lib/peerjs/lib/enums.ts","webpack:///./src/lib/peerjs/lib/socket.ts","webpack:///./src/lib/peerjs/lib/negotiator.ts","webpack:///./src/lib/peerjs/lib/baseconnection.ts","webpack:///./src/lib/peerjs/lib/mediaconnection.ts","webpack:///./src/lib/peerjs/lib/encodingQueue.ts","webpack:///./src/lib/peerjs/lib/dataconnection.ts","webpack:///./src/lib/peerjs/lib/api.ts","webpack:///./src/lib/peerjs/lib/peer.ts","webpack:///./src/config/RTCPeerConnectionConfiguration.ts","webpack:///./src/config/peerjs_config.ts","webpack:///./src/views/RealTimeChatBox_receiver.vue?6e48","webpack:///./src/views/RealTimeChatBox_receiver.vue?f8fd","webpack:///./src/router/index.ts","webpack:///./src/App.vue?1374","webpack:///./src/App.vue","webpack:///./src/App.vue?97f5","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts","webpack:///./src/views/RealTimeChatBox_receiver.vue?f3cf"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","AppMutationTypes","loading","todos","AppActionTypes","mutations","SetLoading","state","SuccessGetTodos","getters","AuthMutationTypes","actions","StartGetTodos","commit","a","log","AppModule","API_ACCESS_TOKEN","AuthActionTypes","SET_API_ACCESS_TOKEN","token","AuthModule","AllMutationTypes","APP","AUTH","store","plugins","useStore","AuthGetterTypes","isAuthenticated","class","for","submitForm","id","titleInput","contentInput","style","resMessage","navigator","geolocation","getCurrentPosition","position","res","latitude","coords","longitude","enableHighAccuracy","getPosition","this","currentPosition","sendArticleToServer","title","content","article","post","response","render","__scopeId","recvId","components","SendArticleWithPositioning","PerChat","myPeerID","connectTarget","DoConnect","status","currentinput","SubmitMessage","chatList","item","index","LogLevel","Supports","isIOS","includes","platform","supportedBrowsers","minFirefoxVersion","minChromeVersion","minSafariVersion","RTCPeerConnection","browser","getBrowser","version","getVersion","validBrowser","browserDetails","tempPc","RTCRtpTransceiver","supported","addTransceiver","close","isWebRTCSupported","isBrowserSupported","isUnifiedPlanSupported","DEFAULT_CONFIG","iceServers","urls","username","credential","sdpSemantics","util","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","chunkedMTU","defaultConfig","browserVersion","supports","pc","webRTC","audioVideo","binaryBlob","reliable","dc","createDataChannel","ordered","binaryType","pack","unpack","_dataCount","test","blob","chunks","size","total","Math","ceil","start","end","min","b","__peerData","cb","fr","FileReader","evt","readAsArrayBuffer","binary","byteArray","Uint8Array","charCodeAt","buffer","random","toString","substr","location","protocol","LOG_PREFIX","ConnectionEventType","ConnectionType","PeerEventType","PeerErrorType","SerializationType","SocketEventType","ServerMessageType","_logLevel","Disabled","logLevel","All","args","_print","Warnings","Errors","fn","rest","copy","warn","secure","host","port","path","pingInterval","_disconnected","_messagesQueue","wsProtocol","_baseUrl","_id","wsUrl","_socket","WebSocket","onmessage","JSON","parse","logger","emit","Message","onclose","_cleanup","Disconnected","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","stringify","Heartbeat","send","readyState","copiedQueue","connection","options","peerConnection","_startPeerConnection","Media","_stream","_addTracksToConnection","originator","Data","dataConnection","config","dataChannel","label","initialize","_makeOffer","handleSDP","sdp","provider","_setupListeners","peerId","peer","connectionId","connectionType","onicecandidate","candidate","socket","Candidate","payload","dst","oniceconnectionstatechange","iceConnectionState","noop","IceStateChanged","ondatachannel","channel","getConnection","ontrack","stream","streams","mediaConnection","_addStreamToMediaConnection","peerConnectionNotClosed","signalingState","dataChannelNotClosed","createOffer","constraints","offer","sdpTransform","setLocalDescription","metadata","serialization","Offer","emitError","WebRTC","createAnswer","answer","Answer","RTCSessionDescription","self","setRemoteDescription","_makeAnswer","ice","sdpMLineIndex","sdpMid","addIceCandidate","RTCIceCandidate","addTrack","getTracks","forEach","track","addStream","_open","_localStream","MediaConnection","ID_PREFIX","randomToken","_negotiator","startConnection","_remoteStream","remoteStream","Stream","handleCandidate","_payload","messages","_getMessages","handleMessage","cleanup","_removeConnection","open","Close","fileReader","_queue","_processing","doNextTask","destroy","queue","processing","abort","_buffer","_bufferSize","_buffering","_chunkedData","_encodingQueue","DataConnection","Binary","on","ab","_bufferedSend","_dc","_configureDataChannel","Open","_handleDataMessage","datatype","constructor","isBinarySerialization","BinaryUTF8","deserializedData","Blob","blobToArrayBuffer","unpackedData","ArrayBuffer","String","binaryStringToArrayBuffer","_handleChunk","chunkInfo","count","removeAllListeners","chunked","_sendChunks","enque","msg","_trySend","bufferedAmount","MAX_BUFFERED_AMOUNT","_tryBuffer","blobs","_options","method","url","queryString","Date","getTime","_buildUrl","fetch","text","pathError","helpfulError","json","userId","_lastServerId","_destroyed","_connections","Map","_lostMessages","debug","Peer","DEFAULT_KEY","hostname","isSecure","logFunction","setLogFunction","_api","_createServerConnection","validateId","_delayedAbort","InvalidID","_initialize","retrieveId","catch","_abort","ServerError","BrowserIncompatible","plainConnections","k","v","_handleMessage","SocketError","disconnected","Network","disconnect","SocketClosed","IdTaken","UnavailableID","InvalidKey","Leave","_cleanupPeer","delete","Expire","PeerUnavailable","_addConnection","Call","Connection","_storeMessage","has","set","connections","indexOf","destroyed","keys","currentId","_","listAllPeers","peers","RTCPeerConnectionConfiguration","peerjs_config","RunningHost","nickname","allConnections","vueStore","apiToken","peerID","appendNewConnection","removeConnection","connectionID","startPeerjs","inputText","targetID","conn","connect","newConnection","routes","component","meta","metaTags","router","history","beforeEach","to","from","next","nearestWithTitle","matched","reverse","find","nearestWithMeta","previousNearestWithMeta","Array","querySelectorAll","map","el","tagDef","ready","registered","cached","updatefound","updated","offline","vueapp","App","use","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAGnBC,EAAqB,CACxB,IAAO,GAMJjB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASa,EAAe7B,GACvB,OAAOyB,EAAoBK,EAAI,OAAS,CAAC,MAAQ,SAAS9B,IAAUA,GAAW,IAAM,CAAC,MAAQ,YAAYA,GAAW,MAItH,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAUgC,QAGnC,IAAIC,EAASL,EAAiB5B,GAAY,CACzCK,EAAGL,EACHkC,GAAG,EACHF,QAAS,IAUV,OANAlB,EAAQd,GAAUW,KAAKsB,EAAOD,QAASC,EAAQA,EAAOD,QAASN,GAG/DO,EAAOC,GAAI,EAGJD,EAAOD,QAKfN,EAAoBS,EAAI,SAAuBlC,GAC9C,IAAImC,EAAW,GAIXC,EAAY,CAAC,MAAQ,GACtBR,EAAmB5B,GAAUmC,EAASvB,KAAKgB,EAAmB5B,IACzB,IAAhC4B,EAAmB5B,IAAkBoC,EAAUpC,IACtDmC,EAASvB,KAAKgB,EAAmB5B,GAAW,IAAIqC,SAAQ,SAASC,EAASC,GAIzE,IAHA,IAAIC,EAAO,QAAU,CAAC,MAAQ,SAASxC,IAAUA,GAAW,IAAM,CAAC,MAAQ,YAAYA,GAAW,OAC9FyC,EAAWhB,EAAoBK,EAAIU,EACnCE,EAAmBC,SAASC,qBAAqB,QAC7CxC,EAAI,EAAGA,EAAIsC,EAAiBpC,OAAQF,IAAK,CAChD,IAAIyC,EAAMH,EAAiBtC,GACvB0C,EAAWD,EAAIE,aAAa,cAAgBF,EAAIE,aAAa,QACjE,GAAe,eAAZF,EAAIG,MAAyBF,IAAaN,GAAQM,IAAaL,GAAW,OAAOH,IAErF,IAAIW,EAAoBN,SAASC,qBAAqB,SACtD,IAAQxC,EAAI,EAAGA,EAAI6C,EAAkB3C,OAAQF,IAAK,CAC7CyC,EAAMI,EAAkB7C,GACxB0C,EAAWD,EAAIE,aAAa,aAChC,GAAGD,IAAaN,GAAQM,IAAaL,EAAU,OAAOH,IAEvD,IAAIY,EAAUP,SAASQ,cAAc,QACrCD,EAAQF,IAAM,aACdE,EAAQE,KAAO,WACfF,EAAQG,OAASf,EACjBY,EAAQI,QAAU,SAASC,GAC1B,IAAIC,EAAUD,GAASA,EAAME,QAAUF,EAAME,OAAOC,KAAOjB,EACvDkB,EAAM,IAAIC,MAAM,qBAAuB5D,EAAU,cAAgBwD,EAAU,KAC/EG,EAAIE,KAAO,wBACXF,EAAIH,QAAUA,SACP5B,EAAmB5B,GAC1BkD,EAAQY,WAAWC,YAAYb,GAC/BX,EAAOoB,IAERT,EAAQV,KAAOC,EAEf,IAAIuB,EAAOrB,SAASC,qBAAqB,QAAQ,GACjDoB,EAAKC,YAAYf,MACfgB,MAAK,WACPtC,EAAmB5B,GAAW,MAMhC,IAAImE,EAAqBxD,EAAgBX,GACzC,GAA0B,IAAvBmE,EAGF,GAAGA,EACFhC,EAASvB,KAAKuD,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAI/B,SAAQ,SAASC,EAASC,GAC3C4B,EAAqBxD,EAAgBX,GAAW,CAACsC,EAASC,MAE3DJ,EAASvB,KAAKuD,EAAmB,GAAKC,GAGtC,IACIC,EADAC,EAAS3B,SAASQ,cAAc,UAGpCmB,EAAOC,QAAU,QACjBD,EAAOE,QAAU,IACb/C,EAAoBgD,IACvBH,EAAOI,aAAa,QAASjD,EAAoBgD,IAElDH,EAAOZ,IAAM7B,EAAe7B,GAG5B,IAAI2E,EAAQ,IAAIf,MAChBS,EAAmB,SAAUd,GAE5Be,EAAOhB,QAAUgB,EAAOjB,OAAS,KACjCuB,aAAaJ,GACb,IAAIK,EAAQlE,EAAgBX,GAC5B,GAAa,IAAV6E,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYvB,IAAyB,SAAfA,EAAMH,KAAkB,UAAYG,EAAMH,MAChE2B,EAAUxB,GAASA,EAAME,QAAUF,EAAME,OAAOC,IACpDiB,EAAMK,QAAU,iBAAmBhF,EAAU,cAAgB8E,EAAY,KAAOC,EAAU,IAC1FJ,EAAMM,KAAO,iBACbN,EAAMvB,KAAO0B,EACbH,EAAMnB,QAAUuB,EAChBF,EAAM,GAAGF,GAEVhE,EAAgBX,QAAWkF,IAG7B,IAAIV,EAAUW,YAAW,WACxBd,EAAiB,CAAEjB,KAAM,UAAWK,OAAQa,MAC1C,MACHA,EAAOhB,QAAUgB,EAAOjB,OAASgB,EACjC1B,SAASqB,KAAKC,YAAYK,GAG5B,OAAOjC,QAAQ+C,IAAIjD,IAIpBV,EAAoB4D,EAAIxE,EAGxBY,EAAoB6D,EAAI3D,EAGxBF,EAAoB8D,EAAI,SAASxD,EAASkD,EAAMO,GAC3C/D,EAAoBgE,EAAE1D,EAASkD,IAClC1E,OAAOmF,eAAe3D,EAASkD,EAAM,CAAEU,YAAY,EAAMC,IAAKJ,KAKhE/D,EAAoBoE,EAAI,SAAS9D,GACX,qBAAX+D,QAA0BA,OAAOC,aAC1CxF,OAAOmF,eAAe3D,EAAS+D,OAAOC,YAAa,CAAEC,MAAO,WAE7DzF,OAAOmF,eAAe3D,EAAS,aAAc,CAAEiE,OAAO,KAQvDvE,EAAoBwE,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQvE,EAAoBuE,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK7F,OAAO8F,OAAO,MAGvB,GAFA5E,EAAoBoE,EAAEO,GACtB7F,OAAOmF,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOvE,EAAoB8D,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR3E,EAAoB+E,EAAI,SAASxE,GAChC,IAAIwD,EAASxD,GAAUA,EAAOmE,WAC7B,WAAwB,OAAOnE,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAP,EAAoB8D,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR/D,EAAoBgE,EAAI,SAASgB,EAAQC,GAAY,OAAOnG,OAAOC,UAAUC,eAAeC,KAAK+F,EAAQC,IAGzGjF,EAAoBK,EAAI,IAGxBL,EAAoBkF,GAAK,SAAShD,GAA2B,MAApBiD,QAAQjC,MAAMhB,GAAYA,GAEnE,IAAIkD,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAWjG,KAAK2F,KAAKM,GAC5CA,EAAWjG,KAAOf,EAClBgH,EAAaA,EAAWG,QACxB,IAAI,IAAI5G,EAAI,EAAGA,EAAIyG,EAAWvG,OAAQF,IAAKP,EAAqBgH,EAAWzG,IAC3E,IAAIU,EAAsBiG,EAI1B/F,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,uJCtQG+F,E,YCGC,EAAkB,CAC7BC,SAAS,EACTC,MAAO,I,mCDLT,SAAYF,GACV,8BACA,0CAFF,CAAYA,MAAgB,KAUrB,IELKG,EFKCC,GAAS,sBACnBJ,EAAiBK,YADE,SACWC,EAAOvB,GACpCuB,EAAML,QAAUlB,KAFE,iBAInBiB,EAAiBO,iBAJE,SAIgBD,EAAOJ,GACzCI,EAAMJ,MAAN,yBAAkBI,EAAMJ,OAAxB,eAAkCA,OALhB,GGNTM,EAAwD,G,8CDCrE,SAAYL,GACV,sCADF,CAAYA,MAAc,KAQnB,IEdKM,EFcCC,EAAO,kBACXP,EAAeQ,eADJ,YAC6B,8JAARC,EAAQ,EAARA,OAAQ,SAE3CA,EAAOZ,EAAiBK,YAAY,GAFO,SAGpB,EAAAQ,EAAMlC,IAC3B,8CAJyC,gBAGnC9F,EAHmC,EAGnCA,KAGR+H,EAAOZ,EAAiBO,gBAAiB1H,GACzC+H,EAAOZ,EAAiBK,YAAY,GAPO,qDAS3CV,QAAQmB,IAAI,0CAAZ,MAT2C,+DGPpCC,EAAyC,CACpDT,MAAA,EACAF,YACAM,UACAF,WCXW,EAAmB,CAC9BQ,iBAAkB,eFFpB,SAAYP,GACV,kDADF,CAAYA,MAAiB,KAQtB,IGHKQ,EHGC,EAAS,kBACnBR,EAAkBS,sBADC,SACsBZ,EAAOa,GAC/Cb,EAAMU,iBAAmBG,K,YGLjBF,MAAe,IAEpB,IAAM,EAA0D,GCI1DG,EAA2C,CACtDd,MAAA,EACAF,UAAA,EACAM,QAAA,EACAF,QAAA,Q,YCGWa,EAAmB,CAC9BC,IAAKtB,EACLuB,KAAMd,GAKKe,EAAQ,eAAY,CAC/BC,QAEM,CAAC,kBAEP7H,QAAS,CACP0H,IAAKP,EACLQ,KAAMH,KAIJ,SAAUM,IACd,OAAOF,EAGM,U,+GC3Cf,W,oCCAA,W,4GCIYG,E,aAAZ,SAAYA,GACV,wCADF,CAAYA,MAAe,KAQpB,IAAMnB,EAAO,kBACjBmB,EAAgBC,iBADC,SACgBtB,GAEhC,OADEX,QAAQmB,IAAI,4BAA6BR,EAAMU,oBACxCV,EAAMU,qB,4LCdZa,MAAM,Q,EAET,eAAM,mB,+HAFR,eAIM,MAJN,EAIM,CAHJ,eAA8B,GAC9B,EACA,eAAW,K,6ICHRA,MAAM,8B,EACT,eAAsC,UAAlC,iCAA6B,G,EAG/B,eAAgC,SAAzBC,IAAI,SAAQ,SAAK,G,EAExB,eAAoC,SAA7BA,IAAI,WAAU,WAAO,G,EAO5B,eAAqC,UAA7B3F,KAAK,UAAS,UAAM,G,wEAbhC,eAgBM,MAhBN,EAgBM,CAfJ,EAEA,eAYO,QAZA,SAAM,8CAAU,EAAA4F,YAAA,EAAAA,WAAA,qBAAU,e,CAC/B,E,eACA,eAAqD,SAA9CC,GAAG,QAAQ7F,KAAK,O,qDAAgB,EAAA8F,WAAU,K,mBAAV,EAAAA,cACvC,E,eACA,eAKE,YAJAD,GAAG,UACH7F,KAAK,O,qDACI,EAAA+F,aAAY,IACrBC,MAAA,iB,mBADS,EAAAD,gBAGX,EACA,eAAgC,SAA7B,YAAS,eAAG,EAAAE,YAAU,I,kECblB,EAAb,iGACE,WACE,OAAO,IAAIhH,SAAuB,SAACC,EAAQC,GACzC,IAAK+G,UAAUC,YACb,KAAM,+CAERD,UAAUC,YAAYC,oBACpB,SAACC,GACC,IAAMC,EAAqB,CACzBC,SAAUF,EAASG,OAAOD,SAC1BE,UAAWJ,EAASG,OAAOC,WAE7BvH,EAAQoH,MAEV,WACEnH,EAAO,sCAGT,CACEuH,oBAAoB,WAnB9B,KCQqB,EAArB,yG,0BACE,EAAAZ,WAAa,GACb,EAAAC,aAAe,GACf,EAAAE,WAAa,GAHf,4GAKE,+GAC+B,IAAI,GAAgBU,cADnD,OACEC,KAAKC,gBADP,OAGED,KAAKE,oBAAoB,CACvBC,MAAOH,KAAKd,WACZkB,QAASJ,KAAKb,aACdM,SAAUO,KAAKC,kBANnB,gDALF,mJAcE,WAA0BI,GAA1B,8FACEzD,QAAQmB,IAAI,aAAcsC,GAD5B,kBAG2B,EAAAvC,EAAMwC,KAAK,oBAAqBD,GAH3D,OAGUE,EAHV,OAII3D,QAAQmB,IAAIwC,EAASzK,KAAK,WAC1BkK,KAAKX,WAAakB,EAASzK,KAAK,UALpC,mDAOI8G,QAAQjC,MAAR,MAPJ,yDAdF,+DAAwD,QAAnC,EAA0B,gBAL9C,eAAQ,KAKY,W,UCLrB,EAAO6F,OAAS,EAChB,EAAOC,UAAY,kBAEJ,Q,6ECPR3B,MAAM,W,EACT,eAAsC,UAAlC,iCAA6B,G,GAC5BA,MAAM,c,iBACN,mB,EAAe,eAAM,mB,EAG1B,eAAM,mB,GACDA,MAAM,e,wEAPb,eAUM,MAVN,EAUM,CATJ,EACA,eAGM,MAHN,EAGM,CAFJ,eAAwC,U,EAAtB,E,8BAAS,EAAA4B,QAAM,OAGnC,EACA,eAEM,MAFN,EAEM,CADJ,eAAoB,wBAAd,EAAA1F,SAAO,UCGE,EAArB,qIAAqC,QAAhB,EAAO,gBAL3B,eAAQ,KAKY,W,UCPrB,EAAOwF,OAAS,EAChB,EAAOC,UAAY,kBAEJ,QCEM,EAArB,qIAAkC,QAAb,EAAI,gBANxB,eAAQ,CACPE,WAAY,CACVC,2BAAA,EACAC,QAAA,MAGiB,WCPrB,EAAOL,OAASA,EAED,Q,GCJR1B,MAAM,gC,GACJA,MAAM,iD,EACT,eAA+C,MAA3CA,MAAM,YAAW,yBAAqB,G,GACrCA,MAAM,yB,EACT,eAAuB,UAAnB,kBAAc,G,GAKfA,MAAM,yB,EACT,eAAsC,MAAlCA,MAAM,YAAW,gBAAY,G,GAW9BA,MAAM,yB,EACT,eAAgB,UAAZ,WAAO,G,GAaRA,MAAM,yB,EACT,eAA4D,MAAxDA,MAAM,oCAAmC,cAAU,G,iDApC7D,eA8CM,MA9CN,EA8CM,CA7CJ,eA4CM,MA5CN,EA4CM,CA3CJ,EACA,eAKM,MALN,EAKM,CAJJ,E,eACA,eAEI,wBADC,EAAAgC,UAAQ,M,QADM,KAAR,EAAAA,cAIb,eAUM,MAVN,EAUM,CATJ,E,eACA,eAIE,SAHA1H,KAAK,O,qDACI,EAAA2H,cAAa,IACtBjC,MAAM,yB,mBADG,EAAAiC,iBAGX,eAES,UAFA,QAAK,8BAAE,EAAAC,WAAA,EAAAA,UAAA,qBAAWlC,MAAM,8BAA6B,eAKhE,eAGM,MAHN,EAGM,CAFJ,EACA,eAAmB,wBAAb,EAAAmC,QAAM,KAEd,eASM,Y,eARJ,eAIE,S,qDAHS,EAAAC,aAAY,IACrBpC,MAAM,wBACN1F,KAAK,Q,mBAFI,EAAA8H,gBAIX,eAES,UAFA,QAAK,8BAAE,EAAAC,eAAA,EAAAA,cAAA,qBAAerC,MAAM,8BAA6B,YAIpE,eASM,MATN,EASM,CARJ,G,mBACA,eAMM,2BAJoB,EAAAsC,UAAQ,SAAxBC,EAAMC,G,wBAFhB,eAMM,OALJxC,MAAM,qBAELxC,IAAKgF,G,eAEHA,GAAQ,MAAG,eAAGD,EAAKpG,MAAO,MAAG,eAAGoG,EAAKrG,SAAO,M,0BClC7CuG,G,mYCPCC,GAAW,eAAK,oCAClB,KAAAC,MAAQ,CAAC,OAAQ,SAAU,QAAQC,SAASpC,UAAUqC,UACtD,KAAAC,kBAAoB,CAAC,UAAW,SAAU,UAE1C,KAAAC,kBAAoB,GACpB,KAAAC,iBAAmB,GACnB,KAAAC,iBAAmB,IANN,wDAQtB,WACE,MAAoC,qBAAtBC,oBATM,gCAYtB,WACE,IAAMC,EAAUjC,KAAKkC,aACfC,EAAUnC,KAAKoC,aAEfC,EAAerC,KAAK4B,kBAAkBF,SAASO,GAErD,QAAKI,IAEW,WAAZJ,EAA6BE,GAAWnC,KAAK8B,iBACjC,YAAZG,EAA8BE,GAAWnC,KAAK6B,kBAClC,WAAZI,KACMjC,KAAKyB,OAASU,GAAWnC,KAAK+B,qBAvBpB,wBA4BtB,WACE,OAAO,QAAcO,eAAeL,UA7BhB,wBAgCtB,WACE,OAAO,QAAcK,eAAeH,SAAW,IAjC3B,oCAoCtB,WACE,IAWII,EAXEN,EAAUjC,KAAKkC,aACfC,EAAU,QAAcG,eAAeH,SAAW,EAExD,GAAgB,WAAZF,GAAwBE,EAAU,GAAI,OAAO,EACjD,GAAgB,YAAZF,GAAyBE,GAAW,GAAI,OAAO,EACnD,IACGrF,OAAO0F,qBACN,qBAAsBA,kBAAkBhM,WAE1C,OAAO,EAGT,IAAIiM,GAAY,EAEhB,IACEF,EAAS,IAAIP,kBACbO,EAAOG,eAAe,SACtBD,GAAY,EACZ,MAAOvK,IAJT,QAMMqK,GACFA,EAAOI,QAIX,OAAOF,IA9Da,sBAiEtB,WACE,wCACUzC,KAAKkC,aADf,0BAEUlC,KAAKoC,aAFf,wBAGQpC,KAAKyB,MAHb,oCAIoBzB,KAAK4C,oBAJzB,qCAKqB5C,KAAK6C,qBAL1B,yCAMyB7C,KAAK8C,8BAxEV,EAAI,ICEtBC,GAAiB,CACrBC,WAAY,CACV,CAAEC,KAAM,gCACR,CACEA,KAAM,yBACNC,SAAU,SACVC,WAAY,YAGhBC,aAAc,gBAGHC,GAAO,eAAK,oCAGd,KAAAC,WAAa,eACb,KAAAC,WAAa,IAGb,KAAAC,gBAAkB,CAAEC,OAAQ,EAAGC,OAAQ,GACvC,KAAAC,WAAa,MAGb,KAAAC,cAAgBb,GAEhB,KAAAd,QAAUT,GAASU,aACnB,KAAA2B,eAAiBrC,GAASY,aAG1B,KAAA0B,SAAY,WACnB,IAWIC,EAXEtB,EAA6B,CACjCR,QAAST,GAASqB,qBAClBmB,OAAQxC,GAASoB,oBACjBqB,YAAY,EACZnO,MAAM,EACNoO,YAAY,EACZC,UAAU,GAGZ,IAAK1B,EAAUuB,OAAQ,OAAOvB,EAI9B,IAKE,IAAI2B,EAJJL,EAAK,IAAI/B,kBAAkBe,IAE3BN,EAAUwB,YAAa,EAIvB,IACEG,EAAKL,EAAGM,kBAAkB,cAAe,CAAEC,SAAS,IACpD7B,EAAU3M,MAAO,EACjB2M,EAAU0B,WAAaC,EAAGE,QAG1B,IACEF,EAAGG,WAAa,OAChB9B,EAAUyB,YAAc1C,GAASC,MACjC,MAAOvJ,KACT,MAAOA,IAVT,QAYMkM,GACFA,EAAGzB,SAGP,MAAOzK,IAvBT,QAyBM6L,GACFA,EAAGpB,QAIP,OAAOF,EA5CY,GAqDrB,KAAA+B,KAAO,WACP,KAAAC,OAAS,aAID,KAAAC,WAAqB,EA3EX,2CAClB,cADkB,wBAiElB,SAAWzF,GAET,OAAQA,GAAM,uCAAuC0F,KAAK1F,KAnE1C,mBA6ElB,SACE2F,GAEA,IAAMC,EAAS,GACTC,EAAOF,EAAKE,KACZC,EAAQC,KAAKC,KAAKH,EAAOzB,GAAKM,YAEhCrC,EAAQ,EACR4D,EAAQ,EAEZ,MAAOA,EAAQJ,EAAM,CACnB,IAAMK,EAAMH,KAAKI,IAAIN,EAAMI,EAAQ7B,GAAKM,YAClC0B,EAAIT,EAAK5H,MAAMkI,EAAOC,GAEtBtK,EAAQ,CACZyK,WAAYtF,KAAK0E,WACjBlI,EAAG8E,EACHxL,KAAMuP,EACNN,SAGFF,EAAOjO,KAAKiE,GAEZqK,EAAQC,EACR7D,IAKF,OAFAtB,KAAK0E,aAEEG,IA1GS,+BA6GlB,SACED,EACAW,GAEA,IAAMC,EAAK,IAAIC,WAUf,OARAD,EAAGnM,OAAS,SAAUqM,GAChBA,EAAIjM,QACN8L,EAAGG,EAAIjM,OAAOtC,SAIlBqO,EAAGG,kBAAkBf,GAEdY,IA3HS,uCA8HlB,SAA0BI,GAGxB,IAFA,IAAMC,EAAY,IAAIC,WAAWF,EAAOtP,QAE/BF,EAAI,EAAGA,EAAIwP,EAAOtP,OAAQF,IACjCyP,EAAUzP,GAA4B,IAAvBwP,EAAOG,WAAW3P,GAGnC,OAAOyP,EAAUG,SArID,yBAwIlB,WACE,OAAOhB,KAAKiB,SAASC,SAAS,IAAIC,OAAO,KAzIzB,sBA4IlB,WACE,MAA6B,WAAtBC,SAASC,aA7IA,EAAI,I,aFhBlBC,GAAa,YASnB,SAAY/E,GACR,8BACA,0BACA,8BACA,qBAJJ,CAAYA,QAAQ,K,IGTRgF,GASAC,GAKAC,GASAC,GAeAC,GAMAC,GAOAC,GHnCN,G,WAAN,oCACY,KAAAC,UAAYvF,GAASwF,S,6CAE7B,WAA2B,OAAO/G,KAAK8G,W,IAEvC,SAAaE,GAAsBhH,KAAK8G,UAAYE,I,iBAEpD,WACI,GAAIhH,KAAK8G,WAAavF,GAAS0F,IAAK,4BADjCC,EACiC,yBADjCA,EACiC,gBAChClH,KAAKmH,OAAL,MAAAnH,KAAA,CAAYuB,GAAS0F,KAArB,OAA6BC,O,kBAIrC,WACI,GAAIlH,KAAK8G,WAAavF,GAAS6F,SAAU,4BADrCF,EACqC,yBADrCA,EACqC,gBACrClH,KAAKmH,OAAL,MAAAnH,KAAA,CAAYuB,GAAS6F,UAArB,OAAkCF,O,mBAI1C,WACI,GAAIlH,KAAK8G,WAAavF,GAAS8F,OAAQ,4BADlCH,EACkC,yBADlCA,EACkC,gBACnClH,KAAKmH,OAAL,MAAAnH,KAAA,CAAYuB,GAAS8F,QAArB,OAAgCH,O,4BAIxC,SAAeI,GACXtH,KAAKmH,OAASG,I,oBAGV,SAAON,GAAkC,2BAAXO,EAAW,iCAAXA,EAAW,kBAC7C,IAS8B,EATxBC,EAAO,CAAClB,IAAJ,OAAmBiB,GAE7B,IAAK,IAAInR,KAAKoR,EACNA,EAAKpR,aAAcwD,QACnB4N,EAAKpR,GAAK,IAAMoR,EAAKpR,GAAG6E,KAAO,KAAOuM,EAAKpR,GAAG4E,SAKtD,GAAIgM,GAAYzF,GAAS0F,KACrB,EAAArK,SAAQmB,IAAR,wBAAeyJ,SACZ,GAAIR,GAAYzF,GAAS6F,SAAU,QACtC,EAAAxK,SAAQ6K,KAAR,SAAa,WAAb,uBAA2BD,UACxB,GAAIR,GAAYzF,GAAS8F,OAAQ,QACpC,EAAAzK,SAAQjC,MAAR,SAAc,SAAd,uBAA0B6M,U,KAKvB,OAAI,IGjEnB,SAAYjB,GACV,iBACA,qBACA,iBACA,mBACA,mBACA,wCANF,CAAYA,QAAmB,KAS/B,SAAYC,GACV,iBACA,mBAFF,CAAYA,QAAc,KAK1B,SAAYC,GACV,iBACA,mBACA,6BACA,iBACA,iCACA,mBANF,CAAYA,QAAa,KASzB,SAAYC,GACV,gDACA,iCACA,4BACA,8BACA,uBACA,wCACA,sCACA,gCACA,gCACA,kCACA,oCACA,qBAZF,CAAYA,QAAa,KAezB,SAAYC,GACV,qBACA,8BACA,iBAHF,CAAYA,QAAiB,KAM7B,SAAYC,GACV,uBACA,iCACA,mBACA,mBAJF,CAAYA,QAAe,KAO3B,SAAYC,GACV,2BACA,2BACA,mBACA,qBACA,iBACA,mBACA,wBACA,8BACA,mBACA,qBAVF,CAAYA,QAAiB,KC3CtB,IAAM,GAAb,wDAUE,WACEa,EACAC,EACAC,EACAC,EACAvL,GAC4C,MAA3BwL,EAA2B,uDAAJ,IAAI,uBAE5C,eAFiB,EAAAA,eAfX,EAAAC,eAAyB,EAIzB,EAAAC,eAAgC,GAetC,IAAMC,EAAaP,EAAS,SAAW,QAJK,OAM5C,EAAKQ,SAAWD,EAAaN,EAAO,IAAMC,EAAOC,EAAO,cAAgBvL,EAN5B,EAhBhD,4CAyBE,SAAM2C,EAAYb,GAAa,WAC7B4B,KAAKmI,IAAMlJ,EAEX,IAAMmJ,EAAQ,GAAH,OAAMpI,KAAKkI,SAAX,eAA0BjJ,EAA1B,kBAAsCb,IAE3C4B,KAAKqI,SAAYrI,KAAK+H,gBAI5B/H,KAAKqI,QAAU,IAAIC,UAAUF,GAC7BpI,KAAK+H,eAAgB,EAErB/H,KAAKqI,QAAQE,UAAY,SAAChP,GACxB,IAAIzD,EAEJ,IACEA,EAAO0S,KAAKC,MAAMlP,EAAMzD,MACxB4S,GAAO3K,IAAI,2BAA4BjI,GACvC,MAAOoC,GAEP,YADAwQ,GAAO3K,IAAI,yBAA0BxE,EAAMzD,MAI7C,EAAK6S,KAAK/B,GAAgBgC,QAAS9S,IAGrCkK,KAAKqI,QAAQQ,QAAU,SAACtP,GAClB,EAAKwO,gBAITW,GAAO3K,IAAI,iBAAkBxE,GAE7B,EAAKuP,WACL,EAAKf,eAAgB,EAErB,EAAKY,KAAK/B,GAAgBmC,gBAK5B/I,KAAKqI,QAAQW,OAAS,WAChB,EAAKjB,gBAIT,EAAKkB,sBAELP,GAAO3K,IAAI,eAEX,EAAKmL,0BA3EX,gCA+EU,WAAkB,WACxBlJ,KAAKmJ,aAAehO,YAAW,WAC7B,EAAKiO,mBACJpJ,KAAK8H,gBAlFZ,4BAqFU,WACN,GAAK9H,KAAKqJ,UAAV,CAKA,IAAMrO,EAAUwN,KAAKc,UAAU,CAAElQ,KAAMyN,GAAkB0C,YAEzDvJ,KAAKqI,QAASmB,KAAKxO,GAEnBgF,KAAKkJ,0BARHR,GAAO3K,IAAP,kDAvFN,qBAmGU,WACN,QAASiC,KAAKqI,SAAuC,IAA5BrI,KAAKqI,QAAQoB,aApG1C,iCAwGU,WAGN,IAAMC,EAAc,gBAAI1J,KAAKgI,gBAC7BhI,KAAKgI,eAAiB,GAJG,wBAMH0B,GANG,IAMzB,2BAAmC,KAAxB1O,EAAwB,QACjCgF,KAAKwJ,KAAKxO,IAPa,iCAxG7B,kBAoHE,SAAKlF,GACH,IAAIkK,KAAK+H,cAMT,GAAK/H,KAAKmI,IAKV,GAAKrS,EAAKsD,MAKV,GAAK4G,KAAKqJ,UAAV,CAIA,IAAMrO,EAAUwN,KAAKc,UAAUxT,GAE/BkK,KAAKqI,QAASmB,KAAKxO,SAVjBgF,KAAK2I,KAAK/B,GAAgBhN,MAAO,wBALjCoG,KAAKgI,eAAepR,KAAKd,KA5H/B,mBA8IE,WACMkK,KAAK+H,gBAIT/H,KAAK8I,WAEL9I,KAAK+H,eAAgB,KArJzB,sBAwJU,WACF/H,KAAKqI,UACPrI,KAAKqI,QAAQW,OACXhJ,KAAKqI,QAAQE,UACbvI,KAAKqI,QAAQQ,QACX,KACJ7I,KAAKqI,QAAQ1F,QACb3C,KAAKqI,aAAUnN,GAGjBN,aAAaoF,KAAKmJ,kBAlKtB,GAA4B,oB,uCCOf,GAAb,WACE,WAAqBQ,GAA0B,uBAA1B,KAAAA,aADvB,sDAIE,SAAgBC,GACd,IAAMC,EAAiB7J,KAAK8J,uBAU5B,GAPA9J,KAAK2J,WAAWE,eAAiBA,EAE7B7J,KAAK2J,WAAWvQ,OAASoN,GAAeuD,OAASH,EAAQI,SAC3DhK,KAAKiK,uBAAuBL,EAAQI,QAASH,GAI3CD,EAAQM,WAAY,CACtB,GAAIlK,KAAK2J,WAAWvQ,OAASoN,GAAe2D,KAAM,CAChD,IAAMC,EAAiCpK,KAAK2J,WAEtCU,EAA6B,CAAE/F,UAAWsF,EAAQzF,UAElDmG,EAAcT,EAAexF,kBACjC+F,EAAeG,MACfF,GAEFD,EAAeI,WAAWF,GAG5BtK,KAAKyK,kBAELzK,KAAK0K,UAAU,QAASd,EAAQe,OA9BtC,kCAmCU,WACNjC,GAAO3K,IAAI,+BAEX,IAAM8L,EAAiB,IAAI7H,kBACzBhC,KAAK2J,WAAWiB,SAAUhB,QAAQS,QAKpC,OAFArK,KAAK6K,gBAAgBhB,GAEdA,IA5CX,6BAgDU,SAAgBA,GAAiC,WACjDiB,EAAS9K,KAAK2J,WAAWoB,KACzBC,EAAehL,KAAK2J,WAAWqB,aAC/BC,EAAiBjL,KAAK2J,WAAWvQ,KACjCwR,EAAW5K,KAAK2J,WAAWiB,SAGjClC,GAAO3K,IAAI,iCAEX8L,EAAeqB,eAAiB,SAACxF,GAC1BA,EAAIyF,WAAczF,EAAIyF,UAAUA,YAErCzC,GAAO3K,IAAP,sCAA0C+M,EAA1C,KAAqDpF,EAAIyF,WAEzDP,EAAUQ,OAAO5B,KAAK,CACpBpQ,KAAMyN,GAAkBwE,UACxBC,QAAS,CACPH,UAAWzF,EAAIyF,UACf/R,KAAM6R,EACND,aAAcA,GAEhBO,IAAKT,MAITjB,EAAe2B,2BAA6B,WAC1C,OAAQ3B,EAAe4B,oBACrB,IAAK,SACH/C,GAAO3K,IACL,wDAA0D+M,GAE5D,EAAKnB,WAAWhB,KACdpC,GAAoB3M,MACpB,IAAIA,MAAM,gCAAkCkR,EAAS,aAEvD,EAAKnB,WAAWhH,QAChB,MACF,IAAK,SACH+F,GAAO3K,IACL,wDAA0D+M,GAE5D,EAAKnB,WAAWhB,KACdpC,GAAoB3M,MACpB,IAAIA,MAAM,iBAAmBkR,EAAS,aAExC,EAAKnB,WAAWhH,QAChB,MACF,IAAK,eACH+F,GAAO3K,IACL,qEACE+M,GAEJ,MACF,IAAK,YACHjB,EAAeqB,eAAiB7H,GAAKqI,KACrC,MAGJ,EAAK/B,WAAWhB,KACdpC,GAAoBoF,gBACpB9B,EAAe4B,qBAKnB/C,GAAO3K,IAAI,8BAGX8L,EAAe+B,cAAgB,SAAClG,GAC9BgD,GAAO3K,IAAI,yBAEX,IAAMuM,EAAc5E,EAAImG,QAClBlC,EACJiB,EAAUkB,cAAchB,EAAQE,GAGlCrB,EAAWa,WAAWF,IAIxB5B,GAAO3K,IAAI,+BAEX8L,EAAekC,QAAU,SAACrG,GACxBgD,GAAO3K,IAAI,0BAEX,IAAMiO,EAAStG,EAAIuG,QAAQ,GACrBtC,EAAaiB,EAAUkB,cAAchB,EAAQE,GAEnD,GAAIrB,EAAYvQ,OAASoN,GAAeuD,MAAO,CAC7C,IAAMmC,EAAmCvC,EAEzC,EAAKwC,4BAA4BH,EAAQE,OA3IjD,qBAgJE,WACExD,GAAO3K,IAAI,iCAAmCiC,KAAK2J,WAAWoB,MAE9D,IAAMlB,EAAiB7J,KAAK2J,WAAWE,eAEvC,GAAKA,EAAL,CAIA7J,KAAK2J,WAAWE,eAAsB,KAGtCA,EAAeqB,eACbrB,EAAe2B,2BACf3B,EAAe+B,cACf/B,EAAekC,QACb,aAEJ,IAAMK,EAA4D,WAAlCvC,EAAewC,eAC3CC,GAAuB,EAE3B,GAAItM,KAAK2J,WAAWvQ,OAASoN,GAAe2D,KAAM,CAChD,IAAMC,EAAiCpK,KAAK2J,WACtCW,EAAcF,EAAeE,YAE/BA,IACFgC,IACIhC,EAAYb,YAAyC,WAA3Ba,EAAYb,aAI1C2C,GAA2BE,IAC7BzC,EAAelH,WAhLrB,iFAoLU,mHACAkH,EAAiB7J,KAAK2J,WAAWE,eACjCe,EAAW5K,KAAK2J,WAAWiB,SAF3B,kBAKgBf,EAAgB0C,YAClCvM,KAAK2J,WAAWC,QAAQ4C,aANtB,cAKEC,EALF,OASJ/D,GAAO3K,IAAI,kBAGTiC,KAAK2J,WAAWC,QAAQ8C,cACwB,oBAAzC1M,KAAK2J,WAAWC,QAAQ8C,eAE/BD,EAAM9B,IACJ3K,KAAK2J,WAAWC,QAAQ8C,aAAaD,EAAM9B,MAAQ8B,EAAM9B,KAhBzD,mBAoBId,EAAgB8C,oBAAoBF,GApBxC,QAsBF/D,GAAO3K,IACL,wBACA0O,EAFF,cAGSzM,KAAK2J,WAAWoB,OAGrBO,EAAe,CACjBX,IAAK8B,EACLrT,KAAM4G,KAAK2J,WAAWvQ,KACtB4R,aAAchL,KAAK2J,WAAWqB,aAC9B4B,SAAU5M,KAAK2J,WAAWiD,SAC1B3K,QAASoB,GAAKpB,SAGZjC,KAAK2J,WAAWvQ,OAASoN,GAAe2D,OACpCC,EAAiCpK,KAAK2J,WAE5C2B,EAAU,mCACLA,GADE,IAELf,MAAOH,EAAeG,MACtBpG,SAAUiG,EAAejG,SACzB0I,cAAezC,EAAeyC,iBAIlCjC,EAAUQ,OAAO5B,KAAK,CACpBpQ,KAAMyN,GAAkBiG,MACxBxB,UACAC,IAAKvL,KAAK2J,WAAWoB,OAlDrB,qDAwDA,0FADA,OAGAH,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,kCAAX,OA3DA,6DA+DJ6M,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,0BAAX,MAhEI,iEApLV,2IAwPU,+GACA8L,EAAiB7J,KAAK2J,WAAWE,eACjCe,EAAW5K,KAAK2J,WAAWiB,SAF3B,kBAKiBf,EAAgBoD,eALjC,cAKEC,EALF,OAMJxE,GAAO3K,IAAI,mBAGTiC,KAAK2J,WAAWC,QAAQ8C,cACwB,oBAAzC1M,KAAK2J,WAAWC,QAAQ8C,eAE/BQ,EAAOvC,IACL3K,KAAK2J,WAAWC,QAAQ8C,aAAaQ,EAAOvC,MAAQuC,EAAOvC,KAb3D,mBAiBId,EAAgB8C,oBAAoBO,GAjBxC,QAmBFxE,GAAO3K,IAAP,wBAEEmP,EAFF,cAGSlN,KAAK2J,WAAWoB,OAGzBH,EAAUQ,OAAO5B,KAAK,CACpBpQ,KAAMyN,GAAkBsG,OACxB7B,QAAS,CACPX,IAAKuC,EACL9T,KAAM4G,KAAK2J,WAAWvQ,KACtB4R,aAAchL,KAAK2J,WAAWqB,aAC9B/I,QAASoB,GAAKpB,SAEhBsJ,IAAKvL,KAAK2J,WAAWoB,OAjCrB,qDAoCFH,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,kCAAX,MArCE,6DAwCJ6M,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,4BAAX,MAzCI,iEAxPV,yIAsSE,WAAgB3E,EAAcuR,GAA9B,kGACEA,EAAM,IAAIyC,sBAAsBzC,GAC1Bd,EAAiB7J,KAAK2J,WAAWE,eACjCe,EAAW5K,KAAK2J,WAAWiB,SAEjClC,GAAO3K,IAAI,6BAA8B4M,GAEnC0C,EAAOrN,KAPf,kBAUU6J,EAAgByD,qBAAqB3C,GAV/C,UAWIjC,GAAO3K,IAAP,gCAAoC3E,EAApC,gBAAgD4G,KAAK2J,WAAWoB,OACnD,UAAT3R,EAZR,kCAaYiU,EAAKE,cAbjB,6DAgBI3C,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,mCAAX,MAjBJ,0DAtSF,kJA4TE,WAAsByP,GAAtB,sGACE9E,GAAO3K,IAAP,mBAA+ByP,GAEzBrC,EAAYqC,EAAIrC,UAChBsC,EAAgBD,EAAIC,cACpBC,EAASF,EAAIE,OACb7D,EAAiB7J,KAAK2J,WAAWE,eACjCe,EAAW5K,KAAK2J,WAAWiB,SAPnC,kBAUUf,EAAgB8D,gBACpB,IAAIC,gBAAgB,CAClBF,OAAQA,EACRD,cAAeA,EACftC,UAAWA,KAdnB,OAiBIzC,GAAO3K,IAAP,kCAAsCiC,KAAK2J,WAAWoB,OAjB1D,qDAmBIH,EAAUmC,UAAUrG,GAAcsG,OAAlC,MACAtE,GAAO3K,IAAI,8BAAX,MApBJ,0DA5TF,8FAoVU,SACNiO,EACAnC,GAIA,GAFAnB,GAAO3K,IAAP,iCAAqCiO,EAAO/M,GAA5C,yBAEK4K,EAAegE,SAClB,OAAOnF,GAAO/N,MAAP,oEAKTqR,EAAO8B,YAAYC,SAAQ,SAACC,GAC1BnE,EAAegE,SAASG,EAAOhC,QAjWrC,yCAqWU,SACNA,EACAE,GAEAxD,GAAO3K,IAAP,qBACgBiO,EAAO/M,GADvB,gCACiDiN,EAAgBlB,eAGjEkB,EAAgB+B,UAAUjC,OA7W9B,KCVsB,GAAtB,wDAcE,WACWjB,EACFH,EACEhB,GAAY,oCAErB,eAJS,EAAAmB,OACF,EAAAH,WACE,EAAAhB,UAhBD,EAAAsE,OAAQ,EAoBhB,EAAKtB,SAAWhD,EAAQgD,SAJH,EAjBzB,yCAUE,WACE,OAAO5M,KAAKkO,UAXhB,GAA6C,oBCWhC,GAAb,wDAkBE,WAAYpD,EAAgBF,EAAgBhB,GAAY,oCACtD,cAAMkB,EAAQF,EAAUhB,GAExB,EAAKuE,aAAe,EAAKvE,QAAQI,QACjC,EAAKgB,aACH,EAAKpB,QAAQoB,cACboD,EAAgBC,UAAYhL,GAAKiL,cAEnC,EAAKC,YAAc,IAAI,GAAJ,oBAEf,EAAKJ,cACP,EAAKI,YAAYC,gBAAgB,CAC/BxE,QAAS,EAAKmE,aACdjE,YAAY,IAbsC,EAlB1D,yCAOE,WACE,OAAO1D,GAAeuD,QAR1B,uBAWE,WACE,OAAO/J,KAAKmO,eAZhB,wBAcE,WACE,OAAOnO,KAAKyO,gBAfhB,uBAoCE,SAAUC,GACRhG,GAAO3K,IAAI,mBAAoB2Q,GAE/B1O,KAAKyO,cAAgBC,EACrB,oEAAWnI,GAAoBoI,OAAQD,KAxC3C,2BA2CE,SAAc1T,GACZ,IAAM5B,EAAO4B,EAAQ5B,KACfkS,EAAUtQ,EAAQsQ,QAExB,OAAQtQ,EAAQ5B,MACd,KAAKyN,GAAkBsG,OAErBnN,KAAKuO,YAAa7D,UAAUtR,EAAMkS,EAAQX,KAC1C3K,KAAKkO,OAAQ,EACb,MACF,KAAKrH,GAAkBwE,UACrBrL,KAAKuO,YAAaK,gBAAgBtD,EAAQH,WAC1C,MACF,QACEzC,GAAOjB,KAAP,oCAAyCrO,EAAzC,sBAA2D4G,KAAK+K,OAChE,SA1DR,oBA8DE,SAAOiB,GAA+C,IAA1BpC,EAA0B,uDAAF,GAClD,GAAI5J,KAAKmO,aACPzF,GAAOjB,KACL,4FAFJ,CAOAzH,KAAKmO,aAAenC,EAEhBpC,GAAWA,EAAQ8C,eACrB1M,KAAK4J,QAAQ8C,aAAe9C,EAAQ8C,cAGtC1M,KAAKuO,YAAaC,gBAAlB,mCACKxO,KAAK4J,QAAQiF,UADlB,IAEE7E,QAASgC,KAGX,IAnBoD,EAmB9C8C,EAAW9O,KAAK4K,SAAUmE,aAAa/O,KAAKgL,cAnBE,kBAqBhC8D,GArBgC,IAqBpD,2BAA8B,KAArB9T,EAAqB,QAC5BgF,KAAKgP,cAAchU,IAtB+B,8BAyBpDgF,KAAKkO,OAAQ,KAvFjB,mBA+FE,WACMlO,KAAKuO,cACPvO,KAAKuO,YAAYU,UACjBjP,KAAKuO,YAAc,MAGrBvO,KAAKmO,aAAe,KACpBnO,KAAKyO,cAAgB,KAEjBzO,KAAK4K,WACP5K,KAAK4K,SAASsE,kBAAkBlP,MAEhCA,KAAK4K,SAAW,MAGd5K,KAAK4J,SAAW5J,KAAK4J,QAAQI,UAC/BhK,KAAK4J,QAAQI,QAAU,MAGpBhK,KAAKmP,OAIVnP,KAAKkO,OAAQ,EAEb,oEAAW3H,GAAoB6I,YAxHnC,GAAqC,IACX,GAAAf,UAAY,M,cCdzB,GAAb,wDAME,iDACE,eANO,EAAAgB,WAAyB,IAAI5J,WAE9B,EAAA6J,OAAiB,GACjB,EAAAC,aAAuB,EAK7B,EAAKF,WAAWhW,OAAS,SAACqM,GACxB,EAAK6J,aAAc,EAEf7J,EAAIjM,QACN,EAAKkP,KAAK,OAAQjD,EAAIjM,OAAOtC,QAG/B,EAAKqY,cAGP,EAAKH,WAAW/V,QAAU,SAACoM,GACzBgD,GAAO/N,MAAP,uBAAqC+K,GACrC,EAAK6J,aAAc,EACnB,EAAKE,UACL,EAAK9G,KAAK,QAASjD,IAjBvB,EANF,0CA2BE,WACE,OAAO1F,KAAKsP,SA5BhB,gBA+BE,WACE,OAAOtP,KAAK0P,MAAMpZ,SAhCtB,sBAmCE,WACE,OAAO0J,KAAKuP,cApChB,mBAuCE,SAAM3K,GACJ5E,KAAK0P,MAAM9Y,KAAKgO,GAEZ5E,KAAK2P,YAET3P,KAAKwP,eA5CT,qBA+CE,WACExP,KAAKqP,WAAWO,QAChB5P,KAAKsP,OAAS,KAjDlB,wBAoDU,WACY,IAAdtP,KAAK8E,OACL9E,KAAK2P,aAET3P,KAAKuP,aAAc,EAEnBvP,KAAKqP,WAAW1J,kBAAkB3F,KAAK0P,MAAM3Y,eA1DjD,GAAmC,oBCetB,GAAb,wDAqCE,WAAY+T,EAAgBF,EAAgBhB,GAAY,oCACtD,cAAMkB,EAAQF,EAAUhB,GA9B1B,EAAAN,UAAmCd,KAAKc,UACxC,EAAAb,MAA+BD,KAAKC,MAM5B,EAAAoH,QAAiB,GACjB,EAAAC,YAAc,EACd,EAAAC,YAAa,EACb,EAAAC,aAMJ,GAGI,EAAAC,eAAuC,IAAI,GAajD,EAAKjF,aACH,EAAKpB,QAAQoB,cACbkF,EAAe7B,UAAYhL,GAAKiL,cAElC,EAAK/D,MAAQ,EAAKX,QAAQW,OAAS,EAAKS,aACxC,EAAK6B,cAAgB,EAAKjD,QAAQiD,eAAiBlG,GAAkBwJ,OACrE,EAAKhM,WAAa,EAAKyF,QAAQzF,SAE/B,EAAK8L,eAAgBG,GAAG,QAAQ,SAACC,GAC/B,EAAKC,cAAcD,MAGrB,EAAKJ,eAAgBG,GAAG,SAAS,WAC/B1H,GAAO/N,MAAP,aACQ,EAAKqQ,aADb,mEAGA,EAAKrI,WAGP,EAAK4L,YAAc,IAAI,GAAJ,oBAEnB,EAAKA,YAAYC,gBACf,EAAK5E,QAAQiF,UAAY,CACvB3E,YAAY,IA1BsC,EArC1D,yCAWE,WACE,OAAO1D,GAAe2D,OAZ1B,uBA6BE,WACE,OAAOnK,KAAKuQ,MA9BhB,sBAiCE,WACE,OAAOvQ,KAAK8P,cAlChB,wBAqEE,SAAW1L,GACTpE,KAAKuQ,IAAMnM,EACXpE,KAAKwQ,0BAvET,mCA0EU,WAAqB,WACtBnN,GAAKS,SAASI,aAAcb,GAAKS,SAASK,WAC7CnE,KAAKsK,YAAY/F,WAAa,eAGhCvE,KAAKsK,YAAYtB,OAAS,WACxBN,GAAO3K,IAAP,aAAiB,EAAKiN,aAAtB,2BACA,EAAKkD,OAAQ,EACb,EAAKvF,KAAKpC,GAAoBkK,OAGhCzQ,KAAKsK,YAAY/B,UAAY,SAACrQ,GAC5BwQ,GAAO3K,IAAP,aAAiB,EAAKiN,aAAtB,kBAAoD9S,EAAEpC,MACtD,EAAK4a,mBAAmBxY,IAG1B8H,KAAKsK,YAAYzB,QAAU,WACzBH,GAAO3K,IAAP,aAAiB,EAAKiN,aAAtB,mBAAqD,EAAKD,MAC1D,EAAKpI,WA5FX,gCAiGU,YAIP,WAHC7M,EAGD,EAHCA,KAIM6a,EAAW7a,EAAK8a,YAEhBC,EACJ7Q,KAAK6M,gBAAkBlG,GAAkBwJ,QACzCnQ,KAAK6M,gBAAkBlG,GAAkBmK,WAEvCC,EAAwBjb,EAE5B,GAAI+a,EAAuB,CACzB,GAAIF,IAAaK,KAMf,YAJA3N,GAAK4N,kBAAkBnb,GAAc,SAACua,GACpC,IAAMa,EAAe7N,GAAKoB,OAAO4L,GACjC,EAAK1H,KAAKpC,GAAoB4D,KAAM+G,MAGjC,GAAIP,IAAaQ,YACtBJ,EAAmB1N,GAAKoB,OAAO3O,QAC1B,GAAI6a,IAAaS,OAAQ,CAE9B,IAAMf,EAAKhN,GAAKgO,0BAA0Bvb,GAC1Cib,EAAmB1N,GAAKoB,OAAO4L,SAExBrQ,KAAK6M,gBAAkBlG,GAAkB6B,OAClDuI,EAAmB/Q,KAAKyI,MAAM3S,IAK5Bib,EAAiBzL,WACnBtF,KAAKsR,aAAaP,GAIpB,oEAAWxK,GAAoB4D,KAAM4G,KAxIzC,0BA2IU,SAAajb,GAMnB,IAAMmJ,EAAKnJ,EAAKwP,WACViM,EAAYvR,KAAKgQ,aAAa/Q,IAAO,CACzCnJ,KAAM,GACN0b,MAAO,EACPzM,MAAOjP,EAAKiP,OAOd,GAJAwM,EAAUzb,KAAKA,EAAK0G,GAAK1G,EAAKA,KAC9Byb,EAAUC,QACVxR,KAAKgQ,aAAa/Q,GAAMsS,EAEpBA,EAAUxM,QAAUwM,EAAUC,MAAO,QAEhCxR,KAAKgQ,aAAa/Q,GAGzB,IAAM,EAAO,IAAI+R,KAAKO,EAAUzb,MAChCkK,KAAK0Q,mBAAmB,CAAE5a,KAAA,OAlKhC,mBA2KE,WACEkK,KAAK6P,QAAU,GACf7P,KAAK8P,YAAc,EACnB9P,KAAKgQ,aAAe,GAEhBhQ,KAAKuO,cACPvO,KAAKuO,YAAYU,UACjBjP,KAAKuO,YAAc,MAGjBvO,KAAK4K,WACP5K,KAAK4K,SAASsE,kBAAkBlP,MAEhCA,KAAK4K,SAAW,MAGd5K,KAAKsK,cACPtK,KAAKsK,YAAYtB,OAAS,KAC1BhJ,KAAKsK,YAAY/B,UAAY,KAC7BvI,KAAKsK,YAAYzB,QAAU,KAC3B7I,KAAKuQ,IAAM,MAGTvQ,KAAKiQ,iBACPjQ,KAAKiQ,eAAeR,UACpBzP,KAAKiQ,eAAewB,qBACpBzR,KAAKiQ,eAAiB,MAGnBjQ,KAAKmP,OAIVnP,KAAKkO,OAAQ,EAEb,oEAAW3H,GAAoB6I,UA9MnC,kBAkNE,SAAKtZ,EAAW4b,GACd,GAAK1R,KAAKmP,KAUV,GAAInP,KAAK6M,gBAAkBlG,GAAkB6B,KAC3CxI,KAAKsQ,cAActQ,KAAKsJ,UAAUxT,SAC7B,GACLkK,KAAK6M,gBAAkBlG,GAAkBwJ,QACzCnQ,KAAK6M,gBAAkBlG,GAAkBmK,WACzC,CACA,IAAMlM,EAAOvB,GAAKmB,KAAK1O,GAEvB,IAAK4b,GAAW9M,EAAKE,KAAOzB,GAAKM,WAE/B,YADA3D,KAAK2R,YAAY/M,GAIdvB,GAAKS,SAASI,WAKjBlE,KAAKsQ,cAAc1L,GAFnB5E,KAAKiQ,eAAgB2B,MAAMhN,QAK7B5E,KAAKsQ,cAAcxa,QA9BnB,oEACEyQ,GAAoB3M,MACpB,IAAIA,MACF,8FAvNV,2BAsPU,SAAciY,IAChB7R,KAAK+P,YAAe/P,KAAK8R,SAASD,KACpC7R,KAAK6P,QAAQjZ,KAAKib,GAClB7R,KAAK8P,YAAc9P,KAAK6P,QAAQvZ,UAzPtC,sBA8PU,SAASub,GAAQ,WACvB,IAAK7R,KAAKmP,KACR,OAAO,EAGT,GAAInP,KAAKsK,YAAYyH,eAAiB7B,EAAe8B,oBAOnD,OANAhS,KAAK+P,YAAa,EAClB5U,YAAW,WACT,EAAK4U,YAAa,EAClB,EAAKkC,eACJ,KAEI,EAGT,IACEjS,KAAKsK,YAAYd,KAAKqI,GACtB,MAAO3Z,GAMP,OALAwQ,GAAO/N,MAAP,cAAoBqF,KAAKgL,aAAzB,wBAA6D9S,GAC7D8H,KAAK+P,YAAa,EAElB/P,KAAK2C,SAEE,EAGT,OAAO,IAxRX,wBA4RU,WACN,GAAK3C,KAAKmP,MAIkB,IAAxBnP,KAAK6P,QAAQvZ,OAAjB,CAIA,IAAMub,EAAM7R,KAAK6P,QAAQ,GAErB7P,KAAK8R,SAASD,KAChB7R,KAAK6P,QAAQ9Y,QACbiJ,KAAK8P,YAAc9P,KAAK6P,QAAQvZ,OAChC0J,KAAKiS,iBA1SX,yBA8SU,SAAYrN,GAClB,IAAMsN,EAAQ7O,GAAKxI,MAAM+J,GACzB8D,GAAO3K,IAAP,aAAiBiC,KAAKgL,aAAtB,wBAAkDkH,EAAM5b,OAAxD,eAF4B,wBAIX4b,GAJW,IAI5B,2BAAwB,KAAf,EAAe,QACtBlS,KAAKwJ,KAAK,GAAM,IALU,iCA9ShC,2BAuTE,SAAcxO,GACZ,IAAMsQ,EAAUtQ,EAAQsQ,QAExB,OAAQtQ,EAAQ5B,MACd,KAAKyN,GAAkBsG,OACrBnN,KAAKuO,YAAa7D,UAAU1P,EAAQ5B,KAAMkS,EAAQX,KAClD,MACF,KAAK9D,GAAkBwE,UACrBrL,KAAKuO,YAAaK,gBAAgBtD,EAAQH,WAC1C,MACF,QACEzC,GAAOjB,KACL,6BACAzM,EAAQ5B,KACR,aACA4G,KAAK+K,MAEP,WAxUR,GAAoC,IACV,GAAAsD,UAAY,MACZ,GAAA2D,oBAAsB,QCjBzC,IAAM,GAAb,WACE,WAA6BG,GAAa,uBAAb,KAAAA,WAD/B,gDAGU,SAAUC,GAChB,IAAM/L,EAAWrG,KAAKmS,SAASzK,OAAS,WAAa,UACjD2K,EACFhM,EACArG,KAAKmS,SAASxK,KACd,IACA3H,KAAKmS,SAASvK,KACd5H,KAAKmS,SAAStK,KACd7H,KAAKmS,SAAS7V,IACd,IACA8V,EACIE,EAAc,QAAS,IAAIC,MAAOC,UAAiBxN,KAAKiB,SAG9D,OAFAoM,GAAOC,EAEAD,IAjBX,iFAqBE,+GACQA,EAAMrS,KAAKyS,UAAU,MAD7B,kBAI2BC,MAAML,GAJjC,UAIU9R,EAJV,OAM4B,MAApBA,EAASU,OANjB,sBAOY,IAAIrH,MAAJ,wBAA2B2G,EAASU,SAPhD,gCAUWV,EAASoS,QAVpB,2CAYIjK,GAAO/N,MAAM,sBAAb,MAEIiY,EAAY,GAGS,MAAvB5S,KAAKmS,SAAStK,MACd7H,KAAKmS,SAASxK,OAAStE,GAAKC,aAE5BsP,EACE,mIAKE,IAAIhZ,MAAM,uCAAyCgZ,GA1B7D,0DArBF,4IAoDE,+GACQP,EAAMrS,KAAKyS,UAAU,SAD7B,kBAI2BC,MAAML,GAJjC,UAIU9R,EAJV,OAM4B,MAApBA,EAASU,OANjB,oBAO8B,MAApBV,EAASU,OAPnB,uBAQY4R,EAAe,GAGjBA,EADE7S,KAAKmS,SAASxK,OAAStE,GAAKC,WAE5B,sHAIA,2FAIE,IAAI1J,MAAM,+DACdiZ,GArBV,cAwBY,IAAIjZ,MAAJ,wBAA2B2G,EAASU,SAxBhD,iCA2BWV,EAASuS,QA3BpB,2CA6BIpK,GAAO/N,MAAM,8BAAb,MAEM,IAAIf,MAAM,4CAA8C,EAA9C,IA/BpB,0DApDF,gEC+Ba,GAAb,wDAsDE,WAAYqF,EAA2B2K,GAAqB,MAGtDmJ,EA0DJ,OA7D0D,uBAC1D,eAhDM,EAAA5K,IAAqB,KACrB,EAAA6K,cAA+B,KAG/B,EAAAC,YAAa,EACb,EAAAlL,eAAgB,EAChB,EAAAmG,OAAQ,EACC,EAAAgF,aAA8C,IAAIC,IAClD,EAAAC,cAA8C,IAAID,IA6C7DlU,GAAMA,EAAG2R,aAAera,OAC1BqT,EAAU3K,EACDA,IACT8T,EAAS9T,EAAGiH,YAId0D,EAAU,iBACRyJ,MAAO,EACP1L,KAAMtE,GAAKC,WACXsE,KAAMvE,GAAKE,WACXsE,KAAM,IACNvL,IAAKgX,EAAKC,YACVnV,MAAOiF,GAAKiL,cACZjE,OAAQhH,GAAKO,eACVgG,GAEL,EAAKuI,SAAWvI,EAGW,MAAvB,EAAKuI,SAASxK,OAChB,EAAKwK,SAASxK,KAAO7K,OAAOsJ,SAASoN,UAInC,EAAKrB,SAAStK,OACc,MAA1B,EAAKsK,SAAStK,KAAK,KACrB,EAAKsK,SAAStK,KAAO,IAAM,EAAKsK,SAAStK,MAEe,MAAtD,EAAKsK,SAAStK,KAAK,EAAKsK,SAAStK,KAAKvR,OAAS,KACjD,EAAK6b,SAAStK,MAAQ,WAMC3M,IAAzB,EAAKiX,SAASzK,QACd,EAAKyK,SAASxK,OAAStE,GAAKC,WAE5B,EAAK6O,SAASzK,OAASrE,GAAKoQ,WACnB,EAAKtB,SAASxK,MAAQtE,GAAKC,aACpC,EAAK6O,SAASzK,QAAS,GAGrB,EAAKyK,SAASuB,aAChBhL,GAAOiL,eAAe,EAAKxB,SAASuB,aAGtChL,GAAO1B,SAAW,EAAKmL,SAASkB,OAAS,EAEzC,EAAKO,KAAO,IAAI,GAAIhK,GACpB,EAAKvB,QAAU,EAAKwL,0BAIfxQ,GAAKS,SAASG,YAAeZ,GAAKS,SAAShO,KAS1Cid,IAAW1P,GAAKyQ,WAAWf,IAC/B,EAAKgB,cAAcrN,GAAcsN,UAAjC,cAAmDjB,EAAnD,iBACA,qBAGEA,EACF,EAAKkB,YAAYlB,GAEjB,EAAKa,KACFM,aACAha,MAAK,SAAC+E,GAAD,OAAQ,EAAKgV,YAAYhV,MAC9BkV,OAAM,SAACxZ,GAAD,OAAW,EAAKyZ,OAAO1N,GAAc2N,YAAa1Z,MAjFH,IA8DxD,EAAKoZ,cACHrN,GAAc4N,oBACd,+CAEF,oBAxHN,uCAiBE,WACE,OAAOtU,KAAKmI,MAlBhB,mBAqBE,WACE,OAAOnI,KAAKmS,WAtBhB,gBAyBE,WACE,OAAOnS,KAAKkO,QA1BhB,kBA6BE,WACE,OAAOlO,KAAKqI,UA9BhB,uBAqCE,WACE,IADa,EACPkM,EAAmBhe,OAAO8F,OAAO,MAD1B,kBAGM2D,KAAKkT,cAHX,IAGb,2BAAsC,kCAA5BsB,EAA4B,KAAzBC,EAAyB,KACpCF,EAAiBC,GAAKC,GAJX,8BAOb,OAAOF,IA5CX,qBA+CE,WACE,OAAOvU,KAAKiT,aAhDhB,wBAkDE,WACE,OAAOjT,KAAK+H,gBAnDhB,qCA2IU,WAAuB,WACvBqD,EAAS,IAAI,GACjBpL,KAAKmS,SAASzK,OACd1H,KAAKmS,SAASxK,KACd3H,KAAKmS,SAASvK,KACd5H,KAAKmS,SAAStK,KACd7H,KAAKmS,SAAS7V,IACd0D,KAAKmS,SAASrK,cA+BhB,OA5BAsD,EAAOgF,GAAGxJ,GAAgBgC,SAAS,SAAC9S,GAClC,EAAK4e,eAAe5e,MAGtBsV,EAAOgF,GAAGxJ,GAAgBhN,OAAO,SAACe,GAChC,EAAKyZ,OAAO1N,GAAciO,YAAaha,MAGzCyQ,EAAOgF,GAAGxJ,GAAgBmC,cAAc,WAClC,EAAK6L,eAIT,EAAK7H,UAAUrG,GAAcmO,QAAS,8BACtC,EAAKC,iBAGP1J,EAAOgF,GAAGxJ,GAAgBwI,OAAO,WAC3B,EAAKwF,cAIT,EAAKR,OACH1N,GAAcqO,aACd,2CAIG3J,IAjLX,yBAqLU,SAAYnM,GAClBe,KAAKmI,IAAMlJ,EACXe,KAAKoL,OAAOlG,MAAMjG,EAAIe,KAAKmS,SAAS/T,SAvLxC,4BA2LU,SAAepD,GACrB,IAAM5B,EAAO4B,EAAQ5B,KACfkS,EAAUtQ,EAAQsQ,QAClBR,EAAS9P,EAAQtB,IAEvB,OAAQN,GACN,KAAKyN,GAAkB4J,KACrBzQ,KAAKgT,cAAgBhT,KAAKf,GAC1Be,KAAKkO,OAAQ,EACblO,KAAK2I,KAAKlC,GAAcgK,KAAMzQ,KAAKf,IACnC,MACF,KAAK4H,GAAkBjN,MACrBoG,KAAKoU,OAAO1N,GAAc2N,YAAa/I,EAAQuG,KAC/C,MACF,KAAKhL,GAAkBmO,QACrBhV,KAAKoU,OAAO1N,GAAcuO,cAA1B,cAAgDjV,KAAKf,GAArD,eACA,MACF,KAAK4H,GAAkBqO,WACrBlV,KAAKoU,OACH1N,GAAcwO,WADhB,mBAEclV,KAAKmS,SAAS7V,IAF5B,iBAIA,MACF,KAAKuK,GAAkBsO,MACrBzM,GAAO3K,IAAP,sCAA0C+M,IAC1C9K,KAAKoV,aAAatK,GAClB9K,KAAKkT,aAAamC,OAAOvK,GACzB,MACF,KAAKjE,GAAkByO,OACrBtV,KAAK+M,UACHrG,GAAc6O,gBADhB,oCAE+BzK,IAE/B,MACF,KAAKjE,GAAkBiG,MAErB,IAAM9B,EAAeM,EAAQN,aACzBrB,EAAa3J,KAAK8L,cAAchB,EAAQE,GAU5C,GARIrB,IACFA,EAAWhH,QACX+F,GAAOjB,KAAP,oDAC+CuD,KAK7CM,EAAQlS,OAASoN,GAAeuD,MAClCJ,EAAa,IAAI,GAAgBmB,EAAQ9K,KAAM,CAC7CgL,aAAcA,EACd6D,SAAUvD,EACVsB,SAAUtB,EAAQsB,WAEpB5M,KAAKwV,eAAe1K,EAAQnB,GAC5B3J,KAAK2I,KAAKlC,GAAcgP,KAAM9L,OACzB,IAAI2B,EAAQlS,OAASoN,GAAe2D,KAazC,YADAzB,GAAOjB,KAAP,6CAAkD6D,EAAQlS,OAX1DuQ,EAAa,IAAI,GAAemB,EAAQ9K,KAAM,CAC5CgL,aAAcA,EACd6D,SAAUvD,EACVsB,SAAUtB,EAAQsB,SAClBrC,MAAOe,EAAQf,MACfsC,cAAevB,EAAQuB,cACvB1I,SAAUmH,EAAQnH,WAEpBnE,KAAKwV,eAAe1K,EAAQnB,GAC5B3J,KAAK2I,KAAKlC,GAAciP,WAAY/L,GAOtC,IAtC4B,EAsCtBmF,EAAW9O,KAAK+O,aAAa/D,GAtCP,kBAuCR8D,GAvCQ,IAuC5B,2BAA8B,KAArB,EAAqB,QAC5BnF,EAAWqF,cAAc,IAxCC,8BA2C5B,MAEF,QACE,IAAK1D,EAIH,YAHA5C,GAAOjB,KAAP,gDAC2CqD,EAD3C,oBAC6D1R,IAK/D,IAAM,EAAekS,EAAQN,aACvB,EAAahL,KAAK8L,cAAchB,EAAQ,GAE1C,GAAc,EAAWjB,eAE3B,EAAWmF,cAAchU,GAChB,EAETgF,KAAK2V,cAAc,EAAc3a,GAEjC0N,GAAOjB,KAAK,wCAAyCzM,GAEvD,SA9RR,2BAoSU,SAAcgQ,EAAsBhQ,GACrCgF,KAAKoT,cAAcwC,IAAI5K,IAC1BhL,KAAKoT,cAAcyC,IAAI7K,EAAc,IAGtChL,KAAKoT,cAAcxX,IAAIoP,GAAkCpU,KAAKoE,KAzSnE,0BA8SS,SAAagQ,GAClB,IAAM8D,EAAW9O,KAAKoT,cAAcxX,IAAIoP,GAExC,OAAI8D,GACF9O,KAAKoT,cAAciC,OAAOrK,GACnB8D,GAGF,KAtTX,qBA6TE,SACE/D,GAC+B,IAA/BnB,EAA+B,uDAAF,GAE7B,GAAI5J,KAAK4U,aAWP,OAVAlM,GAAOjB,KACL,sPAKFzH,KAAK+M,UACHrG,GAAcqC,aACd,+DAKJ,IAAMqB,EAAiB,IAAI,GAAeW,EAAM/K,KAAM4J,GAEtD,OADA5J,KAAKwV,eAAezK,EAAMX,GACnBA,IAjVX,kBAwVE,SACEW,EACAiB,GACiB,IAAjBpC,EAAiB,uDAAF,GAEf,GAAI5J,KAAK4U,aAUP,OATAlM,GAAOjB,KACL,0KAIFzH,KAAK+M,UACHrG,GAAcqC,aACd,+DAKJ,GAAKiD,EAAL,CAOApC,EAAQI,QAAUgC,EAElB,IAAME,EAAkB,IAAI,GAAgBnB,EAAM/K,KAAM4J,GAExD,OADA5J,KAAKwV,eAAezK,EAAMmB,GACnBA,EAVLxD,GAAO/N,MACL,mFA5WR,4BAyXU,SAAemQ,EAAgBnB,GACrCjB,GAAO3K,IAAP,yBACoB4L,EAAWvQ,KAD/B,YACuCuQ,EAAWqB,aADlD,sBAC4EF,IAGvE9K,KAAKkT,aAAa0C,IAAI9K,IACzB9K,KAAKkT,aAAa2C,IAAI/K,EAAQ,IAE/B9K,KAAKkT,aAAatX,IAAIkP,GAA6BlU,KAAK+S,KAjY7D,+BAqYE,SAAkBA,GAChB,IAAMmM,EAAc9V,KAAKkT,aAAatX,IAAI+N,EAAWoB,MAErD,GAAI+K,EAAa,CACf,IAAMxU,EAAQwU,EAAYC,QAAQpM,IAEnB,IAAXrI,GACFwU,EAAYte,OAAO8J,EAAO,GAK9BtB,KAAKoT,cAAciC,OAAO1L,EAAWqB,gBAjZzC,2BAqZE,SAAcF,EAAgBE,GAC5B,IAAM8K,EAAc9V,KAAKkT,aAAatX,IAAIkP,GAC1C,IAAKgL,EACH,OAAO,KAHuC,wBAMzBA,GANyB,IAMhD,2BAAoC,KAA3BnM,EAA2B,QAClC,GAAIA,EAAWqB,eAAiBA,EAC9B,OAAOrB,GARqC,8BAYhD,OAAO,OAjaX,2BAoaU,SAAcvQ,EAAqB4B,GAAuB,WAChEG,YAAW,WACT,EAAKiZ,OAAOhb,EAAM4B,KACjB,KAvaP,oBA+aU,SAAO5B,EAAqB4B,GAClC0N,GAAO/N,MAAM,aAEbqF,KAAK+M,UAAU3T,EAAM4B,GAEhBgF,KAAKgT,cAGRhT,KAAK8U,aAFL9U,KAAKyP,YArbX,uBA4bE,SAAUrW,EAAqBO,GAG7B,IAAIgB,EAFJ+N,GAAO/N,MAAM,SAAUhB,GAKrBgB,EADiB,kBAARhB,EACD,IAAIC,MAAMD,GAEVA,EAGVgB,EAAMvB,KAAOA,EAEb4G,KAAK2I,KAAKlC,GAAc7M,MAAOe,KAzcnC,qBAkdE,WACMqF,KAAKgW,YAITtN,GAAO3K,IAAP,+BAAmCiC,KAAKf,KAExCe,KAAK8U,aACL9U,KAAK8I,WAEL9I,KAAKiT,YAAa,EAElBjT,KAAK2I,KAAKlC,GAAc2I,UA9d5B,sBAkeU,WAAQ,wBACKpP,KAAKkT,aAAa+C,QADvB,IACd,2BAA6C,KAApCnL,EAAoC,QAC3C9K,KAAKoV,aAAatK,GAClB9K,KAAKkT,aAAamC,OAAOvK,IAHb,8BAMd9K,KAAKoL,OAAOqG,uBAxehB,0BA4eU,SAAa3G,GACnB,IAAMgL,EAAc9V,KAAKkT,aAAatX,IAAIkP,GAE1C,GAAKgL,EAAL,CAHiC,wBAKVA,GALU,IAKjC,2BAAoC,KAA3BnM,EAA2B,QAClCA,EAAWhH,SANoB,kCA5erC,wBA4fE,WACE,IAAI3C,KAAK4U,aAAT,CAIA,IAAMsB,EAAYlW,KAAKf,GAEvByJ,GAAO3K,IAAP,kCAAsCmY,IAEtClW,KAAK+H,eAAgB,EACrB/H,KAAKkO,OAAQ,EAEblO,KAAKoL,OAAOzI,QAEZ3C,KAAKgT,cAAgBkD,EACrBlW,KAAKmI,IAAM,KAEXnI,KAAK2I,KAAKlC,GAAcsC,aAAcmN,MA7gB1C,uBAihBE,WACE,GAAIlW,KAAK4U,eAAiB5U,KAAKgW,UAC7BtN,GAAO3K,IAAP,oDAC+CiC,KAAKgT,gBAEpDhT,KAAK+H,eAAgB,EACrB/H,KAAKiU,YAAYjU,KAAKgT,mBACjB,IAAIhT,KAAKgW,UACd,MAAM,IAAIpc,MACR,4EAEG,GAAKoG,KAAK4U,cAAiB5U,KAAKmP,KAMrC,MAAM,IAAIvV,MAAJ,eACIoG,KAAKf,GADT,sEAJNyJ,GAAO/N,MACL,qEA/hBR,0BA8iBE,WAAkC,WAArB4K,EAAqB,uDAAhB,SAAC4Q,KACjBnW,KAAK4T,KACFwC,eACAlc,MAAK,SAACmc,GAAD,OAAW9Q,EAAG8Q,MACnBlC,OAAM,SAACxZ,GAAD,OAAW,EAAKyZ,OAAO1N,GAAc2N,YAAa1Z,UAljB/D,GAA0B,oBACA,GAAA4Y,YAAc,SClCxC,IAAM+C,GAAiC,CACrCtT,WAAY,CACV,CACEC,KAAM,CACJ,+BACA,gCACA,gCACA,gCACA,gCACA,2BACA,sBACA,uBACA,wBACA,sBACA,0BACA,uBACA,sBACA,yBACA,2BACA,2BACA,0BACA,0BACA,uBAMJ,CACEA,KAAM,yBACNC,SAAU,SACVC,WAAY,WAEd,CACEF,KAAM,wBACNC,SAAU,kBACVC,WAAY,UAEd,CACEF,KAAM,wCACNE,WAAY,+BACZD,SAAU,uBAEZ,CACED,KAAM,wCACNE,WAAY,+BACZD,SAAU,uBAEZ,CACED,KAAM,0BACNE,WAAY,QACZD,SAAU,SAEZ,CACED,KAAM,8CACNE,WAAY,SACZD,SAAU,WAGdE,aAAc,gBAGD,M,aC9DTmT,GAAgB,CACpBC,YAC0C,iBAG7B,MCaM,G,wDAArB,iD,0BACE,EAAAC,SAAW,GACX,EAAAxV,OAAS,mBACT,EAAAC,aAAe,GACf,EAAAJ,SAAW,0BACX,EAAAM,SAAW,CAAC,CAAEnG,KAAM,SAAUD,QAAS,kBACvC,EAAA+F,cAAgB,GA4FR,EAAA2V,eAAiB,IAAIvD,IAlG/B,E,kDASE,WAAW,WACTvW,QAAQmB,IAAI,GAAayY,aAEzB,IAAIG,EAAW,kBACXC,EAAWD,EAASpZ,MAAMiB,KAAKP,iBAYnC+B,KAAK+K,KAAO,IAAI,QAAK7P,EAAW,CAC9ByM,KAAM,mBACNC,KAAM,IACNC,KAAM,IACNvL,IAAK,SACLoL,QAAQ,EACRtJ,MAAOwY,EACPvM,OAAQ,GACRgJ,MAAO,IAGTrT,KAAK+K,KAAKqF,GAAG3J,GAAcgK,MAAM,SAACoG,GAChCja,QAAQmB,IAAI,iBACG,OAAX8Y,GAIJja,QAAQmB,IAAI,eAAiB8Y,GAC7B,EAAK/V,SAAW+V,EAChB,EAAK5V,OAAS,0BALZrE,QAAQmB,IAAI,8CAShBiC,KAAK+K,KAAKqF,GAAG3J,GAAciP,YAAY,SAAC/L,GACtC/M,QAAQmB,IAAI,uBACZ,IACE,EAAK+Y,oBAAoBnN,GACzB,MAAOzR,GAIP,YADA,EAAK+I,OAAS,sBAAwB0I,EAAWoB,KAAO,UAAY7S,GAItE,EAAK+I,OAAS,iBAAmB0I,EAAWoB,KAC5CnO,QAAQmB,IAAI,EAAKkD,QAEjB0I,EAAWyG,GAAG7J,GAAoB4D,MAAM,SAACrU,GACvC8G,QAAQmB,IAAI,kBAAmBjI,GAC/B,EAAKsL,SAASxK,KAAK,CAAEqE,KAAM0O,EAAWoB,KAAM/P,QAASlF,OAEvD6T,EAAWyG,GAAG7J,GAAoB6I,OAAO,WACvC,EAAKnO,OAAS,qBAAuB0I,EAAWoB,KAChD,EAAKgM,iBAAiBpN,EAAWoB,YAKrC/K,KAAK+K,KAAKqF,GAAG3J,GAAcsC,cAAc,SAAC9J,GACxCrC,QAAQmB,IAAI,yBAEZ,EAAKkD,OAAS,2BACdrE,QAAQmB,IAAI,EAAKkD,WAGnBjB,KAAK+K,KAAKqF,GAAG3J,GAAc2I,OAAO,WAChCxS,QAAQmB,IAAI,kBACZ,EAAK2Y,eAAe3I,SAClB,SAACpE,EAA4BqB,GAC3BrB,EAAWhH,WAIf,EAAK1B,OAAS,uCACdrE,QAAQmB,IAAI,2BAGdiC,KAAK+K,KAAKqF,GAAG3J,GAAc7M,OAAO,SAACD,GACjCiD,QAAQmB,IAAI,kBACZnB,QAAQmB,IAAIpE,Q,iCAKhB,SAAoBgQ,GAClB3J,KAAK0W,eAAeb,IAAIlM,EAAWoB,KAAMpB,K,8BAE3C,SAAiBqN,GACfhX,KAAK0W,eAAerB,OAAO2B,K,yBAE7B,WACEhX,KAAKiX,gB,2BAGP,WAAa,WACXra,QAAQmB,IAAI,uBACZnB,QAAQmB,IAAI,mCAAoCiC,KAAK0W,gBACrD,IAAIQ,EAAYlX,KAAKkB,aACrBlB,KAAKkB,aAAe,GACpBlB,KAAKoB,SAASxK,KAAK,CAAEqE,KAAM,KAAMD,QAASkc,IAC1ClX,KAAK0W,eAAe3I,SAAQ,SAACpE,EAA4BqN,GACjDrN,GAAcA,EAAWwF,MAI/BxF,EAAWH,KAAK0N,GAChBta,QAAQmB,IAAI,YAAc4L,EAAWoB,KAAO,eAAiBmM,IAJ3D,EAAKH,iBAAiBpN,EAAWoB,W,gFAQvC,kHACMoM,EAAWnX,KAAKe,cACpBf,KAAKe,cAAgB,GACrBnE,QAAQmB,IAAI,sBAAwBoZ,GAChCC,EAAOpX,KAAK+K,KAAKsM,QAAQF,EAAU,CACrChT,UAAU,SAECjJ,IAATkc,EAPN,iDAUME,EAAgBF,EACpBpX,KAAK8W,oBAAoBQ,GACzBA,EAAclH,GAAG7J,GAAoBkK,MAAM,WACzC,EAAKxP,OAAS,iBAAmBqW,EAAcvM,KAC/CnO,QAAQmB,IAAI,EAAKkD,WAEnBqW,EAAclH,GAAG7J,GAAoB4D,MAAM,SAACrU,GAC1C,EAAKsL,SAASxK,KAAK,CAAEqE,KAAMqc,EAAcvM,KAAM/P,QAASlF,OAE1DwhB,EAAclH,GAAG7J,GAAoB6I,OAAO,WAC1C,EAAKnO,OAAS,sBAAwBqW,EAAcvM,QApBxD,iD,8DA7H2C,Q,WCd7C,GAAOvK,OAAS,GAED,U,aCHT+W,GAAgC,CACpC,CACE1P,KAAM,IACN5M,KAAM,OACNuc,UAAW,EACXC,KAAM,CACJtX,MAAO,eACPuX,SAAU,CACR,CACEzc,KAAM,cACNmF,QAAS,0BAEX,CACE1D,SAAU,iBACV0D,QAAS,6BAKjB,CACEyH,KAAM,QACN5M,KAAM,kBACNuc,UAAW,GACXC,KAAM,CACJtX,MAAO,iCACPuX,SAAU,CACR,CACEzc,KAAM,cACNmF,QAAS,kCAEX,CACE1D,SAAU,iBACV0D,QAAS,qCAKjB,CACEyH,KAAM,SACN5M,KAAM,QAINuc,UAAW,kBACT,wCACFC,KAAM,CACJtX,MAAO,uBACPuX,SAAU,CACR,CACEzc,KAAM,cACNmF,QAAS,2BAEX,CACE1D,SAAU,iBACV0D,QAAS,+BAObuX,GAAS,eAAa,CAC1BC,QAAS,eAAiB,KAC1BL,YA8DF,SAAS1Y,KACP,OAAO,kBAAWpB,QAAQ,QAAgBoB,iBA3D5C8Y,GAAOE,YAAW,SAACC,EAAIC,EAAMC,GAI3B,IAAMC,EAAmBH,EAAGI,QACzBlb,QACAmb,UACAC,MAAK,SAACvc,GAAD,OAAOA,EAAE4b,MAAQ5b,EAAE4b,KAAKtX,SAG1BkY,EAAkBP,EAAGI,QACxBlb,QACAmb,UACAC,MAAK,SAACvc,GAAD,OAAOA,EAAE4b,MAAQ5b,EAAE4b,KAAKC,YAE1BY,EAA0BP,EAAKG,QAClClb,QACAmb,UACAC,MAAK,SAACvc,GAAD,OAAOA,EAAE4b,MAAQ5b,EAAE4b,KAAKC,YAehC,GAZIO,EACFtf,SAASwH,MAAQ8X,EAAiBR,KAAKtX,MAC9BmY,IACT3f,SAASwH,MAAQmY,EAAwBb,KAAKtX,OAIhDoY,MAAMR,KAAKpf,SAAS6f,iBAAiB,iCAAiCC,KACpE,SAACC,GAAD,OAAQA,EAAG5e,WAAYC,YAAY2e,OAIhCL,EAAiB,OAAOL,IAG5BK,EAAgBZ,KAAaC,SAC3Be,KAAI,SAACE,GACJ,IAAM9f,EAAMF,SAASQ,cAAc,QASnC,OAPA5C,OAAO0f,KAAK0C,GAAQ5K,SAAQ,SAACzR,GAC3BzD,EAAI6B,aAAa4B,EAAKqc,EAAOrc,OAI/BzD,EAAI6B,aAAa,6BAA8B,IAExC7B,KAGRkV,SAAQ,SAAClV,GAAD,OAAcF,SAASqB,KAAKC,YAAYpB,MAEnDmf,OAUFL,GAAOE,YAAW,SAACC,EAAIC,EAAMC,GAC3Bpb,QAAQmB,IAAI,uBAAyBc,MACrB,UAAZiZ,EAAG7c,MAAqB4D,KAG1BmZ,IAFAA,EAAK,CAAE/c,KAAM,aAMF,W,kCC9If,W,kHCE0B,S,iBACC,U,iBACL,S,wIAFpB,eAA2C,GAA9B6c,GAAG,SAAO,C,wBAAC,iBAAK,C,YAC7B,eAA6C,GAAhCA,GAAG,UAAQ,C,wBAAC,iBAAM,C,YAC/B,eAAuC,GAA1BA,GAAG,KAAG,C,wBAAC,iBAAK,C,YAEzB,eAAe,I,cCLjB,MAAMxd,EAAS,GAGfA,EAAOkG,OAASA,EAED,Q,YCDb,eAAS,GAAD,OAAI,IAAJ,qBAA6C,CACnDoY,MADmD,WAEjDhc,QAAQmB,IACN,uGAIJ8a,WAPmD,WAQjDjc,QAAQmB,IAAI,wCAEd+a,OAVmD,WAWjDlc,QAAQmB,IAAI,6CAEdgb,YAbmD,WAcjDnc,QAAQmB,IAAI,gCAEdib,QAhBmD,WAiBjDpc,QAAQmB,IAAI,8CAEdkb,QAnBmD,WAoBjDrc,QAAQmB,IACN,kEAGJpD,MAxBmD,SAwB7C,GACJiC,QAAQjC,MAAM,4CAA6C,M,4BCrB3Due,G,UAAS,eAAUC,IACzBD,EAAOE,IAAI3a,EAAA,MAAO2a,IAAIzB,EAAA,MAAQ0B,MAAM,S,0DCVpC","file":"js/app.92875ebd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"7567a488\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"about\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"97dd7181\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { MutationTree } from 'vuex'\r\nimport { AppState } from './state'\r\nimport { TodoItem } from './models'\r\n\r\nexport enum AppMutationTypes {\r\n  SetLoading = 'SET_LOADING',\r\n  SuccessGetTodos = 'SUCCESS_GET_TODOS',\r\n}\r\n\r\nexport type AppMutations = {\r\n  [AppMutationTypes.SetLoading](state: AppState, value: boolean): void;\r\n  [AppMutationTypes.SuccessGetTodos](state: AppState, todos: TodoItem[]): void;\r\n}\r\n\r\nexport const mutations: MutationTree<AppState> & AppMutations = {\r\n  [AppMutationTypes.SetLoading] (state, value) {\r\n    state.loading = value\r\n  },\r\n  [AppMutationTypes.SuccessGetTodos] (state, todos: TodoItem[]) {\r\n    state.todos = [...state.todos, ...todos]\r\n  }\r\n\r\n}\r\n","import { TodoItem } from './models'\r\n\r\nexport type AppState = {\r\n  loading: boolean;\r\n  todos: TodoItem[];\r\n}\r\n\r\nexport const state: AppState = {\r\n  loading: false,\r\n  todos: []\r\n}\r\n","import { ActionTree } from \"vuex\";\r\nimport { AppMutations, AppMutationTypes } from \"./mutations\";\r\nimport { AppState } from \"./state\";\r\nimport { RootState } from \"@/store\";\r\nimport axios from \"axios\";\r\nimport { GenerateActionAugments } from \"@/store/util\";\r\n\r\ntype ActionAugments = GenerateActionAugments<AppState, AppMutations>;\r\n\r\nexport enum AppActionTypes {\r\n  StartGetTodos = \"START_GET_TODOS\",\r\n}\r\n\r\nexport type AppActions = {\r\n  [AppActionTypes.StartGetTodos](context: ActionAugments): void;\r\n};\r\n\r\nexport const actions: ActionTree<AppState, RootState> & AppActions = {\r\n  async [AppActionTypes.StartGetTodos]({ commit }) {\r\n    try {\r\n      commit(AppMutationTypes.SetLoading, true);\r\n      const { data } = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/todos\"\r\n      );\r\n      commit(AppMutationTypes.SuccessGetTodos, data);\r\n      commit(AppMutationTypes.SetLoading, false);\r\n    } catch (err) {\r\n      console.log(\"Error in AppActionTypes.StartGetTodos: \", err);\r\n    }\r\n  },\r\n};\r\n","import { GetterTree } from \"vuex\";\r\nimport { AppState } from \"./state\";\r\nimport { RootState } from \"@/store\";\r\n\r\nexport type AppGetters = {\r\n    \r\n};\r\n\r\nexport const getters: GetterTree<AppState, RootState> & AppGetters = {};\r\n","import { MutationTree } from 'vuex'\r\nimport { AuthState } from './state'\r\n\r\nexport enum AuthMutationTypes {\r\n  SET_API_ACCESS_TOKEN = 'SET_API_ACCESS_TOKEN'\r\n}\r\n\r\nexport type AuthMutations = {\r\n  [AuthMutationTypes.SET_API_ACCESS_TOKEN](state: AuthState, token: string): void;\r\n}\r\n\r\nexport const mutations: MutationTree<AuthState> & AuthMutations = {\r\n  [AuthMutationTypes.SET_API_ACCESS_TOKEN] (state, token) {\r\n    state.API_ACCESS_TOKEN = token\r\n  }\r\n}\r\n","import {\r\n  Module\r\n} from 'vuex'\r\nimport { state, AppState } from './state'\r\nimport { mutations, AppMutations } from './mutations'\r\nimport { getters, AppGetters } from './getters'\r\nimport { actions, AppActions } from './actions'\r\nimport { RootState } from '@/store'\r\nimport { GenerateStoreType } from '@/store/util'\r\nexport * from './state'\r\nexport type AppStore = GenerateStoreType<Pick<RootState, 'APP'>, AppMutations, AppGetters, AppActions>;\r\nexport const AppModule: Module<AppState, RootState> = {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}\r\n","export type AuthState = {\r\n  API_ACCESS_TOKEN: string;\r\n};\r\n\r\nexport const state: AuthState = {\r\n  API_ACCESS_TOKEN: \"DEBUG_MODE\",\r\n};\r\n","import { ActionTree } from 'vuex'\r\nimport { AuthMutations } from './mutations'\r\nimport { AuthState } from './state'\r\nimport { RootState } from '@/store'\r\nimport { GenerateActionAugments } from '@/store/util'\r\n\r\ntype ActionAugments = GenerateActionAugments<AuthState, AuthMutations>\r\n\r\nexport enum AuthActionTypes {}\r\nexport type AuthActions = {}\r\nexport const actions: ActionTree<AuthState, RootState> & AuthActions = {}\r\n","import { Module } from \"vuex\";\r\nimport { state, AuthState } from \"./state\";\r\nimport { mutations, AuthMutations } from \"./mutations\";\r\nimport { getters, AuthGetters } from \"./getters\";\r\nimport { actions, AuthActions } from \"./actions\";\r\nimport { RootState } from \"@/store\";\r\nimport { GenerateStoreType } from \"@/store/util\";\r\nexport * from \"./state\";\r\nexport type AuthStore = GenerateStoreType<\r\n  Pick<RootState, \"AUTH\">,\r\n  AuthMutations,\r\n  AuthGetters,\r\n  AuthActions\r\n>;\r\nexport const AuthModule: Module<AuthState, RootState> = {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n","import { createStore, createLogger } from \"vuex\";\r\n\r\nimport { AppModule, AppStore, AppState } from \"@/store/app\";\r\nimport { AppActionTypes } from \"@/store/app/actions\";\r\nimport { AppMutationTypes } from \"@/store/app/mutations\";\r\n\r\nimport { AuthModule, AuthStore, AuthState } from \"@/store/auth\";\r\nimport { AuthActionTypes } from \"@/store/auth/actions\";\r\nimport { AuthMutationTypes } from \"@/store/auth/mutations\";\r\nimport createPersistedState from \"vuex-persistedstate\";\r\n\r\nexport type RootState = {\r\n  APP: AppState;\r\n  AUTH: AuthState;\r\n};\r\n\r\nexport const AllActionTypes = {\r\n  APP: AppActionTypes,\r\n  AUTH: AuthActionTypes,\r\n};\r\n\r\nexport const AllMutationTypes = {\r\n  APP: AppMutationTypes,\r\n  AUTH: AuthMutationTypes,\r\n};\r\n\r\nexport type Store = AuthStore & AppStore;\r\n\r\nexport const store = createStore({\r\n  plugins:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? [createPersistedState()]\r\n      : [createLogger(), createPersistedState()],\r\n  modules: {\r\n    APP: AppModule,\r\n    AUTH: AuthModule,\r\n  },\r\n});\r\n\r\nexport function useStore(): Store {\r\n  return store as Store;\r\n}\r\n\r\nexport default store;\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SendArticleWithPositioning.vue?vue&type=style&index=0&id=6bfd6b22&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PeerChat.vue?vue&type=style&index=0&id=67dfd388&scoped=true&lang=css\"","import { GetterTree } from \"vuex\";\r\nimport { AuthState } from \"./state\";\r\nimport { RootState } from \"@/store\";\r\n\r\nexport enum AuthGetterTypes {\r\n  isAuthenticated = \"isAuthenticated\",\r\n}\r\n\r\nexport type AuthGetters = {\r\n  [AuthGetterTypes.isAuthenticated](state: AuthState): boolean;\r\n};\r\n\r\nexport const getters: GetterTree<AuthState, RootState> & AuthGetters = {\r\n  [AuthGetterTypes.isAuthenticated](state: AuthState) {\r\n      console.log(\"state.API_ACCESS_TOKEN : \", state.API_ACCESS_TOKEN)\r\n    return !!state.API_ACCESS_TOKEN;\r\n  },\r\n};\r\n","<template>\r\n  <div class=\"home\">\r\n    <SendArticleWithPositioning />\r\n    <br />\r\n    <PerChat />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" >\r\nimport { Options, Vue } from \"vue-class-component\";\r\nimport SendArticleWithPositioning from \"@/components/SendArticleWithPositioning.vue\"; // @ is an alias to /src\r\nimport PerChat from \"@/components/PeerChat.vue\";\r\n@Options({\r\n  components: {\r\n    SendArticleWithPositioning,\r\n    PerChat,\r\n  },\r\n})\r\nexport default class Home extends Vue {}\r\n</script>\r\n","<template>\r\n  <div class=\"SendArticleWithPositioning\">\r\n    <h1>Send Article With Positioning</h1>\r\n\r\n    <form @submit.prevent=\"submitForm\">\r\n      <label for=\"title\">Title</label>\r\n      <input id=\"title\" type=\"text\" v-model=\"titleInput\" />\r\n      <label for=\"content\">Content</label>\r\n      <textarea\r\n        id=\"content\"\r\n        type=\"text\"\r\n        v-model=\"contentInput\"\r\n        style=\"resize: none\"\r\n      />\r\n      <button type=\"submit\">Submit</button>\r\n      <p>Result : {{ resMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from \"vue-class-component\";\r\nimport axios from \"axios\";\r\nimport { PositionClass, PositionPoint } from \"../global/Positions\";\r\ntype Article = { title: string; content: string; position: PositionPoint };\r\n@Options({\r\n  // props: {\r\n  //   msg: String,\r\n  // },\r\n})\r\nexport default class SendArticleWithPositioning extends Vue {\r\n  titleInput = \"\";\r\n  contentInput = \"\";\r\n  resMessage = \"\";\r\n  currentPosition!: PositionPoint;\r\n  async submitForm() {\r\n    this.currentPosition = await new PositionClass().getPosition();\r\n\r\n    this.sendArticleToServer({\r\n      title: this.titleInput,\r\n      content: this.contentInput,\r\n      position: this.currentPosition,\r\n    });\r\n  }\r\n  async sendArticleToServer(article: Article) {\r\n    console.log(\"article : \", article);\r\n    try {\r\n      const response = await axios.post(\"/api/post_article\", article);\r\n      console.log(response.data[\"result\"]);\r\n      this.resMessage = response.data[\"result\"];\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.SendArticleWithPositioning {\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(255, 171, 171);\r\n}\r\n.SendArticleWithPositioning > form * {\r\n  width: 100%;\r\n}\r\n.SendArticleWithPositioning > form {\r\n  width: 500px;\r\n}\r\n</style>","export type PositionPoint = { latitude: number; longitude: number };\r\n\r\nexport class PositionClass {\r\n  getPosition(): Promise<PositionPoint> {\r\n    return new Promise<PositionPoint>((resolve,reject) => {\r\n      if (!navigator.geolocation) {\r\n        throw \"Geolocation is not supported by your browser\";\r\n      }\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position: GeolocationPosition): void => {\r\n          const res: PositionPoint = {\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n          };\r\n          resolve(res);\r\n        },\r\n        () => {\r\n          reject(\"Unable to retrieve your location\")\r\n          // throw \"Unable to retrieve your location\";\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          // maximumAge?: number;\r\n          // timeout?: number;\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","\r\nimport { Options, Vue } from \"vue-class-component\";\r\nimport axios from \"axios\";\r\nimport { PositionClass, PositionPoint } from \"../global/Positions\";\r\ntype Article = { title: string; content: string; position: PositionPoint };\r\n@Options({\r\n  // props: {\r\n  //   msg: String,\r\n  // },\r\n})\r\nexport default class SendArticleWithPositioning extends Vue {\r\n  titleInput = \"\";\r\n  contentInput = \"\";\r\n  resMessage = \"\";\r\n  currentPosition!: PositionPoint;\r\n  async submitForm() {\r\n    this.currentPosition = await new PositionClass().getPosition();\r\n\r\n    this.sendArticleToServer({\r\n      title: this.titleInput,\r\n      content: this.contentInput,\r\n      position: this.currentPosition,\r\n    });\r\n  }\r\n  async sendArticleToServer(article: Article) {\r\n    console.log(\"article : \", article);\r\n    try {\r\n      const response = await axios.post(\"/api/post_article\", article);\r\n      console.log(response.data[\"result\"]);\r\n      this.resMessage = response.data[\"result\"];\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n","import { render } from \"./SendArticleWithPositioning.vue?vue&type=template&id=6bfd6b22&scoped=true\"\nimport script from \"./SendArticleWithPositioning.vue?vue&type=script&lang=ts\"\nexport * from \"./SendArticleWithPositioning.vue?vue&type=script&lang=ts\"\n\nimport \"./SendArticleWithPositioning.vue?vue&type=style&index=0&id=6bfd6b22&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6bfd6b22\"\n\nexport default script","<template>\r\n  <div class=\"PerChat\">\r\n    <h1>Send Article With Positioning</h1>\r\n    <div class=\"status_box\">\r\n      <p>Connection ID: <br />{{ recvId }}</p>\r\n      <!-- <p>Status : {{ status }}</p> -->\r\n    </div>\r\n    <br />\r\n    <div class=\"message_box\">\r\n      <p>{{ message }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from \"vue-class-component\";\r\n// import Peer, { DataConnection } from \"peerjs\";\r\n\r\n// import axios from \"axios\";\r\n// import { PositionClass, PositionPoint } from \"../global/Positions\";\r\n// type Article = { title: string; content: string; position: PositionPoint };\r\n@Options({\r\n  // props: {\r\n  //   msg: String,\r\n  // },\r\n})\r\nexport default class PerChat extends Vue {\r\n  // private peer = new Peer(undefined, { debug: 2 });\r\n  // private lastPeerId = \"\";\r\n  // recvId = \"\";\r\n  // message = \"\";\r\n  // conn!: DataConnection | null;\r\n  // // status = \"Reddy\";\r\n  // created() {\r\n  //   this.peer.on(\"open\", (id) => {\r\n  //     // Workaround for peer.reconnect deleting previous id\r\n  //     if (this.peer.id === null) {\r\n  //       console.log(\"Error : Received null id from peer open\");\r\n  //       this.peer.id = this.lastPeerId;\r\n  //     } else {\r\n  //       this.lastPeerId = this.peer.id;\r\n  //     }\r\n  //     console.log(\"ID: \" + this.peer.id);\r\n  //     this.recvId = this.peer.id;\r\n  //     this.message = \"Awaiting connection...\";\r\n  //   });\r\n  //   this.peer.on(\"connection\", (c) => {\r\n  //     // Allow only a single connection\r\n  //     if (this.conn && this.conn.open) {\r\n  //       c.on(\"open\", function () {\r\n  //         c.send(\"Already connected to another client\");\r\n  //         setTimeout(() => {\r\n  //           c.close();\r\n  //         }, 500);\r\n  //       });\r\n  //       return;\r\n  //     }\r\n  //     this.conn = c;\r\n  //     console.log(\"Connected to: \" + this.conn.peer);\r\n  //     this.message = \"Connected\";\r\n  //     this.ready();\r\n  //   });\r\n  // }\r\n  // ready() {\r\n  //   if (this.conn === null) {\r\n  //     console.log(\"Error : conn is null\");\r\n  //     return;\r\n  //   }\r\n  //   this.conn.on(\"data\", (data) => {\r\n  //     console.log(\"Data recieved : \", data);\r\n  //     this.message +=\r\n  //       (typeof data === typeof \"\" ? data : \"(the data is not string)\") + \"\\n\";\r\n  //   });\r\n  //   this.conn.on(\"close\", () => {\r\n  //     this.message = \"Connection reset<br>Awaiting connection...\";\r\n  //     // status.innerHTML = \"Connection reset<br>Awaiting connection...\";\r\n  //     this.conn = null;\r\n  //   });\r\n  //   this.peer.on(\"disconnected\", () => {\r\n  //     this.message = \"Connection lost. Please reconnect\";\r\n  //     console.log(\"Connection lost. Please reconnect\");\r\n  //     // Workaround for peer.reconnect deleting previous id\r\n  //     this.peer.id = this.lastPeerId;\r\n  //     // this.peer._lastServerId = this.lastPeerId;\r\n  //     this.peer.reconnect();\r\n  //   });\r\n  //   this.peer.on(\"close\", () => {\r\n  //     this.conn = null;\r\n  //     this.message = \"Connection destroyed. Please refresh\";\r\n  //     console.log(\"Connection destroyed\");\r\n  //   });\r\n  //   this.peer.on(\"error\", (err) => {\r\n  //     console.log(err);\r\n  //     alert(\"\" + err);\r\n  //   });\r\n  // }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.PerChat {\r\n  flex-direction: column;\r\n\r\n  height: 100vh;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(255, 171, 171);\r\n}\r\n.PerChat * {\r\n  float: left;\r\n  width: 100%;\r\n}\r\n</style>","\r\nimport { Options, Vue } from \"vue-class-component\";\r\n// import Peer, { DataConnection } from \"peerjs\";\r\n\r\n// import axios from \"axios\";\r\n// import { PositionClass, PositionPoint } from \"../global/Positions\";\r\n// type Article = { title: string; content: string; position: PositionPoint };\r\n@Options({\r\n  // props: {\r\n  //   msg: String,\r\n  // },\r\n})\r\nexport default class PerChat extends Vue {\r\n  // private peer = new Peer(undefined, { debug: 2 });\r\n  // private lastPeerId = \"\";\r\n  // recvId = \"\";\r\n  // message = \"\";\r\n  // conn!: DataConnection | null;\r\n  // // status = \"Reddy\";\r\n  // created() {\r\n  //   this.peer.on(\"open\", (id) => {\r\n  //     // Workaround for peer.reconnect deleting previous id\r\n  //     if (this.peer.id === null) {\r\n  //       console.log(\"Error : Received null id from peer open\");\r\n  //       this.peer.id = this.lastPeerId;\r\n  //     } else {\r\n  //       this.lastPeerId = this.peer.id;\r\n  //     }\r\n  //     console.log(\"ID: \" + this.peer.id);\r\n  //     this.recvId = this.peer.id;\r\n  //     this.message = \"Awaiting connection...\";\r\n  //   });\r\n  //   this.peer.on(\"connection\", (c) => {\r\n  //     // Allow only a single connection\r\n  //     if (this.conn && this.conn.open) {\r\n  //       c.on(\"open\", function () {\r\n  //         c.send(\"Already connected to another client\");\r\n  //         setTimeout(() => {\r\n  //           c.close();\r\n  //         }, 500);\r\n  //       });\r\n  //       return;\r\n  //     }\r\n  //     this.conn = c;\r\n  //     console.log(\"Connected to: \" + this.conn.peer);\r\n  //     this.message = \"Connected\";\r\n  //     this.ready();\r\n  //   });\r\n  // }\r\n  // ready() {\r\n  //   if (this.conn === null) {\r\n  //     console.log(\"Error : conn is null\");\r\n  //     return;\r\n  //   }\r\n  //   this.conn.on(\"data\", (data) => {\r\n  //     console.log(\"Data recieved : \", data);\r\n  //     this.message +=\r\n  //       (typeof data === typeof \"\" ? data : \"(the data is not string)\") + \"\\n\";\r\n  //   });\r\n  //   this.conn.on(\"close\", () => {\r\n  //     this.message = \"Connection reset<br>Awaiting connection...\";\r\n  //     // status.innerHTML = \"Connection reset<br>Awaiting connection...\";\r\n  //     this.conn = null;\r\n  //   });\r\n  //   this.peer.on(\"disconnected\", () => {\r\n  //     this.message = \"Connection lost. Please reconnect\";\r\n  //     console.log(\"Connection lost. Please reconnect\");\r\n  //     // Workaround for peer.reconnect deleting previous id\r\n  //     this.peer.id = this.lastPeerId;\r\n  //     // this.peer._lastServerId = this.lastPeerId;\r\n  //     this.peer.reconnect();\r\n  //   });\r\n  //   this.peer.on(\"close\", () => {\r\n  //     this.conn = null;\r\n  //     this.message = \"Connection destroyed. Please refresh\";\r\n  //     console.log(\"Connection destroyed\");\r\n  //   });\r\n  //   this.peer.on(\"error\", (err) => {\r\n  //     console.log(err);\r\n  //     alert(\"\" + err);\r\n  //   });\r\n  // }\r\n}\r\n","import { render } from \"./PeerChat.vue?vue&type=template&id=67dfd388&scoped=true\"\nimport script from \"./PeerChat.vue?vue&type=script&lang=ts\"\nexport * from \"./PeerChat.vue?vue&type=script&lang=ts\"\n\nimport \"./PeerChat.vue?vue&type=style&index=0&id=67dfd388&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-67dfd388\"\n\nexport default script","\r\nimport { Options, Vue } from \"vue-class-component\";\r\nimport SendArticleWithPositioning from \"@/components/SendArticleWithPositioning.vue\"; // @ is an alias to /src\r\nimport PerChat from \"@/components/PeerChat.vue\";\r\n@Options({\r\n  components: {\r\n    SendArticleWithPositioning,\r\n    PerChat,\r\n  },\r\n})\r\nexport default class Home extends Vue {}\r\n","import { render } from \"./Home.vue?vue&type=template&id=334e7eec\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"flex flex-row justify-center\">\n    <div class=\"ChatingBox w-3/4 children:bg-gray text-center\">\n      <h1 class=\"text-4xl\">Real Time Chating Box</h1>\n      <div class=\"border-2 border-black\">\n        <h2>Connection ID:</h2>\n        <p v-show=\"myPeerID !== ''\">\n          {{ myPeerID }}\n        </p>\n      </div>\n      <div class=\"border-black border-2\">\n        <h2 class=\"text-2xl\">Connect To :</h2>\n        <input\n          type=\"text\"\n          v-model=\"connectTarget\"\n          class=\"border-2 border-black\"\n        />\n        <button @click=\"DoConnect\" class=\"ml-2 border-2 border-black\">\n          Connect\n        </button>\n      </div>\n\n      <div class=\"border-black border-2\">\n        <h2>Status:</h2>\n        <p>{{ status }}</p>\n      </div>\n      <div>\n        <input\n          v-model=\"currentinput\"\n          class=\"border-black border-2\"\n          type=\"text\"\n        />\n        <button @click=\"SubmitMessage\" class=\"ml-2 border-2 border-black\">\n          Sent\n        </button>\n      </div>\n      <div class=\"border-2 border-black\">\n        <h2 class=\"text-2xl border-b-2 border-black\">ChatRoom :</h2>\n        <div\n          class=\"chatList text-left\"\n          v-for=\"(item, index) in chatList\"\n          :key=\"index\"\n        >\n          {{ index }} - {{ item.name }} : {{ item.message }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" >\nimport { Peer } from \"../lib/peerjs/lib/peer\";\nimport { DataConnection } from \"../lib/peerjs/lib/dataconnection\";\nimport { PeerEventType, ConnectionEventType } from \"../lib/peerjs/lib/enums\";\nimport { Options, Vue } from \"vue-class-component\";\nimport RTCconnectionToRemotePeersConfiguration from \"@/config/RTCPeerConnectionConfiguration\";\nimport { useStore, AllMutationTypes } from \"@/store\";\nimport peerjsConfig from \"../config/peerjs_config\";\n// import * as fs from \"fs\";\n/* eslint-disable @typescript-eslint/no-var-requires */\n// import fs from \"fs\";\n// let a = file.readFileSync(\"../config/peerjs.config.json\", \"utf8\");\n// console.log(a);\n// @Options({\n//   components: {\n//     // SendArticleWithPositioning,\n//     // PerChat,\n//   },\n// })\nexport default class RealTimeChatBox extends Vue {\n  nickname = \"\";\n  status = \"Initializing ...\";\n  currentinput = \"\";\n  myPeerID = \"(Not generated yet ...)\";\n  chatList = [{ name: \"SYSTEM\", message: \"DEBUG_MESSAGE\" }];\n  connectTarget = \"\";\n  private peer!: Peer;\n\n  startPeerjs() {\n    console.log(peerjsConfig.RunningHost);\n\n    let vueStore = useStore();\n    let apiToken = vueStore.state.AUTH.API_ACCESS_TOKEN as string;\n    // /* eslint-disable @typescript-eslint/no-var-requires */\n    // let fs = require(\"fs\");\n\n    // fs.readFile(\n    //   \"../config/peerjs.config.json\",\n    //   function (err: Error, data: string) {\n    //     if (err) throw err;\n\n    //     console.log(data.toString());\n    //   }\n    // );\n    this.peer = new Peer(undefined, {\n      host: \"peerjs.localhost\",\n      port: 443,\n      path: \"/\",\n      key: \"peerjs\",\n      secure: true,\n      token: apiToken,\n      config: RTCconnectionToRemotePeersConfiguration,\n      debug: 3,\n    });\n\n    this.peer.on(PeerEventType.Open, (peerID: string) => {\n      console.log(\"On open event\");\n      if (peerID === null) {\n        console.log(\"Error : Received null id from peer open\");\n        return;\n      }\n      console.log(\"NewPeerID : \" + peerID);\n      this.myPeerID = peerID;\n      this.status = \"Awaiting connection...\";\n    });\n\n    // Connection from others\n    this.peer.on(PeerEventType.Connection, (connection: DataConnection) => {\n      console.log(\"On connection event\");\n      try {\n        this.appendNewConnection(connection);\n      } catch (e) {\n        // connection.provider\n        // console.log(connection.provider)\n        this.status = \"Fail to Connect to:\" + connection.peer + \"Error :\" + e;\n        return;\n      }\n\n      this.status = \"Connected to: \" + connection.peer;\n      console.log(this.status);\n\n      connection.on(ConnectionEventType.Data, (data) => {\n        console.log(\"Data recieved: \", data);\n        this.chatList.push({ name: connection.peer, message: data });\n      });\n      connection.on(ConnectionEventType.Close, () => {\n        this.status = \"Connection reset: \" + connection.peer;\n        this.removeConnection(connection.peer);\n      });\n      // }\n    });\n\n    this.peer.on(PeerEventType.Disconnected, (id: string) => {\n      console.log(\"On disconnected event\");\n\n      this.status = \"Disconnected with Server\";\n      console.log(this.status);\n    });\n\n    this.peer.on(PeerEventType.Close, () => {\n      console.log(\"On close event\");\n      this.allConnections.forEach(\n        (connection: DataConnection, connectionId) => {\n          connection.close();\n        }\n      );\n      // this.connectionToRemotePeers = undefined;\n      this.status = \"Connection destroyed. Please refresh\";\n      console.log(\"Connection destroyed\");\n    });\n\n    this.peer.on(PeerEventType.Error, (err: Error) => {\n      console.log(\"On error event\");\n      console.log(err);\n      // alert(\"\" + err);\n    });\n  }\n  private allConnections = new Map();\n  appendNewConnection(connection: DataConnection): void {\n    this.allConnections.set(connection.peer, connection);\n  }\n  removeConnection(connectionID: string): void {\n    this.allConnections.delete(connectionID);\n  }\n  beforeMount() {\n    this.startPeerjs();\n  }\n\n  SubmitMessage() {\n    console.log(\"Enter SubmitMessage\");\n    console.log(\"SubmitMessage - allConnections: \", this.allConnections);\n    let inputText = this.currentinput;\n    this.currentinput = \"\";\n    this.chatList.push({ name: \"ME\", message: inputText });\n    this.allConnections.forEach((connection: DataConnection, connectionID) => {\n      if (!(connection && connection.open)) {\n        this.removeConnection(connection.peer);\n        return;\n      }\n      connection.send(inputText);\n      console.log(\"Sent To: \" + connection.peer + \" , Message: \" + inputText);\n    });\n  }\n\n  async DoConnect() {\n    let targetID = this.connectTarget;\n    this.connectTarget = \"\";\n    console.log(\"Try to connect to: \" + targetID);\n    let conn = this.peer.connect(targetID, {\n      reliable: true,\n    });\n    if (conn === undefined) {\n      return;\n    }\n    let newConnection = conn as DataConnection;\n    this.appendNewConnection(newConnection);\n    newConnection.on(ConnectionEventType.Open, () => {\n      this.status = \"Connected to: \" + newConnection.peer;\n      console.log(this.status);\n    });\n    newConnection.on(ConnectionEventType.Data, (data: string) => {\n      this.chatList.push({ name: newConnection.peer, message: data });\n    });\n    newConnection.on(ConnectionEventType.Close, () => {\n      this.status = \"Connection closed: \" + newConnection.peer;\n    });\n  }\n}\n</script>\n\n<style scope>\n.ChatingBox > * {\n  float: left;\n  width: 100%;\n  display: block;\n}\n/* .chating_box {\n  flex-direction: column;\n  height: 100vh;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  background: rgb(255, 171, 171);\n}\n.chating_box > * {\n  width: 100%;\n}\n.status_box {\n  border: 1px solid;\n  margin-bottom: 5px;\n}\n.connection_box {\n  border: 1px solid;\n  margin-bottom: 5px;\n}\n.messageInput {\n  width: 50%;\n  margin-right: 3px;\n}\n.chatList {\n  max-width: 750px;\n  width: 100%;\n  margin-top: 5px;\n  border: 1px solid;\n  margin: auto;\n} */\n</style>","const LOG_PREFIX = 'PeerJS: ';\r\n\r\n/*\r\nPrints log messages depending on the debug level passed in. Defaults to 0.\r\n0  Prints no logs.\r\n1  Prints only errors.\r\n2  Prints errors and warnings.\r\n3  Prints all logs.\r\n*/\r\nexport enum LogLevel {\r\n    Disabled,\r\n    Errors,\r\n    Warnings,\r\n    All\r\n}\r\n\r\nclass Logger {\r\n    private _logLevel = LogLevel.Disabled;\r\n\r\n    get logLevel(): LogLevel { return this._logLevel; }\r\n\r\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\r\n\r\n    log(...args: any[]) {\r\n        if (this._logLevel >= LogLevel.All) {\r\n            this._print(LogLevel.All, ...args);\r\n        }\r\n    }\r\n\r\n    warn(...args: any[]) {\r\n        if (this._logLevel >= LogLevel.Warnings) {\r\n            this._print(LogLevel.Warnings, ...args);\r\n        }\r\n    }\r\n\r\n    error(...args: any[]) {\r\n        if (this._logLevel >= LogLevel.Errors) {\r\n            this._print(LogLevel.Errors, ...args);\r\n        }\r\n    }\r\n\r\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\r\n        this._print = fn;\r\n    }\r\n\r\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\r\n        const copy = [LOG_PREFIX, ...rest];\r\n\r\n        for (let i in copy) {\r\n            if (copy[i] instanceof Error) {\r\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\r\n\r\n            }\r\n        }\r\n\r\n        if (logLevel >= LogLevel.All) {\r\n            console.log(...copy);\r\n        } else if (logLevel >= LogLevel.Warnings) {\r\n            console.warn(\"WARNING\", ...copy);\r\n        } else if (logLevel >= LogLevel.Errors) {\r\n            console.error(\"ERROR\", ...copy);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Logger();","import { webRTCAdapter } from \"./adapter\";\r\n\r\nexport const Supports = new (class {\r\n  readonly isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform);\r\n  readonly supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"];\r\n\r\n  readonly minFirefoxVersion = 59;\r\n  readonly minChromeVersion = 72;\r\n  readonly minSafariVersion = 605;\r\n\r\n  isWebRTCSupported(): boolean {\r\n    return typeof RTCPeerConnection !== \"undefined\";\r\n  }\r\n\r\n  isBrowserSupported(): boolean {\r\n    const browser = this.getBrowser();\r\n    const version = this.getVersion();\r\n\r\n    const validBrowser = this.supportedBrowsers.includes(browser);\r\n\r\n    if (!validBrowser) return false;\r\n\r\n    if (browser === \"chrome\") return version >= this.minChromeVersion;\r\n    if (browser === \"firefox\") return version >= this.minFirefoxVersion;\r\n    if (browser === \"safari\")\r\n      return !this.isIOS && version >= this.minSafariVersion;\r\n\r\n    return false;\r\n  }\r\n\r\n  getBrowser(): string {\r\n    return webRTCAdapter.browserDetails.browser;\r\n  }\r\n\r\n  getVersion(): number {\r\n    return webRTCAdapter.browserDetails.version || 0;\r\n  }\r\n\r\n  isUnifiedPlanSupported(): boolean {\r\n    const browser = this.getBrowser();\r\n    const version = webRTCAdapter.browserDetails.version || 0;\r\n\r\n    if (browser === \"chrome\" && version < 72) return false;\r\n    if (browser === \"firefox\" && version >= 59) return true;\r\n    if (\r\n      !window.RTCRtpTransceiver ||\r\n      !(\"currentDirection\" in RTCRtpTransceiver.prototype)\r\n    )\r\n      return false;\r\n\r\n    let tempPc!: RTCPeerConnection;\r\n    let supported = false;\r\n\r\n    try {\r\n      tempPc = new RTCPeerConnection();\r\n      tempPc.addTransceiver(\"audio\");\r\n      supported = true;\r\n    } catch (e) {\r\n    } finally {\r\n      if (tempPc) {\r\n        tempPc.close();\r\n      }\r\n    }\r\n\r\n    return supported;\r\n  }\r\n\r\n  toString(): string {\r\n    return `Supports: \r\n    browser:${this.getBrowser()} \r\n    version:${this.getVersion()} \r\n    isIOS:${this.isIOS} \r\n    isWebRTCSupported:${this.isWebRTCSupported()} \r\n    isBrowserSupported:${this.isBrowserSupported()} \r\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\r\n  }\r\n})();\r\n","import * as BinaryPack from \"peerjs-js-binarypack\";\r\nimport { Supports } from \"./supports\";\r\nimport { UtilSupportsObj } from \"..\";\r\n\r\nconst DEFAULT_CONFIG = {\r\n  iceServers: [\r\n    { urls: \"stun:stun.l.google.com:19302\" },\r\n    {\r\n      urls: \"turn:0.peerjs.com:3478\",\r\n      username: \"peerjs\",\r\n      credential: \"peerjsp\",\r\n    },\r\n  ],\r\n  sdpSemantics: \"unified-plan\",\r\n};\r\n\r\nexport const util = new (class {\r\n  noop(): void {}\r\n\r\n  readonly CLOUD_HOST = \"0.peerjs.com\";\r\n  readonly CLOUD_PORT = 443;\r\n\r\n  // Browsers that need chunking:\r\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\r\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\r\n\r\n  // Returns browser-agnostic default config\r\n  readonly defaultConfig = DEFAULT_CONFIG;\r\n\r\n  readonly browser = Supports.getBrowser();\r\n  readonly browserVersion = Supports.getVersion();\r\n\r\n  // Lists which features are supported\r\n  readonly supports = (function () {\r\n    const supported: UtilSupportsObj = {\r\n      browser: Supports.isBrowserSupported(),\r\n      webRTC: Supports.isWebRTCSupported(),\r\n      audioVideo: false,\r\n      data: false,\r\n      binaryBlob: false,\r\n      reliable: false,\r\n    };\r\n\r\n    if (!supported.webRTC) return supported;\r\n\r\n    let pc!: RTCPeerConnection;\r\n\r\n    try {\r\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\r\n\r\n      supported.audioVideo = true;\r\n\r\n      let dc!: RTCDataChannel;\r\n\r\n      try {\r\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\r\n        supported.data = true;\r\n        supported.reliable = !!dc.ordered;\r\n\r\n        // Binary test\r\n        try {\r\n          dc.binaryType = \"blob\";\r\n          supported.binaryBlob = !Supports.isIOS;\r\n        } catch (e) {}\r\n      } catch (e) {\r\n      } finally {\r\n        if (dc) {\r\n          dc.close();\r\n        }\r\n      }\r\n    } catch (e) {\r\n    } finally {\r\n      if (pc) {\r\n        pc.close();\r\n      }\r\n    }\r\n\r\n    return supported;\r\n  })();\r\n\r\n  // Ensure alphanumeric ids\r\n  validateId(id: string): boolean {\r\n    // Allow empty ids\r\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\r\n  }\r\n\r\n  pack = BinaryPack.pack;\r\n  unpack = BinaryPack.unpack;\r\n\r\n  // Binary stuff\r\n\r\n  private _dataCount: number = 1;\r\n\r\n  chunk(\r\n    blob: Blob\r\n  ): { __peerData: number; n: number; total: number; data: Blob }[] {\r\n    const chunks = [];\r\n    const size = blob.size;\r\n    const total = Math.ceil(size / util.chunkedMTU);\r\n\r\n    let index = 0;\r\n    let start = 0;\r\n\r\n    while (start < size) {\r\n      const end = Math.min(size, start + util.chunkedMTU);\r\n      const b = blob.slice(start, end);\r\n\r\n      const chunk = {\r\n        __peerData: this._dataCount,\r\n        n: index,\r\n        data: b,\r\n        total,\r\n      };\r\n\r\n      chunks.push(chunk);\r\n\r\n      start = end;\r\n      index++;\r\n    }\r\n\r\n    this._dataCount++;\r\n\r\n    return chunks;\r\n  }\r\n\r\n  blobToArrayBuffer(\r\n    blob: Blob,\r\n    cb: (arg: ArrayBuffer | null) => void\r\n  ): FileReader {\r\n    const fr = new FileReader();\r\n\r\n    fr.onload = function (evt) {\r\n      if (evt.target) {\r\n        cb(evt.target.result as ArrayBuffer);\r\n      }\r\n    };\r\n\r\n    fr.readAsArrayBuffer(blob);\r\n\r\n    return fr;\r\n  }\r\n\r\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\r\n    const byteArray = new Uint8Array(binary.length);\r\n\r\n    for (let i = 0; i < binary.length; i++) {\r\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\r\n    }\r\n\r\n    return byteArray.buffer;\r\n  }\r\n\r\n  randomToken(): string {\r\n    return Math.random().toString(36).substr(2);\r\n  }\r\n\r\n  isSecure(): boolean {\r\n    return location.protocol === \"https:\";\r\n  }\r\n})();\r\n","export enum ConnectionEventType {\r\n  Open = \"open\",\r\n  Stream = \"stream\",\r\n  Data = \"data\",\r\n  Close = \"close\",\r\n  Error = \"error\",\r\n  IceStateChanged = \"iceStateChanged\"\r\n}\r\n\r\nexport enum ConnectionType {\r\n  Data = \"data\",\r\n  Media = \"media\"\r\n}\r\n\r\nexport enum PeerEventType {\r\n  Open = \"open\",\r\n  Close = \"close\",\r\n  Connection = \"connection\",\r\n  Call = \"call\",\r\n  Disconnected = \"disconnected\",\r\n  Error = \"error\"\r\n}\r\n\r\nexport enum PeerErrorType {\r\n  BrowserIncompatible = \"browser-incompatible\",\r\n  Disconnected = \"disconnected\",\r\n  InvalidID = \"invalid-id\",\r\n  InvalidKey = \"invalid-key\",\r\n  Network = \"network\",\r\n  PeerUnavailable = \"peer-unavailable\",\r\n  SslUnavailable = \"ssl-unavailable\",\r\n  ServerError = \"server-error\",\r\n  SocketError = \"socket-error\",\r\n  SocketClosed = \"socket-closed\",\r\n  UnavailableID = \"unavailable-id\",\r\n  WebRTC = \"webrtc\"\r\n}\r\n\r\nexport enum SerializationType {\r\n  Binary = \"binary\",\r\n  BinaryUTF8 = \"binary-utf8\",\r\n  JSON = \"json\"\r\n}\r\n\r\nexport enum SocketEventType {\r\n  Message = \"message\",\r\n  Disconnected = \"disconnected\",\r\n  Error = \"error\",\r\n  Close = \"close\"\r\n}\r\n\r\nexport enum ServerMessageType {\r\n  Heartbeat = \"HEARTBEAT\",\r\n  Candidate = \"CANDIDATE\",\r\n  Offer = \"OFFER\",\r\n  Answer = \"ANSWER\",\r\n  Open = \"OPEN\", // The connection to the server is open.\r\n  Error = \"ERROR\", // Server error.\r\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\r\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\r\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\r\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\r\n\r\n}","import { EventEmitter } from \"eventemitter3\";\r\nimport logger from \"./logger\";\r\nimport { SocketEventType, ServerMessageType } from \"./enums\";\r\n\r\n/**\r\n * An abstraction on top of WebSockets to provide fastest\r\n * possible connection for peers.\r\n */\r\nexport class Socket extends EventEmitter {\r\n  private _disconnected: boolean = true;\r\n  private _id?: string;\r\n  /* eslint-disable  @typescript-eslint/ban-types */\r\n\r\n  private _messagesQueue: Array<object> = [];\r\n  private _socket?: WebSocket;\r\n  private _wsPingTimer?: any;\r\n  private readonly _baseUrl: string;\r\n\r\n  constructor(\r\n    secure: any,\r\n    host: string,\r\n    port: number,\r\n    path: string,\r\n    key: string,\r\n    private readonly pingInterval: number = 5000\r\n  ) {\r\n    super();\r\n\r\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\r\n\r\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\r\n  }\r\n\r\n  start(id: string, token: string): void {\r\n    this._id = id;\r\n\r\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\r\n\r\n    if (!!this._socket || !this._disconnected) {\r\n      return;\r\n    }\r\n\r\n    this._socket = new WebSocket(wsUrl);\r\n    this._disconnected = false;\r\n\r\n    this._socket.onmessage = (event) => {\r\n      let data;\r\n\r\n      try {\r\n        data = JSON.parse(event.data);\r\n        logger.log(\"Server message received:\", data);\r\n      } catch (e) {\r\n        logger.log(\"Invalid server message\", event.data);\r\n        return;\r\n      }\r\n\r\n      this.emit(SocketEventType.Message, data);\r\n    };\r\n\r\n    this._socket.onclose = (event) => {\r\n      if (this._disconnected) {\r\n        return;\r\n      }\r\n\r\n      logger.log(\"Socket closed.\", event);\r\n\r\n      this._cleanup();\r\n      this._disconnected = true;\r\n\r\n      this.emit(SocketEventType.Disconnected);\r\n    };\r\n\r\n    // Take care of the queue of connections if necessary and make sure Peer knows\r\n    // socket is open.\r\n    this._socket.onopen = () => {\r\n      if (this._disconnected) {\r\n        return;\r\n      }\r\n\r\n      this._sendQueuedMessages();\r\n\r\n      logger.log(\"Socket open\");\r\n\r\n      this._scheduleHeartbeat();\r\n    };\r\n  }\r\n\r\n  private _scheduleHeartbeat(): void {\r\n    this._wsPingTimer = setTimeout(() => {\r\n      this._sendHeartbeat();\r\n    }, this.pingInterval);\r\n  }\r\n\r\n  private _sendHeartbeat(): void {\r\n    if (!this._wsOpen()) {\r\n      logger.log(`Cannot send heartbeat, because socket closed`);\r\n      return;\r\n    }\r\n\r\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\r\n\r\n    this._socket!.send(message);\r\n\r\n    this._scheduleHeartbeat();\r\n  }\r\n\r\n  /** Is the websocket currently open? */\r\n  private _wsOpen(): boolean {\r\n    return !!this._socket && this._socket.readyState === 1;\r\n  }\r\n\r\n  /** Send queued messages. */\r\n  private _sendQueuedMessages(): void {\r\n    //Create copy of queue and clear it,\r\n    //because send method push the message back to queue if smth will go wrong\r\n    const copiedQueue = [...this._messagesQueue];\r\n    this._messagesQueue = [];\r\n\r\n    for (const message of copiedQueue) {\r\n      this.send(message);\r\n    }\r\n  }\r\n\r\n  /** Exposed send for DC & Peer. */\r\n  send(data: any): void {\r\n    if (this._disconnected) {\r\n      return;\r\n    }\r\n\r\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\r\n    // up these messages.\r\n    if (!this._id) {\r\n      this._messagesQueue.push(data);\r\n      return;\r\n    }\r\n\r\n    if (!data.type) {\r\n      this.emit(SocketEventType.Error, \"Invalid message\");\r\n      return;\r\n    }\r\n\r\n    if (!this._wsOpen()) {\r\n      return;\r\n    }\r\n\r\n    const message = JSON.stringify(data);\r\n\r\n    this._socket!.send(message);\r\n  }\r\n\r\n  close(): void {\r\n    if (this._disconnected) {\r\n      return;\r\n    }\r\n\r\n    this._cleanup();\r\n\r\n    this._disconnected = true;\r\n  }\r\n\r\n  private _cleanup(): void {\r\n    if (this._socket) {\r\n      this._socket.onopen =\r\n        this._socket.onmessage =\r\n        this._socket.onclose =\r\n          null;\r\n      this._socket.close();\r\n      this._socket = undefined;\r\n    }\r\n\r\n    clearTimeout(this._wsPingTimer!);\r\n  }\r\n}\r\n","import { util } from \"./util\";\r\nimport logger from \"./logger\";\r\nimport { MediaConnection } from \"./mediaconnection\";\r\nimport { DataConnection } from \"./dataconnection\";\r\nimport {\r\n  ConnectionType,\r\n  PeerErrorType,\r\n  ConnectionEventType,\r\n  ServerMessageType,\r\n} from \"./enums\";\r\nimport { BaseConnection } from \"./baseconnection\";\r\n\r\n/**\r\n * Manages all negotiations between Peers.\r\n */\r\nexport class Negotiator {\r\n  constructor(readonly connection: BaseConnection) {}\r\n\r\n  /** Returns a PeerConnection object set up correctly (for data, media). */\r\n  startConnection(options: any) {\r\n    const peerConnection = this._startPeerConnection();\r\n\r\n    // Set the connection's PC.\r\n    this.connection.peerConnection = peerConnection;\r\n\r\n    if (this.connection.type === ConnectionType.Media && options._stream) {\r\n      this._addTracksToConnection(options._stream, peerConnection);\r\n    }\r\n\r\n    // What do we need to do now?\r\n    if (options.originator) {\r\n      if (this.connection.type === ConnectionType.Data) {\r\n        const dataConnection = <DataConnection>this.connection;\r\n\r\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\r\n\r\n        const dataChannel = peerConnection.createDataChannel(\r\n          dataConnection.label,\r\n          config\r\n        );\r\n        dataConnection.initialize(dataChannel);\r\n      }\r\n\r\n      this._makeOffer();\r\n    } else {\r\n      this.handleSDP(\"OFFER\", options.sdp);\r\n    }\r\n  }\r\n\r\n  /** Start a PC. */\r\n  private _startPeerConnection(): RTCPeerConnection {\r\n    logger.log(\"Creating RTCPeerConnection.\");\r\n\r\n    const peerConnection = new RTCPeerConnection(\r\n      this.connection.provider!.options.config\r\n    );\r\n\r\n    this._setupListeners(peerConnection);\r\n\r\n    return peerConnection;\r\n  }\r\n\r\n  /** Set up various WebRTC listeners. */\r\n  private _setupListeners(peerConnection: RTCPeerConnection) {\r\n    const peerId = this.connection.peer;\r\n    const connectionId = this.connection.connectionId;\r\n    const connectionType = this.connection.type;\r\n    const provider = this.connection.provider;\r\n\r\n    // ICE CANDIDATES.\r\n    logger.log(\"Listening for ICE candidates.\");\r\n\r\n    peerConnection.onicecandidate = (evt) => {\r\n      if (!evt.candidate || !evt.candidate.candidate) return;\r\n\r\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\r\n\r\n      provider!.socket.send({\r\n        type: ServerMessageType.Candidate,\r\n        payload: {\r\n          candidate: evt.candidate,\r\n          type: connectionType,\r\n          connectionId: connectionId,\r\n        },\r\n        dst: peerId,\r\n      });\r\n    };\r\n\r\n    peerConnection.oniceconnectionstatechange = () => {\r\n      switch (peerConnection.iceConnectionState) {\r\n        case \"failed\":\r\n          logger.log(\r\n            \"iceConnectionState is failed, closing connections to \" + peerId\r\n          );\r\n          this.connection.emit(\r\n            ConnectionEventType.Error,\r\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\r\n          );\r\n          this.connection.close();\r\n          break;\r\n        case \"closed\":\r\n          logger.log(\r\n            \"iceConnectionState is closed, closing connections to \" + peerId\r\n          );\r\n          this.connection.emit(\r\n            ConnectionEventType.Error,\r\n            new Error(\"Connection to \" + peerId + \" closed.\")\r\n          );\r\n          this.connection.close();\r\n          break;\r\n        case \"disconnected\":\r\n          logger.log(\r\n            \"iceConnectionState changed to disconnected on the connection with \" +\r\n              peerId\r\n          );\r\n          break;\r\n        case \"completed\":\r\n          peerConnection.onicecandidate = util.noop;\r\n          break;\r\n      }\r\n\r\n      this.connection.emit(\r\n        ConnectionEventType.IceStateChanged,\r\n        peerConnection.iceConnectionState\r\n      );\r\n    };\r\n\r\n    // DATACONNECTION.\r\n    logger.log(\"Listening for data channel\");\r\n    // Fired between offer and answer, so options should already be saved\r\n    // in the options hash.\r\n    peerConnection.ondatachannel = (evt) => {\r\n      logger.log(\"Received data channel\");\r\n\r\n      const dataChannel = evt.channel;\r\n      const connection = <DataConnection>(\r\n        provider!.getConnection(peerId, connectionId)\r\n      );\r\n\r\n      connection.initialize(dataChannel);\r\n    };\r\n\r\n    // MEDIACONNECTION.\r\n    logger.log(\"Listening for remote stream\");\r\n\r\n    peerConnection.ontrack = (evt) => {\r\n      logger.log(\"Received remote stream\");\r\n\r\n      const stream = evt.streams[0];\r\n      const connection = provider!.getConnection(peerId, connectionId);\r\n\r\n      if (connection!.type === ConnectionType.Media) {\r\n        const mediaConnection = <MediaConnection>connection;\r\n\r\n        this._addStreamToMediaConnection(stream, mediaConnection);\r\n      }\r\n    };\r\n  }\r\n\r\n  cleanup(): void {\r\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\r\n\r\n    const peerConnection = this.connection.peerConnection;\r\n\r\n    if (!peerConnection) {\r\n      return;\r\n    }\r\n\r\n    this.connection.peerConnection! =<any>null;\r\n\r\n    //unsubscribe from all PeerConnection's events\r\n    peerConnection.onicecandidate =\r\n      peerConnection.oniceconnectionstatechange =\r\n      peerConnection.ondatachannel =\r\n      peerConnection.ontrack =\r\n        () => {};\r\n\r\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\r\n    let dataChannelNotClosed = false;\r\n\r\n    if (this.connection.type === ConnectionType.Data) {\r\n      const dataConnection = <DataConnection>this.connection;\r\n      const dataChannel = dataConnection.dataChannel;\r\n\r\n      if (dataChannel) {\r\n        dataChannelNotClosed =\r\n          !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\r\n      }\r\n    }\r\n\r\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\r\n      peerConnection.close();\r\n    }\r\n  }\r\n\r\n  private async _makeOffer(): Promise<void> {\r\n    const peerConnection = this.connection.peerConnection;\r\n    const provider = this.connection.provider;\r\n\r\n    try {\r\n      const offer = await peerConnection!.createOffer(\r\n        this.connection.options.constraints\r\n      );\r\n\r\n      logger.log(\"Created offer.\");\r\n\r\n      if (\r\n        this.connection.options.sdpTransform &&\r\n        typeof this.connection.options.sdpTransform === \"function\"\r\n      ) {\r\n        offer.sdp =\r\n          this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\r\n      }\r\n\r\n      try {\r\n        await peerConnection!.setLocalDescription(offer);\r\n\r\n        logger.log(\r\n          \"Set localDescription:\",\r\n          offer,\r\n          `for:${this.connection.peer}`\r\n        );\r\n\r\n        let payload: any = {\r\n          sdp: offer,\r\n          type: this.connection.type,\r\n          connectionId: this.connection.connectionId,\r\n          metadata: this.connection.metadata,\r\n          browser: util.browser,\r\n        };\r\n\r\n        if (this.connection.type === ConnectionType.Data) {\r\n          const dataConnection = <DataConnection>this.connection;\r\n\r\n          payload = {\r\n            ...payload,\r\n            label: dataConnection.label,\r\n            reliable: dataConnection.reliable,\r\n            serialization: dataConnection.serialization,\r\n          };\r\n        }\r\n\r\n        provider!.socket.send({\r\n          type: ServerMessageType.Offer,\r\n          payload,\r\n          dst: this.connection.peer,\r\n        });\r\n      } catch (err) {\r\n        // TODO: investigate why _makeOffer is being called from the answer\r\n        if (\r\n          err !=\r\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\r\n        ) {\r\n          provider!.emitError(PeerErrorType.WebRTC, err);\r\n          logger.log(\"Failed to setLocalDescription, \", err);\r\n        }\r\n      }\r\n    } catch (err_1) {\r\n      provider!.emitError(PeerErrorType.WebRTC, err_1);\r\n      logger.log(\"Failed to createOffer, \", err_1);\r\n    }\r\n  }\r\n\r\n  private async _makeAnswer(): Promise<void> {\r\n    const peerConnection = this.connection.peerConnection;\r\n    const provider = this.connection.provider;\r\n\r\n    try {\r\n      const answer = await peerConnection!.createAnswer();\r\n      logger.log(\"Created answer.\");\r\n\r\n      if (\r\n        this.connection.options.sdpTransform &&\r\n        typeof this.connection.options.sdpTransform === \"function\"\r\n      ) {\r\n        answer.sdp =\r\n          this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\r\n      }\r\n\r\n      try {\r\n        await peerConnection!.setLocalDescription(answer);\r\n\r\n        logger.log(\r\n          `Set localDescription:`,\r\n          answer,\r\n          `for:${this.connection.peer}`\r\n        );\r\n\r\n        provider!.socket.send({\r\n          type: ServerMessageType.Answer,\r\n          payload: {\r\n            sdp: answer,\r\n            type: this.connection.type,\r\n            connectionId: this.connection.connectionId,\r\n            browser: util.browser,\r\n          },\r\n          dst: this.connection.peer,\r\n        });\r\n      } catch (err) {\r\n        provider!.emitError(PeerErrorType.WebRTC, err);\r\n        logger.log(\"Failed to setLocalDescription, \", err);\r\n      }\r\n    } catch (err_1) {\r\n      provider!.emitError(PeerErrorType.WebRTC, err_1);\r\n      logger.log(\"Failed to create answer, \", err_1);\r\n    }\r\n  }\r\n\r\n  /** Handle an SDP. */\r\n  async handleSDP(type: string, sdp: any): Promise<void> {\r\n    sdp = new RTCSessionDescription(sdp);\r\n    const peerConnection = this.connection.peerConnection;\r\n    const provider = this.connection.provider;\r\n\r\n    logger.log(\"Setting remote description\", sdp);\r\n\r\n    const self = this;\r\n\r\n    try {\r\n      await peerConnection!.setRemoteDescription(sdp);\r\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\r\n      if (type === \"OFFER\") {\r\n        await self._makeAnswer();\r\n      }\r\n    } catch (err) {\r\n      provider!.emitError(PeerErrorType.WebRTC, err);\r\n      logger.log(\"Failed to setRemoteDescription, \", err);\r\n    }\r\n  }\r\n\r\n  /** Handle a candidate. */\r\n  async handleCandidate(ice: any): Promise<void> {\r\n    logger.log(`handleCandidate:`, ice);\r\n\r\n    const candidate = ice.candidate;\r\n    const sdpMLineIndex = ice.sdpMLineIndex;\r\n    const sdpMid = ice.sdpMid;\r\n    const peerConnection = this.connection.peerConnection;\r\n    const provider = this.connection.provider;\r\n\r\n    try {\r\n      await peerConnection!.addIceCandidate(\r\n        new RTCIceCandidate({\r\n          sdpMid: sdpMid,\r\n          sdpMLineIndex: sdpMLineIndex,\r\n          candidate: candidate,\r\n        })\r\n      );\r\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\r\n    } catch (err) {\r\n      provider!.emitError(PeerErrorType.WebRTC, err);\r\n      logger.log(\"Failed to handleCandidate, \", err);\r\n    }\r\n  }\r\n\r\n  private _addTracksToConnection(\r\n    stream: MediaStream,\r\n    peerConnection: RTCPeerConnection\r\n  ): void {\r\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\r\n\r\n    if (!peerConnection.addTrack) {\r\n      return logger.error(\r\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\r\n      );\r\n    }\r\n\r\n    stream.getTracks().forEach((track) => {\r\n      peerConnection.addTrack(track, stream);\r\n    });\r\n  }\r\n\r\n  private _addStreamToMediaConnection(\r\n    stream: MediaStream,\r\n    mediaConnection: MediaConnection\r\n  ): void {\r\n    logger.log(\r\n      `add stream ${stream.id} to media connection ${mediaConnection.connectionId}`\r\n    );\r\n\r\n    mediaConnection.addStream(stream);\r\n  }\r\n}\r\n","import { EventEmitter } from \"eventemitter3\";\r\nimport { Peer } from \"./peer\";\r\nimport { ServerMessage } from \"./servermessage\";\r\nimport { ConnectionType } from \"./enums\";\r\n\r\nexport abstract class BaseConnection extends EventEmitter {\r\n  protected _open = false;\r\n\r\n  readonly metadata: any;\r\n  connectionId!: string;\r\n\r\n  peerConnection!: RTCPeerConnection | null;\r\n\r\n  abstract get type(): ConnectionType;\r\n\r\n  get open() {\r\n    return this._open;\r\n  }\r\n\r\n  constructor(\r\n    readonly peer: string,\r\n    public provider: Peer | null,\r\n    readonly options: any\r\n  ) {\r\n    super();\r\n\r\n    this.metadata = options.metadata;\r\n  }\r\n\r\n  abstract close(): void;\r\n\r\n  abstract handleMessage(message: ServerMessage): void;\r\n}\r\n","import { util } from \"./util\";\r\nimport logger from \"./logger\";\r\nimport { Negotiator } from \"./negotiator\";\r\nimport {\r\n  ConnectionType,\r\n  ConnectionEventType,\r\n  ServerMessageType,\r\n} from \"./enums\";\r\nimport { Peer } from \"./peer\";\r\nimport { BaseConnection } from \"./baseconnection\";\r\nimport { ServerMessage } from \"./servermessage\";\r\nimport { AnswerOption } from \"..\";\r\n\r\n/**\r\n * Wraps the streaming interface between two Peers.\r\n */\r\nexport class MediaConnection extends BaseConnection {\r\n  private static readonly ID_PREFIX = \"mc_\";\r\n\r\n  private _negotiator: Negotiator | null;\r\n  private _localStream: MediaStream | null;\r\n  private _remoteStream!: MediaStream | null;\r\n\r\n  get type() {\r\n    return ConnectionType.Media;\r\n  }\r\n\r\n  get localStream(): MediaStream {\r\n    return this._localStream as MediaStream;\r\n  }\r\n  get remoteStream(): MediaStream {\r\n    return this._remoteStream as MediaStream;\r\n  }\r\n\r\n  constructor(peerId: string, provider: Peer, options: any) {\r\n    super(peerId, provider, options);\r\n\r\n    this._localStream = this.options._stream;\r\n    this.connectionId =\r\n      this.options.connectionId ||\r\n      MediaConnection.ID_PREFIX + util.randomToken();\r\n\r\n    this._negotiator = new Negotiator(this);\r\n\r\n    if (this._localStream) {\r\n      this._negotiator.startConnection({\r\n        _stream: this._localStream,\r\n        originator: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  addStream(remoteStream: any) {\r\n    logger.log(\"Receiving stream\", remoteStream);\r\n\r\n    this._remoteStream = remoteStream;\r\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\r\n  }\r\n\r\n  handleMessage(message: ServerMessage): void {\r\n    const type = message.type;\r\n    const payload = message.payload;\r\n\r\n    switch (message.type) {\r\n      case ServerMessageType.Answer:\r\n        // Forward to negotiator\r\n        this._negotiator!.handleSDP(type, payload.sdp);\r\n        this._open = true;\r\n        break;\r\n      case ServerMessageType.Candidate:\r\n        this._negotiator!.handleCandidate(payload.candidate);\r\n        break;\r\n      default:\r\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\r\n    if (this._localStream) {\r\n      logger.warn(\r\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    this._localStream = stream;\r\n\r\n    if (options && options.sdpTransform) {\r\n      this.options.sdpTransform = options.sdpTransform;\r\n    }\r\n\r\n    this._negotiator!.startConnection({\r\n      ...this.options._payload,\r\n      _stream: stream,\r\n    });\r\n    // Retrieve lost messages stored because PeerConnection not set up.\r\n    const messages = this.provider!._getMessages(this.connectionId);\r\n\r\n    for (let message of messages) {\r\n      this.handleMessage(message);\r\n    }\r\n\r\n    this._open = true;\r\n  }\r\n\r\n  /**\r\n   * Exposed functionality for users.\r\n   */\r\n\r\n  /** Allows user to close connection. */\r\n  close(): void {\r\n    if (this._negotiator) {\r\n      this._negotiator.cleanup();\r\n      this._negotiator = null;\r\n    }\r\n\r\n    this._localStream = null;\r\n    this._remoteStream = null;\r\n\r\n    if (this.provider) {\r\n      this.provider._removeConnection(this);\r\n\r\n      this.provider = null;\r\n    }\r\n\r\n    if (this.options && this.options._stream) {\r\n      this.options._stream = null;\r\n    }\r\n\r\n    if (!this.open) {\r\n      return;\r\n    }\r\n\r\n    this._open = false;\r\n\r\n    super.emit(ConnectionEventType.Close);\r\n  }\r\n}\r\n","import { EventEmitter } from \"eventemitter3\";\r\nimport logger from \"./logger\";\r\n\r\nexport class EncodingQueue extends EventEmitter {\r\n  readonly fileReader: FileReader = new FileReader();\r\n\r\n  private _queue: Blob[] = [];\r\n  private _processing: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.fileReader.onload = (evt) => {\r\n      this._processing = false;\r\n\r\n      if (evt.target) {\r\n        this.emit(\"done\", evt.target.result as ArrayBuffer);\r\n      }\r\n\r\n      this.doNextTask();\r\n    };\r\n\r\n    this.fileReader.onerror = (evt) => {\r\n      logger.error(`EncodingQueue error:`, evt);\r\n      this._processing = false;\r\n      this.destroy();\r\n      this.emit(\"error\", evt);\r\n    };\r\n  }\r\n\r\n  get queue(): Blob[] {\r\n    return this._queue;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.queue.length;\r\n  }\r\n\r\n  get processing(): boolean {\r\n    return this._processing;\r\n  }\r\n\r\n  enque(blob: Blob): void {\r\n    this.queue.push(blob);\r\n\r\n    if (this.processing) return;\r\n\r\n    this.doNextTask();\r\n  }\r\n\r\n  destroy(): void {\r\n    this.fileReader.abort();\r\n    this._queue = [];\r\n  }\r\n\r\n  private doNextTask(): void {\r\n    if (this.size === 0) return;\r\n    if (this.processing) return;\r\n\r\n    this._processing = true;\r\n\r\n    this.fileReader.readAsArrayBuffer(this.queue.shift() as Blob);\r\n  }\r\n}\r\n","import { util } from \"./util\";\r\nimport logger from \"./logger\";\r\nimport { Negotiator } from \"./negotiator\";\r\nimport {\r\n  ConnectionType,\r\n  ConnectionEventType,\r\n  SerializationType,\r\n  ServerMessageType,\r\n} from \"./enums\";\r\nimport { Peer } from \"./peer\";\r\nimport { BaseConnection } from \"./baseconnection\";\r\nimport { ServerMessage } from \"./servermessage\";\r\nimport { EncodingQueue } from \"./encodingQueue\";\r\nimport { DataConnection as IDataConnection } from \"../index\";\r\n\r\n/**\r\n * Wraps a DataChannel between two Peers.\r\n */\r\nexport class DataConnection extends BaseConnection implements IDataConnection {\r\n  private static readonly ID_PREFIX = \"dc_\";\r\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\r\n\r\n  private _negotiator: Negotiator | null;\r\n  readonly label: string;\r\n  readonly serialization: SerializationType;\r\n  readonly reliable: boolean;\r\n  stringify: (data: any) => string = JSON.stringify;\r\n  parse: (data: string) => any = JSON.parse;\r\n\r\n  get type() {\r\n    return ConnectionType.Data;\r\n  }\r\n\r\n  private _buffer: any[] = [];\r\n  private _bufferSize = 0;\r\n  private _buffering = false;\r\n  private _chunkedData: {\r\n    [id: number]: {\r\n      data: Blob[];\r\n      count: number;\r\n      total: number;\r\n    };\r\n  } = {};\r\n\r\n  private _dc!: RTCDataChannel | null;\r\n  private _encodingQueue: EncodingQueue | null = new EncodingQueue();\r\n\r\n  get dataChannel(): RTCDataChannel {\r\n    return this._dc as RTCDataChannel;\r\n  }\r\n\r\n  get bufferSize(): number {\r\n    return this._bufferSize;\r\n  }\r\n\r\n  constructor(peerId: string, provider: Peer, options: any) {\r\n    super(peerId, provider, options);\r\n\r\n    this.connectionId =\r\n      this.options.connectionId ||\r\n      DataConnection.ID_PREFIX + util.randomToken();\r\n\r\n    this.label = this.options.label || this.connectionId;\r\n    this.serialization = this.options.serialization || SerializationType.Binary;\r\n    this.reliable = !!this.options.reliable;\r\n\r\n    this._encodingQueue!.on(\"done\", (ab: ArrayBuffer) => {\r\n      this._bufferedSend(ab);\r\n    });\r\n\r\n    this._encodingQueue!.on(\"error\", () => {\r\n      logger.error(\r\n        `DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`\r\n      );\r\n      this.close();\r\n    });\r\n\r\n    this._negotiator = new Negotiator(this);\r\n\r\n    this._negotiator.startConnection(\r\n      this.options._payload || {\r\n        originator: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  /** Called by the Negotiator when the DataChannel is ready. */\r\n  initialize(dc: RTCDataChannel): void {\r\n    this._dc = dc;\r\n    this._configureDataChannel();\r\n  }\r\n\r\n  private _configureDataChannel(): void {\r\n    if (!util.supports.binaryBlob || util.supports.reliable) {\r\n      this.dataChannel.binaryType = \"arraybuffer\";\r\n    }\r\n\r\n    this.dataChannel.onopen = () => {\r\n      logger.log(`DC#${this.connectionId} dc connection success`);\r\n      this._open = true;\r\n      this.emit(ConnectionEventType.Open);\r\n    };\r\n\r\n    this.dataChannel.onmessage = (e) => {\r\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\r\n      this._handleDataMessage(e);\r\n    };\r\n\r\n    this.dataChannel.onclose = () => {\r\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\r\n      this.close();\r\n    };\r\n  }\r\n\r\n  // Handles a DataChannel message.\r\n  private _handleDataMessage({\r\n    data,\r\n  }: {\r\n    data: Blob | ArrayBuffer | string;\r\n  }): void {\r\n    const datatype = data.constructor;\r\n\r\n    const isBinarySerialization =\r\n      this.serialization === SerializationType.Binary ||\r\n      this.serialization === SerializationType.BinaryUTF8;\r\n\r\n    let deserializedData: any = data;\r\n\r\n    if (isBinarySerialization) {\r\n      if (datatype === Blob) {\r\n        // Datatype should never be blob\r\n        util.blobToArrayBuffer(data as Blob, (ab) => {\r\n          const unpackedData = util.unpack(ab as ArrayBuffer);\r\n          this.emit(ConnectionEventType.Data, unpackedData);\r\n        });\r\n        return;\r\n      } else if (datatype === ArrayBuffer) {\r\n        deserializedData = util.unpack(data as ArrayBuffer);\r\n      } else if (datatype === String) {\r\n        // String fallback for binary data for browsers that don't support binary yet\r\n        const ab = util.binaryStringToArrayBuffer(data as string);\r\n        deserializedData = util.unpack(ab);\r\n      }\r\n    } else if (this.serialization === SerializationType.JSON) {\r\n      deserializedData = this.parse(data as string);\r\n    }\r\n\r\n    // Check if we've chunked--if so, piece things back together.\r\n    // We're guaranteed that this isn't 0.\r\n    if (deserializedData.__peerData) {\r\n      this._handleChunk(deserializedData);\r\n      return;\r\n    }\r\n\r\n    super.emit(ConnectionEventType.Data, deserializedData);\r\n  }\r\n\r\n  private _handleChunk(data: {\r\n    __peerData: number;\r\n    n: number;\r\n    total: number;\r\n    data: Blob;\r\n  }): void {\r\n    const id = data.__peerData;\r\n    const chunkInfo = this._chunkedData[id] || {\r\n      data: [],\r\n      count: 0,\r\n      total: data.total,\r\n    };\r\n\r\n    chunkInfo.data[data.n] = data.data;\r\n    chunkInfo.count++;\r\n    this._chunkedData[id] = chunkInfo;\r\n\r\n    if (chunkInfo.total === chunkInfo.count) {\r\n      // Clean up before making the recursive call to `_handleDataMessage`.\r\n      delete this._chunkedData[id];\r\n\r\n      // We've received all the chunks--time to construct the complete data.\r\n      const data = new Blob(chunkInfo.data);\r\n      this._handleDataMessage({ data });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Exposed functionality for users.\r\n   */\r\n\r\n  /** Allows user to close connection. */\r\n  close(): void {\r\n    this._buffer = [];\r\n    this._bufferSize = 0;\r\n    this._chunkedData = {};\r\n\r\n    if (this._negotiator) {\r\n      this._negotiator.cleanup();\r\n      this._negotiator = null;\r\n    }\r\n\r\n    if (this.provider) {\r\n      this.provider._removeConnection(this);\r\n\r\n      this.provider = null;\r\n    }\r\n\r\n    if (this.dataChannel) {\r\n      this.dataChannel.onopen = null;\r\n      this.dataChannel.onmessage = null;\r\n      this.dataChannel.onclose = null;\r\n      this._dc = null;\r\n    }\r\n\r\n    if (this._encodingQueue) {\r\n      this._encodingQueue.destroy();\r\n      this._encodingQueue.removeAllListeners();\r\n      this._encodingQueue = null;\r\n    }\r\n\r\n    if (!this.open) {\r\n      return;\r\n    }\r\n\r\n    this._open = false;\r\n\r\n    super.emit(ConnectionEventType.Close);\r\n  }\r\n\r\n  /** Allows user to send data. */\r\n  send(data: any, chunked?: boolean): void {\r\n    if (!this.open) {\r\n      super.emit(\r\n        ConnectionEventType.Error,\r\n        new Error(\r\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (this.serialization === SerializationType.JSON) {\r\n      this._bufferedSend(this.stringify(data));\r\n    } else if (\r\n      this.serialization === SerializationType.Binary ||\r\n      this.serialization === SerializationType.BinaryUTF8\r\n    ) {\r\n      const blob = util.pack(data);\r\n\r\n      if (!chunked && blob.size > util.chunkedMTU) {\r\n        this._sendChunks(blob);\r\n        return;\r\n      }\r\n\r\n      if (!util.supports.binaryBlob) {\r\n        // We only do this if we really need to (e.g. blobs are not supported),\r\n        // because this conversion is costly.\r\n        this._encodingQueue!.enque(blob);\r\n      } else {\r\n        this._bufferedSend(blob);\r\n      }\r\n    } else {\r\n      this._bufferedSend(data);\r\n    }\r\n  }\r\n\r\n  private _bufferedSend(msg: any): void {\r\n    if (this._buffering || !this._trySend(msg)) {\r\n      this._buffer.push(msg);\r\n      this._bufferSize = this._buffer.length;\r\n    }\r\n  }\r\n\r\n  // Returns true if the send succeeds.\r\n  private _trySend(msg: any): boolean {\r\n    if (!this.open) {\r\n      return false;\r\n    }\r\n\r\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\r\n      this._buffering = true;\r\n      setTimeout(() => {\r\n        this._buffering = false;\r\n        this._tryBuffer();\r\n      }, 50);\r\n\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      this.dataChannel.send(msg);\r\n    } catch (e) {\r\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\r\n      this._buffering = true;\r\n\r\n      this.close();\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // Try to send the first message in the buffer.\r\n  private _tryBuffer(): void {\r\n    if (!this.open) {\r\n      return;\r\n    }\r\n\r\n    if (this._buffer.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const msg = this._buffer[0];\r\n\r\n    if (this._trySend(msg)) {\r\n      this._buffer.shift();\r\n      this._bufferSize = this._buffer.length;\r\n      this._tryBuffer();\r\n    }\r\n  }\r\n\r\n  private _sendChunks(blob: Blob): void {\r\n    const blobs = util.chunk(blob);\r\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\r\n\r\n    for (let blob of blobs) {\r\n      this.send(blob, true);\r\n    }\r\n  }\r\n\r\n  handleMessage(message: ServerMessage): void {\r\n    const payload = message.payload;\r\n\r\n    switch (message.type) {\r\n      case ServerMessageType.Answer:\r\n        this._negotiator!.handleSDP(message.type, payload.sdp);\r\n        break;\r\n      case ServerMessageType.Candidate:\r\n        this._negotiator!.handleCandidate(payload.candidate);\r\n        break;\r\n      default:\r\n        logger.warn(\r\n          \"Unrecognized message type:\",\r\n          message.type,\r\n          \"from peer:\",\r\n          this.peer\r\n        );\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { util } from \"./util\";\r\nimport logger from \"./logger\";\r\n\r\nexport class API {\r\n  constructor(private readonly _options: any) { }\r\n\r\n  private _buildUrl(method: string): string {\r\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\r\n    let url =\r\n      protocol +\r\n      this._options.host +\r\n      \":\" +\r\n      this._options.port +\r\n      this._options.path +\r\n      this._options.key +\r\n      \"/\" +\r\n      method;\r\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\r\n    url += queryString;\r\n\r\n    return url;\r\n  }\r\n\r\n  /** Get a unique ID from the server via XHR and initialize with it. */\r\n  async retrieveId(): Promise<string> {\r\n    const url = this._buildUrl(\"id\");\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(`Error. Status:${response.status}`);\r\n      }\r\n\r\n      return response.text();\r\n    } catch (error) {\r\n      logger.error(\"Error retrieving ID\", error);\r\n\r\n      let pathError = \"\";\r\n\r\n      if (\r\n        this._options.path === \"/\" &&\r\n        this._options.host !== util.CLOUD_HOST\r\n      ) {\r\n        pathError =\r\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\r\n          \"you'll also need to pass in that same path when creating a new \" +\r\n          \"Peer.\";\r\n      }\r\n\r\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\r\n    }\r\n  }\r\n\r\n  /** @deprecated */\r\n  async listAllPeers(): Promise<any[]> {\r\n    const url = this._buildUrl(\"peers\");\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n\r\n      if (response.status !== 200) {\r\n        if (response.status === 401) {\r\n          let helpfulError = \"\";\r\n\r\n          if (this._options.host === util.CLOUD_HOST) {\r\n            helpfulError =\r\n              \"It looks like you're using the cloud server. You can email \" +\r\n              \"team@peerjs.com to enable peer listing for your API key.\";\r\n          } else {\r\n            helpfulError =\r\n              \"You need to enable `allow_discovery` on your self-hosted \" +\r\n              \"PeerServer to use this feature.\";\r\n          }\r\n\r\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\r\n            helpfulError);\r\n        }\r\n\r\n        throw new Error(`Error. Status:${response.status}`);\r\n      }\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      logger.error(\"Error retrieving list peers\", error);\r\n\r\n      throw new Error(\"Could not get list peers from the server.\" + error);\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter } from \"eventemitter3\";\r\nimport { util } from \"./util\";\r\nimport logger, { LogLevel } from \"./logger\";\r\nimport { Socket } from \"./socket\";\r\nimport { MediaConnection } from \"./mediaconnection\";\r\nimport { DataConnection } from \"./dataconnection\";\r\nimport {\r\n  ConnectionType,\r\n  PeerErrorType,\r\n  PeerEventType,\r\n  SocketEventType,\r\n  ServerMessageType,\r\n} from \"./enums\";\r\nimport { BaseConnection } from \"./baseconnection\";\r\nimport { ServerMessage } from \"./servermessage\";\r\nimport { API } from \"./api\";\r\nimport { PeerConnectOption, PeerJSOption } from \"..\";\r\n\r\nclass PeerOptions implements PeerJSOption {\r\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\r\n  host?: string;\r\n  port?: number;\r\n  path?: string;\r\n  key?: string;\r\n  token?: string;\r\n  config?: any;\r\n  secure?: boolean;\r\n  pingInterval?: number;\r\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\r\n}\r\n\r\n/**\r\n * A peer who can initiate connections with other peers.\r\n */\r\nexport class Peer extends EventEmitter {\r\n  private static readonly DEFAULT_KEY = \"peerjs\";\r\n\r\n  private readonly _options: PeerOptions;\r\n  private readonly _api: API;\r\n  private readonly _socket: Socket;\r\n\r\n  private _id: string | null = null;\r\n  private _lastServerId: string | null = null;\r\n\r\n  // States.\r\n  private _destroyed = false; // Connections have been killed\r\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\r\n  private _open = false; // Sockets and such are not yet open.\r\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\r\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  get open() {\r\n    return this._open;\r\n  }\r\n\r\n  get socket() {\r\n    return this._socket;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * Return type will change from Object to Map<string,[]>\r\n   */\r\n  get connections(): Object {\r\n    const plainConnections = Object.create(null);\r\n\r\n    for (let [k, v] of this._connections) {\r\n      plainConnections[k] = v;\r\n    }\r\n\r\n    return plainConnections;\r\n  }\r\n\r\n  get destroyed() {\r\n    return this._destroyed;\r\n  }\r\n  get disconnected() {\r\n    return this._disconnected;\r\n  }\r\n\r\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\r\n    super();\r\n\r\n    let userId: string | undefined;\r\n\r\n    // Deal with overloading\r\n    if (id && id.constructor == Object) {\r\n      options = id as PeerOptions;\r\n    } else if (id) {\r\n      userId = id.toString();\r\n    }\r\n\r\n    // Configurize options\r\n    options = {\r\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\r\n      host: util.CLOUD_HOST,\r\n      port: util.CLOUD_PORT,\r\n      path: \"/\",\r\n      key: Peer.DEFAULT_KEY,\r\n      token: util.randomToken(),\r\n      config: util.defaultConfig,\r\n      ...options,\r\n    };\r\n    this._options = options;\r\n\r\n    // Detect relative URL host.\r\n    if (this._options.host === \"/\") {\r\n      this._options.host = window.location.hostname;\r\n    }\r\n\r\n    // Set path correctly.\r\n    if (this._options.path) {\r\n      if (this._options.path[0] !== \"/\") {\r\n        this._options.path = \"/\" + this._options.path;\r\n      }\r\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\r\n        this._options.path += \"/\";\r\n      }\r\n    }\r\n\r\n    // Set whether we use SSL to same as current host\r\n    if (\r\n      this._options.secure === undefined &&\r\n      this._options.host !== util.CLOUD_HOST\r\n    ) {\r\n      this._options.secure = util.isSecure();\r\n    } else if (this._options.host == util.CLOUD_HOST) {\r\n      this._options.secure = true;\r\n    }\r\n    // Set a custom log function if present\r\n    if (this._options.logFunction) {\r\n      logger.setLogFunction(this._options.logFunction);\r\n    }\r\n\r\n    logger.logLevel = this._options.debug || 0;\r\n\r\n    this._api = new API(options);\r\n    this._socket = this._createServerConnection();\r\n\r\n    // Sanity checks\r\n    // Ensure WebRTC supported\r\n    if (!util.supports.audioVideo && !util.supports.data) {\r\n      this._delayedAbort(\r\n        PeerErrorType.BrowserIncompatible,\r\n        \"The current browser does not support WebRTC\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Ensure alphanumeric id\r\n    if (!!userId && !util.validateId(userId)) {\r\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\r\n      return;\r\n    }\r\n\r\n    if (userId) {\r\n      this._initialize(userId);\r\n    } else {\r\n      this._api\r\n        .retrieveId()\r\n        .then((id) => this._initialize(id))\r\n        .catch((error) => this._abort(PeerErrorType.ServerError, error));\r\n    }\r\n  }\r\n\r\n  private _createServerConnection(): Socket {\r\n    const socket = new Socket(\r\n      this._options.secure,\r\n      this._options.host!,\r\n      this._options.port!,\r\n      this._options.path!,\r\n      this._options.key!,\r\n      this._options.pingInterval\r\n    );\r\n\r\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\r\n      this._handleMessage(data);\r\n    });\r\n\r\n    socket.on(SocketEventType.Error, (error: string) => {\r\n      this._abort(PeerErrorType.SocketError, error);\r\n    });\r\n\r\n    socket.on(SocketEventType.Disconnected, () => {\r\n      if (this.disconnected) {\r\n        return;\r\n      }\r\n\r\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\r\n      this.disconnect();\r\n    });\r\n\r\n    socket.on(SocketEventType.Close, () => {\r\n      if (this.disconnected) {\r\n        return;\r\n      }\r\n\r\n      this._abort(\r\n        PeerErrorType.SocketClosed,\r\n        \"Underlying socket is already closed.\"\r\n      );\r\n    });\r\n\r\n    return socket;\r\n  }\r\n\r\n  /** Initialize a connection with the server. */\r\n  private _initialize(id: string): void {\r\n    this._id = id;\r\n    this.socket.start(id, this._options.token!);\r\n  }\r\n\r\n  /** Handles messages from the server. */\r\n  private _handleMessage(message: ServerMessage): void {\r\n    const type = message.type;\r\n    const payload = message.payload;\r\n    const peerId = message.src;\r\n\r\n    switch (type) {\r\n      case ServerMessageType.Open: // The connection to the server is open.\r\n        this._lastServerId = this.id;\r\n        this._open = true;\r\n        this.emit(PeerEventType.Open, this.id);\r\n        break;\r\n      case ServerMessageType.Error: // Server error.\r\n        this._abort(PeerErrorType.ServerError, payload.msg);\r\n        break;\r\n      case ServerMessageType.IdTaken: // The selected ID is taken.\r\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\r\n        break;\r\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\r\n        this._abort(\r\n          PeerErrorType.InvalidKey,\r\n          `API KEY \"${this._options.key}\" is invalid`\r\n        );\r\n        break;\r\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\r\n        logger.log(`Received leave message from ${peerId}`);\r\n        this._cleanupPeer(peerId);\r\n        this._connections.delete(peerId);\r\n        break;\r\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\r\n        this.emitError(\r\n          PeerErrorType.PeerUnavailable,\r\n          `Could not connect to peer ${peerId}`\r\n        );\r\n        break;\r\n      case ServerMessageType.Offer: {\r\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\r\n        const connectionId = payload.connectionId;\r\n        let connection = this.getConnection(peerId, connectionId);\r\n\r\n        if (connection) {\r\n          connection.close();\r\n          logger.warn(\r\n            `Offer received for existing Connection ID:${connectionId}`\r\n          );\r\n        }\r\n\r\n        // Create a new connection.\r\n        if (payload.type === ConnectionType.Media) {\r\n          connection = new MediaConnection(peerId, this, {\r\n            connectionId: connectionId,\r\n            _payload: payload,\r\n            metadata: payload.metadata,\r\n          });\r\n          this._addConnection(peerId, connection);\r\n          this.emit(PeerEventType.Call, connection);\r\n        } else if (payload.type === ConnectionType.Data) {\r\n          connection = new DataConnection(peerId, this, {\r\n            connectionId: connectionId,\r\n            _payload: payload,\r\n            metadata: payload.metadata,\r\n            label: payload.label,\r\n            serialization: payload.serialization,\r\n            reliable: payload.reliable,\r\n          });\r\n          this._addConnection(peerId, connection);\r\n          this.emit(PeerEventType.Connection, connection);\r\n        } else {\r\n          logger.warn(`Received malformed connection type:${payload.type}`);\r\n          return;\r\n        }\r\n\r\n        // Find messages.\r\n        const messages = this._getMessages(connectionId);\r\n        for (let message of messages) {\r\n          connection.handleMessage(message);\r\n        }\r\n\r\n        break;\r\n      }\r\n      default: {\r\n        if (!payload) {\r\n          logger.warn(\r\n            `You received a malformed message from ${peerId} of type ${type}`\r\n          );\r\n          return;\r\n        }\r\n\r\n        const connectionId = payload.connectionId;\r\n        const connection = this.getConnection(peerId, connectionId);\r\n\r\n        if (connection && connection.peerConnection) {\r\n          // Pass it on.\r\n          connection.handleMessage(message);\r\n        } else if (connectionId) {\r\n          // Store for possible later use\r\n          this._storeMessage(connectionId, message);\r\n        } else {\r\n          logger.warn(\"You received an unrecognized message:\", message);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Stores messages without a set up connection, to be claimed later. */\r\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\r\n    if (!this._lostMessages.has(connectionId)) {\r\n      this._lostMessages.set(connectionId, []);\r\n    }\r\n\r\n    (this._lostMessages.get(connectionId) as ServerMessage[]).push(message);\r\n  }\r\n\r\n  /** Retrieve messages from lost message store */\r\n  //TODO Change it to private\r\n  public _getMessages(connectionId: string): ServerMessage[] {\r\n    const messages = this._lostMessages.get(connectionId);\r\n\r\n    if (messages) {\r\n      this._lostMessages.delete(connectionId);\r\n      return messages;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Returns a DataConnection to the specified peer. See documentation for a\r\n   * complete list of options.\r\n   */\r\n  connect(\r\n    peer: string,\r\n    options: PeerConnectOption = {}\r\n  ): DataConnection | undefined {\r\n    if (this.disconnected) {\r\n      logger.warn(\r\n        \"You cannot connect to a new Peer because you called \" +\r\n          \".disconnect() on this Peer and ended your connection with the \" +\r\n          \"server. You can create a new Peer to reconnect, or call reconnect \" +\r\n          \"on this peer if you believe its ID to still be available.\"\r\n      );\r\n      this.emitError(\r\n        PeerErrorType.Disconnected,\r\n        \"Cannot connect to new Peer after disconnecting from server.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const dataConnection = new DataConnection(peer, this, options);\r\n    this._addConnection(peer, dataConnection);\r\n    return dataConnection;\r\n  }\r\n\r\n  /**\r\n   * Returns a MediaConnection to the specified peer. See documentation for a\r\n   * complete list of options.\r\n   */\r\n  call(\r\n    peer: string,\r\n    stream: MediaStream,\r\n    options: any = {}\r\n  ): MediaConnection | undefined {\r\n    if (this.disconnected) {\r\n      logger.warn(\r\n        \"You cannot connect to a new Peer because you called \" +\r\n          \".disconnect() on this Peer and ended your connection with the \" +\r\n          \"server. You can create a new Peer to reconnect.\"\r\n      );\r\n      this.emitError(\r\n        PeerErrorType.Disconnected,\r\n        \"Cannot connect to new Peer after disconnecting from server.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!stream) {\r\n      logger.error(\r\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    options._stream = stream;\r\n\r\n    const mediaConnection = new MediaConnection(peer, this, options);\r\n    this._addConnection(peer, mediaConnection);\r\n    return mediaConnection;\r\n  }\r\n\r\n  /** Add a data/media connection to this peer. */\r\n  private _addConnection(peerId: string, connection: BaseConnection): void {\r\n    logger.log(\r\n      `add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`\r\n    );\r\n\r\n    if (!this._connections.has(peerId)) {\r\n      this._connections.set(peerId, []);\r\n    }\r\n    (this._connections.get(peerId) as BaseConnection[]).push(connection);\r\n  }\r\n\r\n  //TODO should be private\r\n  _removeConnection(connection: BaseConnection): void {\r\n    const connections = this._connections.get(connection.peer);\r\n\r\n    if (connections) {\r\n      const index = connections.indexOf(connection);\r\n\r\n      if (index !== -1) {\r\n        connections.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    //remove from lost messages\r\n    this._lostMessages.delete(connection.connectionId);\r\n  }\r\n\r\n  /** Retrieve a data/media connection for this peer. */\r\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\r\n    const connections = this._connections.get(peerId);\r\n    if (!connections) {\r\n      return null;\r\n    }\r\n\r\n    for (let connection of connections) {\r\n      if (connection.connectionId === connectionId) {\r\n        return connection;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\r\n    setTimeout(() => {\r\n      this._abort(type, message);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Emits an error message and destroys the Peer.\r\n   * The Peer is not destroyed if it's in a disconnected state, in which case\r\n   * it retains its disconnected state and its existing connections.\r\n   */\r\n  private _abort(type: PeerErrorType, message: string | Error): void {\r\n    logger.error(\"Aborting!\");\r\n\r\n    this.emitError(type, message);\r\n\r\n    if (!this._lastServerId) {\r\n      this.destroy();\r\n    } else {\r\n      this.disconnect();\r\n    }\r\n  }\r\n\r\n  /** Emits a typed error message. */\r\n  emitError(type: PeerErrorType, err: string | Error): void {\r\n    logger.error(\"Error:\", err);\r\n\r\n    let error: Error & { type?: PeerErrorType };\r\n\r\n    if (typeof err === \"string\") {\r\n      error = new Error(err);\r\n    } else {\r\n      error = err as Error;\r\n    }\r\n\r\n    error.type = type;\r\n\r\n    this.emit(PeerEventType.Error, error);\r\n  }\r\n\r\n  /**\r\n   * Destroys the Peer: closes all active connections as well as the connection\r\n   *  to the server.\r\n   * Warning: The peer can no longer create or accept connections after being\r\n   *  destroyed.\r\n   */\r\n  destroy(): void {\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    logger.log(`Destroy peer with ID:${this.id}`);\r\n\r\n    this.disconnect();\r\n    this._cleanup();\r\n\r\n    this._destroyed = true;\r\n\r\n    this.emit(PeerEventType.Close);\r\n  }\r\n\r\n  /** Disconnects every connection on this peer. */\r\n  private _cleanup(): void {\r\n    for (let peerId of this._connections.keys()) {\r\n      this._cleanupPeer(peerId);\r\n      this._connections.delete(peerId);\r\n    }\r\n\r\n    this.socket.removeAllListeners();\r\n  }\r\n\r\n  /** Closes all connections to this peer. */\r\n  private _cleanupPeer(peerId: string): void {\r\n    const connections = this._connections.get(peerId);\r\n\r\n    if (!connections) return;\r\n\r\n    for (let connection of connections) {\r\n      connection.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\r\n   *  active connections.\r\n   * Warning: The peer can no longer create or accept connections after being\r\n   *  disconnected. It also cannot reconnect to the server.\r\n   */\r\n  disconnect(): void {\r\n    if (this.disconnected) {\r\n      return;\r\n    }\r\n\r\n    const currentId = this.id;\r\n\r\n    logger.log(`Disconnect peer with ID:${currentId}`);\r\n\r\n    this._disconnected = true;\r\n    this._open = false;\r\n\r\n    this.socket.close();\r\n\r\n    this._lastServerId = currentId;\r\n    this._id = null;\r\n\r\n    this.emit(PeerEventType.Disconnected, currentId);\r\n  }\r\n\r\n  /** Attempts to reconnect with the same ID. */\r\n  reconnect(): void {\r\n    if (this.disconnected && !this.destroyed) {\r\n      logger.log(\r\n        `Attempting reconnection to server with ID ${this._lastServerId}`\r\n      );\r\n      this._disconnected = false;\r\n      this._initialize(this._lastServerId!);\r\n    } else if (this.destroyed) {\r\n      throw new Error(\r\n        \"This peer cannot reconnect to the server. It has already been destroyed.\"\r\n      );\r\n    } else if (!this.disconnected && !this.open) {\r\n      // Do nothing. We're still connecting the first time.\r\n      logger.error(\r\n        \"In a hurry? We're still trying to make the initial connection!\"\r\n      );\r\n    } else {\r\n      throw new Error(\r\n        `Peer ${this.id} cannot reconnect because it is not disconnected from the server!`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a list of available peer IDs. If you're running your own server, you'll\r\n   * want to set allow_discovery: true in the PeerServer options. If you're using\r\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\r\n   * your key.\r\n   */\r\n  listAllPeers(cb = (_: any[]) => {}): void {\r\n    this._api\r\n      .listAllPeers()\r\n      .then((peers) => cb(peers))\r\n      .catch((error) => this._abort(PeerErrorType.ServerError, error));\r\n  }\r\n}\r\n","// import Peer, {  RTCConfiguration } from \"@/lib/peerjs\";\r\nconst RTCPeerConnectionConfiguration = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        \"stun:stun.l.google.com:19302\",\r\n        \"stun:stun1.l.google.com:19302\",\r\n        \"stun:stun2.l.google.com:19302\",\r\n        \"stun:stun3.l.google.com:19302\",\r\n        \"stun:stun4.l.google.com:19302\",\r\n        \"stun:stun01.sipphone.com\",\r\n        \"stun:stun.ekiga.net\",\r\n        \"stun:stun.fwdnet.net\",\r\n        \"stun:stun.ideasip.com\",\r\n        \"stun:stun.iptel.org\",\r\n        \"stun:stun.rixtelecom.se\",\r\n        \"stun:stun.schlund.de\",\r\n        \"stun:stunserver.org\",\r\n        \"stun:stun.softjoys.com\",\r\n        \"stun:stun.voiparound.com\",\r\n        \"stun:stun.voipbuster.com\",\r\n        \"stun:stun.voipstunt.com\",\r\n        \"stun:stun.voxgratia.org\",\r\n        \"stun:stun.xten.com\",\r\n\r\n        // \"turn:turn01.hubl.in?transport=udp\",\r\n        // \"turn:turn02.hubl.in?transport=tcp\",\r\n      ],\r\n    },\r\n    {\r\n      urls: \"turn:0.peerjs.com:3478\",\r\n      username: \"peerjs\",\r\n      credential: \"peerjsp\",\r\n    },\r\n    {\r\n      urls: \"turn:numb.viagenie.ca\",\r\n      username: \"webrtc@live.com\",\r\n      credential: \"muazkh\",\r\n    },\r\n    {\r\n      urls: \"turn:192.158.29.39:3478?transport=udp\",\r\n      credential: \"JZEOEt2V3Qb0y27GRntt2u2PAYA=\",\r\n      username: \"28224511:1379330808\",\r\n    },\r\n    {\r\n      urls: \"turn:192.158.29.39:3478?transport=tcp\",\r\n      credential: \"JZEOEt2V3Qb0y27GRntt2u2PAYA=\",\r\n      username: \"28224511:1379330808\",\r\n    },\r\n    {\r\n      urls: \"turn:turn.bistri.com:80\",\r\n      credential: \"homeo\",\r\n      username: \"homeo\",\r\n    },\r\n    {\r\n      urls: \"turn:turn.anyfirewall.com:443?transport=tcp\",\r\n      credential: \"webrtc\",\r\n      username: \"webrtc\",\r\n    },\r\n  ],\r\n  sdpSemantics: \"unified-plan\",\r\n};\r\n\r\nexport default RTCPeerConnectionConfiguration;\r\n","// import Peer, {  RTCConfiguration } from \"@/lib/peerjs\";\r\nconst peerjs_config = {\r\n  RunningHost:\r\n    process.env.NODE_ENV === \"production\" ? \"meowalien.com\" : \"localhost\",\r\n};\r\n\r\nexport default peerjs_config;\r\n","\nimport { Peer } from \"../lib/peerjs/lib/peer\";\nimport { DataConnection } from \"../lib/peerjs/lib/dataconnection\";\nimport { PeerEventType, ConnectionEventType } from \"../lib/peerjs/lib/enums\";\nimport { Options, Vue } from \"vue-class-component\";\nimport RTCconnectionToRemotePeersConfiguration from \"@/config/RTCPeerConnectionConfiguration\";\nimport { useStore, AllMutationTypes } from \"@/store\";\nimport peerjsConfig from \"../config/peerjs_config\";\n// import * as fs from \"fs\";\n/* eslint-disable @typescript-eslint/no-var-requires */\n// import fs from \"fs\";\n// let a = file.readFileSync(\"../config/peerjs.config.json\", \"utf8\");\n// console.log(a);\n// @Options({\n//   components: {\n//     // SendArticleWithPositioning,\n//     // PerChat,\n//   },\n// })\nexport default class RealTimeChatBox extends Vue {\n  nickname = \"\";\n  status = \"Initializing ...\";\n  currentinput = \"\";\n  myPeerID = \"(Not generated yet ...)\";\n  chatList = [{ name: \"SYSTEM\", message: \"DEBUG_MESSAGE\" }];\n  connectTarget = \"\";\n  private peer!: Peer;\n\n  startPeerjs() {\n    console.log(peerjsConfig.RunningHost);\n\n    let vueStore = useStore();\n    let apiToken = vueStore.state.AUTH.API_ACCESS_TOKEN as string;\n    // /* eslint-disable @typescript-eslint/no-var-requires */\n    // let fs = require(\"fs\");\n\n    // fs.readFile(\n    //   \"../config/peerjs.config.json\",\n    //   function (err: Error, data: string) {\n    //     if (err) throw err;\n\n    //     console.log(data.toString());\n    //   }\n    // );\n    this.peer = new Peer(undefined, {\n      host: \"peerjs.localhost\",\n      port: 443,\n      path: \"/\",\n      key: \"peerjs\",\n      secure: true,\n      token: apiToken,\n      config: RTCconnectionToRemotePeersConfiguration,\n      debug: 3,\n    });\n\n    this.peer.on(PeerEventType.Open, (peerID: string) => {\n      console.log(\"On open event\");\n      if (peerID === null) {\n        console.log(\"Error : Received null id from peer open\");\n        return;\n      }\n      console.log(\"NewPeerID : \" + peerID);\n      this.myPeerID = peerID;\n      this.status = \"Awaiting connection...\";\n    });\n\n    // Connection from others\n    this.peer.on(PeerEventType.Connection, (connection: DataConnection) => {\n      console.log(\"On connection event\");\n      try {\n        this.appendNewConnection(connection);\n      } catch (e) {\n        // connection.provider\n        // console.log(connection.provider)\n        this.status = \"Fail to Connect to:\" + connection.peer + \"Error :\" + e;\n        return;\n      }\n\n      this.status = \"Connected to: \" + connection.peer;\n      console.log(this.status);\n\n      connection.on(ConnectionEventType.Data, (data) => {\n        console.log(\"Data recieved: \", data);\n        this.chatList.push({ name: connection.peer, message: data });\n      });\n      connection.on(ConnectionEventType.Close, () => {\n        this.status = \"Connection reset: \" + connection.peer;\n        this.removeConnection(connection.peer);\n      });\n      // }\n    });\n\n    this.peer.on(PeerEventType.Disconnected, (id: string) => {\n      console.log(\"On disconnected event\");\n\n      this.status = \"Disconnected with Server\";\n      console.log(this.status);\n    });\n\n    this.peer.on(PeerEventType.Close, () => {\n      console.log(\"On close event\");\n      this.allConnections.forEach(\n        (connection: DataConnection, connectionId) => {\n          connection.close();\n        }\n      );\n      // this.connectionToRemotePeers = undefined;\n      this.status = \"Connection destroyed. Please refresh\";\n      console.log(\"Connection destroyed\");\n    });\n\n    this.peer.on(PeerEventType.Error, (err: Error) => {\n      console.log(\"On error event\");\n      console.log(err);\n      // alert(\"\" + err);\n    });\n  }\n  private allConnections = new Map();\n  appendNewConnection(connection: DataConnection): void {\n    this.allConnections.set(connection.peer, connection);\n  }\n  removeConnection(connectionID: string): void {\n    this.allConnections.delete(connectionID);\n  }\n  beforeMount() {\n    this.startPeerjs();\n  }\n\n  SubmitMessage() {\n    console.log(\"Enter SubmitMessage\");\n    console.log(\"SubmitMessage - allConnections: \", this.allConnections);\n    let inputText = this.currentinput;\n    this.currentinput = \"\";\n    this.chatList.push({ name: \"ME\", message: inputText });\n    this.allConnections.forEach((connection: DataConnection, connectionID) => {\n      if (!(connection && connection.open)) {\n        this.removeConnection(connection.peer);\n        return;\n      }\n      connection.send(inputText);\n      console.log(\"Sent To: \" + connection.peer + \" , Message: \" + inputText);\n    });\n  }\n\n  async DoConnect() {\n    let targetID = this.connectTarget;\n    this.connectTarget = \"\";\n    console.log(\"Try to connect to: \" + targetID);\n    let conn = this.peer.connect(targetID, {\n      reliable: true,\n    });\n    if (conn === undefined) {\n      return;\n    }\n    let newConnection = conn as DataConnection;\n    this.appendNewConnection(newConnection);\n    newConnection.on(ConnectionEventType.Open, () => {\n      this.status = \"Connected to: \" + newConnection.peer;\n      console.log(this.status);\n    });\n    newConnection.on(ConnectionEventType.Data, (data: string) => {\n      this.chatList.push({ name: newConnection.peer, message: data });\n    });\n    newConnection.on(ConnectionEventType.Close, () => {\n      this.status = \"Connection closed: \" + newConnection.peer;\n    });\n  }\n}\n","import { render } from \"./RealTimeChatBox_receiver.vue?vue&type=template&id=66b60104\"\nimport script from \"./RealTimeChatBox_receiver.vue?vue&type=script&lang=ts\"\nexport * from \"./RealTimeChatBox_receiver.vue?vue&type=script&lang=ts\"\n\nimport \"./RealTimeChatBox_receiver.vue?vue&type=style&index=0&id=66b60104&scope=true&lang=css\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\r\nimport Home from \"../views/Home.vue\";\r\nimport RealTimeChatBox from \"../views/RealTimeChatBox_receiver.vue\";\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: Home,\r\n    meta: {\r\n      title: \"RabbitGather\",\r\n      metaTags: [\r\n        {\r\n          name: \"description\",\r\n          content: \"RabbitGather Main page\",\r\n        },\r\n        {\r\n          property: \"og:description\",\r\n          content: \"RabbitGather Main page\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    path: \"/chat\",\r\n    name: \"RealTimeChatBox\",\r\n    component: RealTimeChatBox,\r\n    meta: {\r\n      title: \"RabbitGather - RealTimeChatBox\",\r\n      metaTags: [\r\n        {\r\n          name: \"description\",\r\n          content: \"RabbitGather - RealTimeChatBox\",\r\n        },\r\n        {\r\n          property: \"og:description\",\r\n          content: \"RabbitGather - RealTimeChatBox\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () =>\r\n      import(/* webpackChunkName: \"about\" */ \"../views/Login.vue\"),\r\n    meta: {\r\n      title: \"RabbitGather - Login\",\r\n      metaTags: [\r\n        {\r\n          name: \"description\",\r\n          content: \"RabbitGather Login page\",\r\n        },\r\n        {\r\n          property: \"og:description\",\r\n          content: \"RabbitGather Login page\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\n// This callback runs before every route change, including on page load.\r\nrouter.beforeEach((to, from, next) => {\r\n  // This goes through the matched routes from last to first, finding the closest route with a title.\r\n  // e.g., if we have `/some/deep/nested/route` and `/some`, `/deep`, and `/nested` have titles,\r\n  // `/nested`'s will be chosen.\r\n  const nearestWithTitle = to.matched\r\n    .slice()\r\n    .reverse()\r\n    .find((r) => r.meta && r.meta.title);\r\n\r\n  // Find the nearest route element with meta tags.\r\n  const nearestWithMeta = to.matched\r\n    .slice()\r\n    .reverse()\r\n    .find((r) => r.meta && r.meta.metaTags);\r\n\r\n  const previousNearestWithMeta = from.matched\r\n    .slice()\r\n    .reverse()\r\n    .find((r) => r.meta && r.meta.metaTags);\r\n\r\n  // If a route with a title was found, set the document (page) title to that value.\r\n  if (nearestWithTitle) {\r\n    document.title = nearestWithTitle.meta.title as string;\r\n  } else if (previousNearestWithMeta) {\r\n    document.title = previousNearestWithMeta.meta.title as string;\r\n  }\r\n\r\n  // Remove any stale meta tags from the document using the key attribute we set below.\r\n  Array.from(document.querySelectorAll(\"[data-vue-router-controlled]\")).map(\r\n    (el) => el.parentNode!.removeChild(el)\r\n  );\r\n\r\n  // Skip rendering meta tags if there are none.\r\n  if (!nearestWithMeta) return next();\r\n\r\n  // Turn the meta tag definitions into actual elements in the head.\r\n  (nearestWithMeta.meta as any).metaTags\r\n    .map((tagDef: any) => {\r\n      const tag = document.createElement(\"meta\");\r\n\r\n      Object.keys(tagDef).forEach((key) => {\r\n        tag.setAttribute(key, tagDef[key]);\r\n      });\r\n\r\n      // We use this to track which meta tags we create so we don't interfere with other ones.\r\n      tag.setAttribute(\"data-vue-router-controlled\", \"\");\r\n\r\n      return tag;\r\n    })\r\n    // Add the meta tags to the document head.\r\n    .forEach((tag: any) => document.head.appendChild(tag));\r\n\r\n  next();\r\n});\r\n\r\nimport { useStore } from \"@/store\";\r\nimport { AuthGetterTypes } from \"@/store/auth/getters\";\r\n\r\nfunction isAuthenticated(): boolean {\r\n  return useStore().getters[AuthGetterTypes.isAuthenticated];\r\n}\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log(\"isAuthenticated() : \" + isAuthenticated());\r\n  if (to.name !== \"Login\" && !isAuthenticated()) {\r\n    next({ name: \"Login\" });\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=64c4985f&lang=css\"","<template>\r\n  <!-- <div id=\"nav\"> -->\r\n  <router-link to=\"/chat\">Chat </router-link>\r\n  <router-link to=\"/login\">Login </router-link>\r\n  <router-link to=\"/\"> Home</router-link>\r\n\r\n  <router-view />\r\n  <!-- </div> -->\r\n</template>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  background: black;\r\n}\r\n#app {\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  height: 100vh;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  background: white;\r\n}\r\n</style>\r\n","import { render } from \"./App.vue?vue&type=template&id=64c4985f\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=64c4985f&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable no-console */\r\n\r\nimport { register } from \"register-service-worker\";\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready() {\r\n      console.log(\r\n        \"App is being served from cache by a service worker.\\n\" +\r\n          \"For more details, visit https://goo.gl/AFskqB\"\r\n      );\r\n    },\r\n    registered() {\r\n      console.log(\"Service worker has been registered.\");\r\n    },\r\n    cached() {\r\n      console.log(\"Content has been cached for offline use.\");\r\n    },\r\n    updatefound() {\r\n      console.log(\"New content is downloading.\");\r\n    },\r\n    updated() {\r\n      console.log(\"New content is available; please refresh.\");\r\n    },\r\n    offline() {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    },\r\n    error(error) {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    },\r\n  });\r\n}\r\n","import { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport \"./registerServiceWorker\";\r\nimport router from \"./router\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\n\r\n// import PositionFuncs from \"./global/Position\";\r\n\r\nconst vueapp = createApp(App);\r\nvueapp.use(store).use(router).mount(\"#app\");\r\n\r\n// App.directive(\"title\", {\r\n//   inserted: function (el, binding) {\r\n//     document.title = el.dataset.title;\r\n//   },\r\n// });\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RealTimeChatBox_receiver.vue?vue&type=style&index=0&id=66b60104&scope=true&lang=css\""],"sourceRoot":""}