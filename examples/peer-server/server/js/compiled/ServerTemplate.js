// Generated by CoffeeScript 2.5.1
(function() {
  ` Loads a template from the name of a zip that lives on the server.`;
  var ref,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  ref = window.ServerTemplateModel = class ServerTemplateModel extends Backbone.Model {
    constructor() {
      super(...arguments);
      this.handleTemplate = this.handleTemplate.bind(this);
    }

    initialize(options) {
      this.handleZipFcn = options.handleZipFcn;
      this.templateUri = options.templateUri;
      if (this.templateUri !== "blank") {
        return this.handleTemplate();
      }
    }

    handleTemplate() {
      var _this, request;
      boundMethodCheck(this, ref);
      // Use XML so that zip encodings don't break. 
      request = new XMLHttpRequest();
      request.open("GET", "/template/" + this.templateUri, true);
      request.responseType = 'blob';
      _this = this;
      request.onreadystatechange = function(evt) {
        if (this.readyState === 4 && this.status === 200) {
          _this.handleZipFcn(this.response);
        }
        if (this.readyState === 4 && this.status === 404) {
          return console.error("Error loading template.");
        }
      };
      return request.send();
    }

  };

}).call(this);
