// Generated by CoffeeScript 2.5.1
(function() {
  `View of a single file in the editor (depends on js/img/css etc)`;
  var ref,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  ref = window.ServerFileView = (function() {
    class ServerFileView extends Backbone.View {
      constructor() {
        super(...arguments);
        this.render = this.render.bind(this);
        this.renderAsSourceCode = this.renderAsSourceCode.bind(this);
        this.renderAsImage = this.renderAsImage.bind(this);
        this.updateContents = this.updateContents.bind(this);
        this.onDestroy = this.onDestroy.bind(this);
      }

      initialize(options) {
        this.tplSourceCode = Handlebars.templates["source-code"];
        this.tplImage = Handlebars.templates["image"];
        return this.model.on("destroy", this.onDestroy);
      }

      render() {
        boundMethodCheck(this, ref);
        if (this.model.get("fileType") !== ServerFile.fileTypeEnum.IMG) {
          this.renderAsSourceCode();
        } else {
          this.renderAsImage();
        }
        return this;
      }

      renderAsSourceCode() {
        var editorMode, fileContents;
        boundMethodCheck(this, ref);
        $(this.el).html(this.tplSourceCode);
        
        // Set up ACE editor
        fileContents = $(this.el).find(".file-contents");
        fileContents.text(this.model.get("contents"));
        this.aceEditor = ace.edit(fileContents[0]);
        this.aceEditor.setTheme("ace/theme/tomorrow_night_eighties");
        this.aceEditor.setFontSize("12px");
        editorMode = "ace/mode/html"; // Default to HTML
        switch (this.model.get("fileType")) {
          case ServerFile.fileTypeEnum.CSS:
            editorMode = "ace/mode/css";
            break;
          case ServerFile.fileTypeEnum.JS:
            editorMode = "ace/mode/javascript";
        }
        this.aceEditor.getSession().setMode(editorMode);
        return this.aceEditor.on("change", this.updateContents);
      }

      renderAsImage() {
        boundMethodCheck(this, ref);
        $(this.el).html(this.tplImage);
        return this.$("img").attr("src", this.model.get("contents"));
      }

      updateContents() {
        boundMethodCheck(this, ref);
        return this.model.save("contents", this.aceEditor.getValue());
      }

      onDestroy() {
        boundMethodCheck(this, ref);
        if (this.model.get("fileType") !== ServerFile.fileTypeEnum.IMG) {
          return this.aceEditor.destroy();
        }
      }

    };

    ServerFileView.prototype.events = {
      "remove": "onDestroy"
    };

    return ServerFileView;

  }).call(this);

}).call(this);
