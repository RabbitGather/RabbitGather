// Generated by CoffeeScript 2.5.1
(function() {
  var ref,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  ref = window.DatabaseView = (function() {
    class DatabaseView extends Backbone.View {
      constructor() {
        super(...arguments);
        this.render = this.render.bind(this);
        this.runQuery = this.runQuery.bind(this);
      }

      initialize(options) {
        this.userDatabase = options.userDatabase;
        this.tmplUserDatabase = Handlebars.templates["user-database"];
        this.userDatabase.on("initLocalStorage", this.render);
        return this.render();
      }

      render() {
        var fileContents, json;
        boundMethodCheck(this, ref);
        json = this.userDatabase.toString(true);
        $(this.el).html(this.tmplUserDatabase({
          json: json
        }));
        this.queryEditor = this.$(".query-editor");
        this.output = this.$(".output");
        hljs.highlightBlock(this.output[0], false, false);
        // Set up ACE editor
        fileContents = this.queryEditor;
        this.aceEditor = ace.edit(fileContents[0]);
        this.aceEditor.setTheme("ace/theme/tomorrow_night_eighties");
        this.aceEditor.setFontSize("12px");
        this.aceEditor.getSession().setMode("ace/mode/javascript");
        return this;
      }

      runQuery() {
        var json, query, result;
        boundMethodCheck(this, ref);
        query = this.aceEditor.getValue();
        if (!/return/.test(query)) {
          query += "return database().get();";
        }
        result = this.userDatabase.runQuery(query);
        json = JSON.stringify(result, null, 4);
        this.output.text(json);
        return hljs.highlightBlock(this.output[0], false, false);
      }

    };

    DatabaseView.prototype.el = "#database-view";

    DatabaseView.prototype.events = {
      "click .run-query": "runQuery"
    };

    return DatabaseView;

  }).call(this);

}).call(this);
