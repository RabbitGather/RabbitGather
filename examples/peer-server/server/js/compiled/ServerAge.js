// Generated by CoffeeScript 2.5.1
(function() {
  window.ServerAge = class ServerAge {
    constructor(elem) {
      var ONE_DAY, ONE_HOUR, ONE_MINUTE, ONE_SECOND, ONE_WEEK, start, timeElem;
      this.convertToString = this.convertToString.bind(this);
      this.elem = elem;
      ONE_SECOND = 1000;
      ONE_MINUTE = ONE_SECOND * 60;
      ONE_HOUR = ONE_MINUTE * 60;
      ONE_DAY = ONE_HOUR * 24;
      ONE_WEEK = ONE_DAY * 7;
      timeElem = this.elem.find(".server-age");
      timeElem.html("0 minutes");
      start = (new Date()).getTime(); // Get time gives time in milliseconds
      setInterval(() => {
        var curr, days, diff, first, hours, minutes, time, weeks;
        curr = (new Date()).getTime();
        diff = curr - start;
        time = "";
        first = true;
        weeks = Math.floor(diff / ONE_WEEK);
        time += this.convertToString(weeks, "week", first);
        diff = diff - (weeks * ONE_WEEK);
        first = first ? weeks < 1 : false; // Is this the first non-zero time?
        days = Math.floor(diff / ONE_DAY);
        time += this.convertToString(days, "day", first);
        diff = diff - (days * ONE_DAY);
        first = first ? days < 1 : false; // Is this the first non-zero time?
        hours = Math.floor(diff / ONE_HOUR);
        time += this.convertToString(hours, "hour", first);
        diff = diff - (hours * ONE_HOUR);
        first = first ? hours < 1 : false; // Is this the first non-zero time?
        minutes = Math.floor(diff / ONE_MINUTE);
        time += this.convertToString(minutes, "minute", first);
        return timeElem.html(time);
      }, ONE_MINUTE);
    }

    convertToString(number, name, first) {
      var start;
      if (number < 1) {
        return "";
      }
      if (number > 1) {
        name += "s";
      }
      start = !first ? ", " : "";
      return start + number + " " + name;
    }

  };

}).call(this);
